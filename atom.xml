<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[郭润民的博客]]></title>
  <link href="http://grunmin.github.io/atom.xml" rel="self"/>
  <link href="http://grunmin.github.io/"/>
  <updated>2013-11-15T21:46:54+08:00</updated>
  <id>http://grunmin.github.io/</id>
  <author>
    <name><![CDATA[Grunmin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[广工打铁记]]></title>
    <link href="http://grunmin.github.io/blog/2013/11/15/yan-gong-da-tie-ji/"/>
    <updated>2013-11-15T21:30:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/11/15/yan-gong-da-tie-ji</id>
    <content type="html"><![CDATA[<h3>day1</h3>

<p>广工的老师与华师的老师的一个比较大的区别是，华师的老师讲课时比较幽默风趣，广工的老师则不是很爱笑。也许这跟专业环境和学生群体有关。老师们说话很有条理，充分体现理工科的思维优势，我很喜欢。因为这跟我很像。当我讲技术的时候，我只讲技术，力争将其讲清楚，而不会去追求其他。不过也确实，纯手熟的专业，没有多少技巧性艺术性可言，只要愿意去做，都会懂的。</p>

<!-- more -->


<p>8点30分，金工实习前的安全教育，老师播放的视频不知道时什么年代的了，画面失真，声音也时常高八度低八度。9点，开始焊工课程。教电焊的是位高大威猛的男老师，在一间间隔成茅厕摸样的车间连讲带吓，让我们去摸那把夹在焊钳上的，带着火花的铁锤。接下来的实操是相当有趣的，电弧，火花，发红的铁水，在一间间“茅厕”里释放自己短暂的青春。我焊了两次都意犹未尽，听说有同学被弧光吓得大叫而不敢下手，呵呵。</p>

<p>下午的内容是塑料焊，就不是那么有趣了。一来时间短，二来不像焊工。因为我们花了绝大多数时间来讨论和设计，切片，最后时间不够用了，草草交了一份作品，是个坦克模型。最后被当作垃圾处理了，这是后话。</p>

<p>说到广工，不能不提到它的食堂。有人说，吃在华师，我不能同意。广工的食堂整体上更加高端大气（真的高端，每一餐都好贵），尤其是一饭，装㶇得像个宾馆，重点是，饭菜的味道还不赖，而且款式比华师多的多。现在回来看看华师食堂里每个窗口同样的饭菜，内心深深觉得华师的厨师都应该拖出去枪毙。每个窗口都是千篇一律，毫无新意，而且每一种都拖泥带水，就像家洲所说，在华师吃饭，就像“在地牢里吃屎”。不过呢，广工的食堂好不好，还需要一段时间才能评定。值得一提的是，我大光一在广工依然发挥优良传统，吃饭时必然成群结伙。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress博客搭建和个性化配置]]></title>
    <link href="http://grunmin.github.io/blog/2013/11/04/octopressda-jian-he-ge-xing-hua-pei-zhi/"/>
    <updated>2013-11-04T15:02:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/11/04/octopressda-jian-he-ge-xing-hua-pei-zhi</id>
    <content type="html"><![CDATA[<p>使用octopress搭建博客的人，大概都会喜欢写关于如何搭建配置octopress的文章。因为它的高定制性，为极客们带来很多乐趣。从首页的配置，到分类，评论，个人信息，社会化分享等的配置，内容繁多。而且这是我第二次搭建octopress环境了，发现上一次的配置有一部分不能clone到本机上。因此，把配置的过程记录下来是十分有必要的。<br/>
我的意愿是记录配置的过程，顺便整理大牛们关于这方面的一些说明。网络上相关资料有很多，没有实践过的没有摘录在这里。所有的代码实现都是直接引用前辈们的。另外，本博的配置环境是linux fedora 18.</p>

<!-- more -->


<h4><a href="http://octopress.org/">octopress官方网站</a></h4>

<p>octopress的配置都可以在官网上找到。事实上，遇到问题查询官网文档是最有效率的方法。</p>

<h3>github的设置</h3>

<h4>创建仓库</h4>

<p>登陆github网站，注册一个用户，假设为grunmin。<br/>
创建一个仓库，命名为username.github.com，例如<code>grunmin.github.com</code></p>

<h4>使用密钥登陆github</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[ -f ~/.ssh/id_rsa.pub ]] || ssh-keygen -t rsa     #生成密钥对</span></code></pre></td></tr></table></div></figure>


<p>按默认一直确认即可。<br/>
在github帐号设置里找到ssh的设置，添加一个ssh key。<br/>
进入~/.ssh/找到id_rsa.pub文件，把里面的内容填到key里，title不填。<br/>
这样做的好处是之后push到仓库上时可以不用输入密码。</p>

<h3>安装ruby</h3>

<p>查看ruby版本</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby --version  # 必须显示1.9.3</span></code></pre></td></tr></table></div></figure>


<p>安装方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby
</span><span class='line'>rvm install 1.9.3
</span><span class='line'>rvm use 1.9.3
</span><span class='line'>rvm rubygems latest</span></code></pre></td></tr></table></div></figure>


<p>若有显示命名未找到，直接下载安装即可。</p>

<h3>安装octopress</h3>

<p>在安装octopress之前，确保已安装git。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<p>这里容易出现三个问题：<br/>
1、已安装rvm和bundler，但显示找不到命令。</p>

<p>用绝对路径：<code>/home/username/.rvm/bin/rvm</code>
<code>/home/username/.rvm/bin/bundler</code><br/>
2、执行bundler install时显示：GemfileNotFound error?</p>

<p>可能在安装的过程中退出了octopress目录，进入后执行即可。<br/>
3、执行rake install时显示</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake aborted!
</span><span class='line'>No Rakefile found (looking for: rakefile, Rakefile, rakefile.rb, Rakefile.rb)</span></code></pre></td></tr></table></div></figure>


<p>同理，进入安装目录即可。</p>

<h3>将博客部署到github上</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages </span></code></pre></td></tr></table></div></figure>


<p>此时会要求输入仓库的url，可以在github仓库内容业的右下角找到。<br/>
例如我的是<code>git@github.com:grunmin/grunmin.github.com.git</code><br/>
成功后即可用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["title"]</span></code></pre></td></tr></table></div></figure>


<p>生成新文章，文章在source/_post/目录下，文件名构成为时间和标题的拼音。之后执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview   </span></code></pre></td></tr></table></div></figure>


<p>此时可以预览(浏览器打开localhost:4000可看到效果。）如果没有问题，则执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy 
</span><span class='line'>git add .
</span><span class='line'>git comment -m "comment"
</span><span class='line'>git push origin source </span></code></pre></td></tr></table></div></figure>


<p>保存到仓库。<br/>
需要注意的是执行git命令时应处于octopress目录，并且checkout到source分支，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress
</span><span class='line'>git checkout source
</span><span class='line'>git add .
</span><span class='line'>git commit -m "comment"
</span><span class='line'>git push origin souce</span></code></pre></td></tr></table></div></figure>


<h3>从新电脑上恢复博客内容：</h3>

<p>找到博客仓库的url，执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone -b source (url) octopress   #把source 克隆到本地octopress目录上</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress
</span><span class='line'>git clone (url) _deploy   #克隆master分支，它存放着博客内容。</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>rake install
</span><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>之后操作同上，有问题照葫芦画瓢。</p>

<h3>octopress博客的个性化配置</h3>

<h4>添加文章分类（category)</h4>

<p>1、增加category_list插件<br/>
将下面的代码写到<code>plugins/category_list_tag.rb</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module Jekyll
</span><span class='line'>  class CategoryListTag &lt; Liquid::Tag
</span><span class='line'>    def render(context)
</span><span class='line'>      html = ""
</span><span class='line'>      categories = context.registers[:site].categories.keys
</span><span class='line'>      categories.sort.each do |category|
</span><span class='line'>        posts_in_category = context.registers[:site].categories[category].size
</span><span class='line'>        category_dir = context.registers[:site].config['category_dir']
</span><span class='line'>        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
</span><span class='line'>        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://grunmin.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
</span><span class='line'>      end
</span><span class='line'>      html
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)</span></code></pre></td></tr></table></div></figure>


<p>2、增加侧边栏<br/>
将下面的代码写到<code>source/_includes/asides/category_list.html</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;section&gt;
</span><span class='line'>  &lt;h1&gt;Categories&lt;/h1&gt;
</span><span class='line'>  &lt;ul id="categories"&gt;
</span><span class='line'>    {\% category_list \%} #代码中应去掉\
</span><span class='line'>  &lt;/ul&gt;
</span><span class='line'>&lt;/section&gt;</span></code></pre></td></tr></table></div></figure>


<p>修改_config.yml文件，找到<code>default_asides:</code><br/>
在中括号内添加
<code>asides/category_list.html</code></p>

<p>添加的位置决定在页面显示的位置，注意用逗号隔开。<br/>
用vim编辑器粘贴的话可能会自动缩进，启用粘贴模式或用其他编辑器即可。</p>

<h4>添加社会化评论</h4>

<p>octopress 产生静态网页，不支持评论功能，所以我们用第三方评论系统。好消息是octopress已为我们配置好了Disqus，我们只需要稍微填写以下信息即可。<br/>
1、首先在<a href="http://www.disqus.com/">Disqus</a> 注册一个帐号，点击添加到我的网页，添加站点信息，比如我的<code>grunmin.github.io</code><br/>
2、修改_config.yml文件，找到这一段：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Disqus Comments 
</span><span class='line'>disqus_short_name: 
</span><span class='line'>disqus_show_comment_count: false</span></code></pre></td></tr></table></div></figure>


<p>添加你的disqus用户名，并把false修改成true即可。注意冒号后面有空格。<br/>
此外，可以用国内的多说系统，速度较快，且比较符合景德镇村民的需要。之前我用的就是这个，但是没有记录配置过程，这次克隆时多说系统没有成功启动，因此不折腾了，有需要的话可以自行谷歌。</p>

<h4>导航栏设置</h4>

<p>导航栏的设置在<code>source\_includes\custom\navigation.html</code><br/>
我们可以将Blog和Archives修改为首页和归档，也可以在此添加一个标签页，此时应使用命令<code>rake new_page['about']</code>创建一个页面，页面路径为<code>source\about\index.markdown</code>;<br/>
修改后的文件如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;ul class="main-navigation"&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://grunmin.github.io/"&gt;首页&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://grunmin.github.io/blog/archives"&gt;归档&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>  &lt;li&gt;&lt;a href="http://grunmin.github.io/about"&gt;关于&lt;/a&gt;&lt;/li&gt; 
</span><span class='line'>&lt;/ul&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>持续更新…………</strong></p>

<h4>参考文章：</h4>

<p><a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/">利用Octopress搭建一个Github博客</a></p>

<p><a href="http://www.yangzhiping.com/tech/octopress.html">Ruby开源项目介绍(1)：octopress——像黑客一样写博客</a></p>

<p><a href="http://codemacro.com/2012/07/18/add-category-list-to-octopress/">为octopress添加分类(category)列表</a></p>

<p><a href="http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html">冯威的学习专栏&mdash;-记录工作学习点滴</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RHCE note 9]]></title>
    <link href="http://grunmin.github.io/blog/2013/11/03/rhce-note-9/"/>
    <updated>2013-11-03T23:20:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/11/03/rhce-note-9</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>unit 2</h2>

<h3>配置sudoers</h3>

<p>文件/etc/sudoers是只读文件，保存时需加！强制保存.<br/>
实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@desktop31 ~]# ll /etc/sudoers
</span><span class='line'>-r--r-----. 1 root root 4002 Mar  2  2012 /etc/sudoers</span></code></pre></td></tr></table></div></figure>


<p>vi sudoers</p>

<ol>
<li>sudoers语法规则</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user1    machine=(user2) command</span></code></pre></td></tr></table></div></figure>


<p>
实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@desktop31 ~]# cat /etc/sudoers | grep -v ^#
</span><span class='line'>root  ALL=(ALL)   ALL</span></code></pre></td></tr></table></div></figure>


<p>说明:root能在所有机器上以所有用户的身份执行任何命令。</p>

<ol>
<li>授予组成员访问任何命令的权限</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%groupname   ALL=    ALL</span></code></pre></td></tr></table></div></figure>


<p>实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@desktop31 ~]# cat /etc/sudoers | grep %wheel
</span><span class='line'>%wheel    ALL=(ALL)   ALLj</span></code></pre></td></tr></table></div></figure>


<p>说明：wheel组能在所有机器上以所有用户身份执行任何命令。</p>

<ol>
<li>无需提供密码的设置</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user machine=(user2) NOPASSWD: ALL</span></code></pre></td></tr></table></div></figure>


<p>实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user1   ALL=(root)      NOPASSWD: ALL</span></code></pre></td></tr></table></div></figure>


<ol>
<li>授予多名用户具有sudo权限</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>User_Alias   username = user1, user2, user3
</span><span class='line'>username  machine=(user)  ALL</span></code></pre></td></tr></table></div></figure>


<p>实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>User_Alias ADMINS = user01, user001
</span><span class='line'>ADMIN   ALL=(ALL)       NOPASSWD: ALL</span></code></pre></td></tr></table></div></figure>


<ol>
<li>设置用户对特定命令列表具有sudo权限</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Cmnd_Alias type = command, command
</span><span class='line'>username  ALL=(ALL)   type</span></code></pre></td></tr></table></div></figure>


<p>实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe, /bin/mount, /bin/umount
</span><span class='line'>ADMINS  ALL=(ALL)       NOPASSWD: STORAGE</span></code></pre></td></tr></table></div></figure>


<h3>Kerberos配置</h3>

<h4>安装</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum groupinstall -y directory-client
</span><span class='line'>yum install -y openldap-clients
</span><span class='line'>yum install -y krb5-workstation</span></code></pre></td></tr></table></div></figure>


<h4>配置</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>authconfig --enableldap --ldapserver=instructor.example.com --enableldaptls --ldaploadcacert=ftp://instructor.example.com/pub/example-ca.crt --ldapbasedn="dc=example,dc=com" --disableldapauth --enablekrb5 --krb5kdc=instructor.example.com --krb5adminserver=instructor.example.com --krb5realm=EXAMPLE.COM --enablesssd --enablesssdauth --update</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--enablceldaptls 开启tls
</span><span class='line'>--ldaploadcacert derberos证书下载目录
</span><span class='line'>--ldapbasedn 基准dn
</span><span class='line'>--disableldapauth 禁止ldap认证
</span><span class='line'>--krb5realm 域名
</span><span class='line'>--enablesssd --enablesssdauth 开启sssd认证</span></code></pre></td></tr></table></div></figure>


<h4>测试配置：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>getent passwd ldapuserX
</span><span class='line'>ssh ldapuserX@serverX</span></code></pre></td></tr></table></div></figure>


<p>实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo cacerts]# getent passwd ldapuser1
</span><span class='line'>ldapuser1:*:1701:1701:LDAP Test User 1:/home/guests/ldapuser1:/bin/bash
</span><span class='line'>[root@demo cacerts]# ssh ldapuser1@serverX
</span><span class='line'>ldapuser1@serverX's password: kerberos</span></code></pre></td></tr></table></div></figure>


<h2>unit 3</h2>

<h3>Bash 编程</h3>

<ul>
<li><p>包含bash命令的文件第一行应为：
#!/bin/bash</p></li>
<li><p>查看环境变量：<br/>
<code>echo $PATH</code><br/>
<code>set</code><br/>
<code>env</code><br/>
实例：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@desktop31 ~]# echo $PATH
</span><span class='line'>/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>变量赋值,使用
str=value
$str 或者 ${str}</p></li>
<li><p>添加目录到环境变量：<br/>
<code>PATH=$PATH:path</code><br/>
实例：<br/>
<code>PATH=$PATH:/root</code></p></li>
<li><p>创建全局变量：<br/>
<code>export $NAME</code></p></li>
<li><p>命令替换<br/>
<code>$( shell command)</code><br/>
`shell command`<br/>
实例1：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>touch datafile.$(id -un)
</span><span class='line'>[root@desktop31 ~]# ls | grep datafile
</span><span class='line'>datafile.root</span></code></pre></td></tr></table></div></figure>


<p>实例2：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@desktop31 ~]# echo $TODAY
</span><span class='line'>[root@desktop31 ~]# TODAY=`date +%Y-%m-%d`
</span><span class='line'>[root@desktop31 ~]# echo $TODAY
</span><span class='line'>2013-10-26</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>弱引用，强引用和转义</p></li>
<li><p>bash编程实例：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>添加用户  
</span><span class='line'>#!/bin/bash
</span><span class='line'>if grep "^$1:" /etc/passwd ; then
</span><span class='line'>  echo "$1 is exist"
</span><span class='line'>else
</span><span class='line'>  useradd $1;
</span><span class='line'>  echo redhat |passwd --stdin $1;
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>查看网络主机
</span><span class='line'>#!/bin/bash
</span><span class='line'>read -p "Please input a ip addr:" IP
</span><span class='line'>ping -c2 $IP &gt; /dev/null 2&gt;&1
</span><span class='line'>if [ $? -eq 0 ];then
</span><span class='line'>  echo "$IP is up..."
</span><span class='line'>else
</span><span class='line'>  echo "$IP is down..."
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>无题……
</span><span class='line'>#!/bin/bash
</span><span class='line'>read -p "Please choice y/n" YN
</span><span class='line'>if [ $YN == y -o $YN == Y  -o $YN == 'yes' ]; then
</span><span class='line'>  echo "Continue..."
</span><span class='line'>elif [ $YN == n -o $YN == N -o $YN == 'no' ]; then
</span><span class='line'>  exit 1
</span><span class='line'>else
</span><span class='line'>  echo "other"
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>检查服务运行状态
</span><span class='line'>#!/bin/bash
</span><span class='line'>read -p "Plese input a service name:" SN
</span><span class='line'>SERVICE=$(netstat -anutlp |grep $SN)
</span><span class='line'>if test -n "$SERVICE" ; then
</span><span class='line'>  echo "$SN is running..."
</span><span class='line'>else
</span><span class='line'>  echo "$SN is down..."
</span><span class='line'>fi</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>添加用户
</span><span class='line'>#!/bin/bash
</span><span class='line'>for Name in usera userb userc a b c;
</span><span class='line'>do
</span><span class='line'>        if grep "^$Name:" /etc/passwd &gt; /dev/null 2&gt;&1; then
</span><span class='line'>                echo "User exist!";
</span><span class='line'>        else
</span><span class='line'>                useradd $Name;
</span><span class='line'>                echo "Add user $Name succeed!";
</span><span class='line'>                echo "redhat" | passwd --stdin $Name &gt; /dev/null 2&gt;&1;
</span><span class='line'>        fi
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>删除用户
</span><span class='line'>#!/bin/bash
</span><span class='line'>for Name in usera userb userc a b c;
</span><span class='line'>do
</span><span class='line'>        if grep "^$Name:" /etc/passwd &gt; /dev/null 2&gt;&1 ; then
</span><span class='line'>                userdel $Name;
</span><span class='line'>                rm -rf /home/$Name;
</span><span class='line'>                rm -rf /var/mail/$Name;
</span><span class='line'>                echo "user $Name delete succeed!";
</span><span class='line'>        fi
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>比较文件内容diff<br/>
diff -Naur file1 file2 > patchfile  可以制作补丁文件</p></li>
<li><p>补丁命令patch
实例：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># patch issue patchfile
</span><span class='line'>patching file issue
</span><span class='line'># patch -b &lt; patch file
</span><span class='line'>patching file hosts
</span><span class='line'>patching file network</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>过滤 grep
几个需要记住的参数：<br/>
-i  不区分大小写<br/>
-v 返回不包含特定字符的行</p></li>
<li><p>剪切cut<br/>
-f 指定第几个字段<br/>
-d 分隔符<br/>
实例：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cut -f3 -d: /etc/hosts //取出hosts文件中以:为分隔符的第3个字段
</span><span class='line'>[root@demo ~]# ip addr |grep "inet " |cut -d" " -f6 |cut -d/ -f1
</span><span class='line'>127.0.0.1
</span><span class='line'>192.168.0.250</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>tail 和 head<br/>
tail显示文件末尾10行（默认）<br/>
head显示文件开头10行（默认）<br/>
均可-n 参数后面接数字更改输出行数<br/>
tail -f可以持续显示文件的更新，例如<br/>
tail -f /var/log/messages<br/>
系统管理员常用</p></li>
<li><p>wc显示文件信息<br/>
-l 行数<br/>
-w 字数<br/>
-c 字节数
-m 字符数</p></li>
<li><p>排序sort</p></li>
<li><p>取唯一uniq</p></li>
</ul>


<h3>默认用户属性</h3>

<p>在/etc/login.defs及/etc/default/useradd中定义<br/>
chage命令可以调整属性</p>

<h2>unit 4</h2>

<p>gpg的使用<br/>
  + 流程：<br/>
  由user1产生密钥对，公钥导出给需要向user1传送文件的主机user2。<br/>
  gpg &mdash;gen-key <br/>
  gpg -K 查看私钥<br/>
  gpg -k 查看公钥<br/>
  gpg &mdash;export &mdash;armor key-id -o > file.key<br/>
  user2导入公钥加密文件，传送给user1。<br/>
  gpg &mdash;import file.key<br/>
  gpg -e -armor -r key-id file<br/>
  user1运用私钥解密文件，用私钥前需输入密码。<br/>
  gpg -d file > file_without_encrypt</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RHCE note 1]]></title>
    <link href="http://grunmin.github.io/blog/2013/11/03/rhce-note-1/"/>
    <updated>2013-11-03T02:07:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/11/03/rhce-note-1</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>unit 1</h2>

<ul>
<li><p>查看系统版本<br/>
cat /etc/redhat-release</p></li>
<li><p>查看网络参数<br/>
ifconfig</p></li>
<li><p>查看主机名<br/>
hostname</p></li>
<li><p>查看shell<br/>
cat /etc/shells</p></li>
<li><p>查看当前用户名称<br/>
whoami</p></li>
<li><p>查看当前位置<br/>
pwd</p></li>
<li><p>修改用户密码<br/>
passwd username</p></li>
<li><p>查看当前用户id<br/>
id</p></li>
<li><p>切换用户<br/>
su &ndash; username</p></li>
<li><p>查看历史命令并执行<br/>
history<br/>
!number<br/>
或者!加命令前面几个字母<br/>
实例：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@instructor 920]# !ca
</span><span class='line'>cat /etc/shells 
</span><span class='line'>/bin/sh
</span><span class='line'>/bin/bash
</span><span class='line'>/sbin/nologin
</span><span class='line'>/bin/tcsh
</span><span class='line'>/bin/csh</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>快捷输入前一个参数<br/>
Alt+.</p></li>
<li><p>查看后台任务，更改到前台运行，更改到后台运行<br/>
jobs，fg number，bg number<br/>
实例：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@instructor 920]# jobs
</span><span class='line'>[1]-  Running                 gedit day1.txt &
</span><span class='line'>[2]+  Stopped                 firefox
</span><span class='line'>[root@instructor 920]# 
</span><span class='line'>[root@instructor 920]# 
</span><span class='line'>[root@instructor 920]# fg 2
</span><span class='line'>firefox</span></code></pre></td></tr></table></div></figure>


<ul>
<li>暂停当前任务并移到后台，停止当前命令：<br/>
Ctrl+z，Ctrl+c</li>
</ul>


<h2>unit 6</h2>

<h3>创建文件系统</h3>

<ul>
<li> mbr区域有512B大小，其中16*4的大小用来记录四个主分区</li>
<li>主分区，扩展分区和逻辑分区总数不能超过15</li>
<li>查看磁盘信息<br/>
实例：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@instructor 920]# fdisk -l /dev/sda
</span><span class='line'>Disk /dev/sda: 320.1 GB, 320072933376 bytes
</span><span class='line'>255 heads, 63 sectors/track, 38913 cylinders
</span><span class='line'>Units = cylinders of 16065 * 512 = 8225280 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x0007213a
</span><span class='line'>
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/sda1   *           1          17      131072   83  Linux
</span><span class='line'>Partition 1 does not end on cylinder boundary.
</span><span class='line'>/dev/sda2              17        4096    32768000   8e  Linux LVM
</span><span class='line'>/dev/sda3            4096        6646    20480000   8e  Linux LVM
</span><span class='line'>/dev/sda4            6646       38914   259190784    5  Extended
</span><span class='line'>/dev/sda5            6646        7952    10485760   83  Linux
</span><span class='line'>/dev/sda6            7952        8605     5251727   83  Linux
</span><span class='line'>/dev/sda7            8606        8657      417658+  8e  Linux LVM
</span><span class='line'>/dev/sda8            8658        8785     1028128+  8e  Linux LVM
</span><span class='line'>/dev/sda9            8786        8888      827316   8e  Linux LVM
</span><span class='line'>/dev/sda10           8889       16722    62926573+  8e  Linux LVM
</span><span class='line'>/dev/sda11          16723       18812    16787893+  8e  Linux LVM</span></code></pre></td></tr></table></div></figure>


<ul>
<li>基本流程：<br/>
fdisk 分区 &mdash;>  mkfs  格式化 &mdash;> mount 挂载<br/>
1、分区<br/>
实例：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fdisk /dev/vda
</span><span class='line'>Command (m for help): m
</span><span class='line'>Command action
</span><span class='line'>   a   toggle a bootable flag
</span><span class='line'>   b   edit bsd disklabel
</span><span class='line'>   c   toggle the dos compatibility flag
</span><span class='line'>   d   delete a partition
</span><span class='line'>   l   list known partition types
</span><span class='line'>   m   print this menu
</span><span class='line'>   n   add a new partition
</span><span class='line'>   o   create a new empty DOS partition table
</span><span class='line'>   p   print the partition table
</span><span class='line'>   q   quit without saving changes
</span><span class='line'>   s   create a new empty Sun disklabel
</span><span class='line'>   t   change a partition's system id
</span><span class='line'>   u   change display/entry units
</span><span class='line'>   v   verify the partition table
</span><span class='line'>   w   write table to disk and exit
</span><span class='line'>   x   extra functionality (experts only)
</span><span class='line'>Command (m for help): n
</span><span class='line'>Command action
</span><span class='line'>   e   extended
</span><span class='line'>   p   primary partition (1-4)
</span><span class='line'>e
</span><span class='line'>Partition number (1-4): 3
</span><span class='line'>First cylinder (1-27046, default 1): 21328
</span><span class='line'>Last cylinder, +cylinders or +size{K,M,G} (21328-27046, default 27046): 
</span><span class='line'>Using default value 27046
</span><span class='line'>Command (m for help): p
</span><span class='line'>Disk /dev/vda: 14.0 GB, 13958643712 bytes
</span><span class='line'>16 heads, 63 sectors/track, 27046 cylinders
</span><span class='line'>Units = cylinders of 1008 * 512 = 516096 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00064009
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vda1   *           3         523      262144   83  Linux
</span><span class='line'>Partition 1 does not end on cylinder boundary.
</span><span class='line'>/dev/vda2             523       21328    10485760   8e  Linux LVM
</span><span class='line'>Partition 2 does not end on cylinder boundary.
</span><span class='line'>/dev/vda3           21328       27046     2882256    5  Extended
</span><span class='line'>Command (m for help): n
</span><span class='line'>Command action
</span><span class='line'>   l   logical (5 or over)
</span><span class='line'>   p   primary partition (1-4)
</span><span class='line'>l
</span><span class='line'>First cylinder (21328-27046, default 21328): 
</span><span class='line'>Using default value 21328
</span><span class='line'>Last cylinder, +cylinders or +size{K,M,G} (21328-27046, default 27046): +100M
</span><span class='line'>Command (m for help): p
</span><span class='line'>Disk /dev/vda: 14.0 GB, 13958643712 bytes
</span><span class='line'>16 heads, 63 sectors/track, 27046 cylinders
</span><span class='line'>Units = cylinders of 1008 * 512 = 516096 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00064009
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vda1   *           3         523      262144   83  Linux
</span><span class='line'>Partition 1 does not end on cylinder boundary.
</span><span class='line'>/dev/vda2             523       21328    10485760   8e  Linux LVM
</span><span class='line'>Partition 2 does not end on cylinder boundary.
</span><span class='line'>/dev/vda3           21328       27046     2882256    5  Extended
</span><span class='line'>/dev/vda5           21328       21531      102664+  83  Linux
</span><span class='line'>Command (m for help): w
</span><span class='line'>The partition table has been altered!
</span><span class='line'>Calling ioctl() to re-read partition table.
</span><span class='line'>WARNING: Re-reading the partition table failed with error 16: Device or resource busy.
</span><span class='line'>The kernel still uses the old table. The new table will be used at
</span><span class='line'>the next reboot or after you run partprobe(8) or kpartx(8)
</span><span class='line'>Syncing disks.
</span><span class='line'>[root@demo ~]# partx -a /dev/vda
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 1
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 2
</span><span class='line'>[root@demo ~]# 
</span><span class='line'>[root@demo ~]# partx -a /dev/vda
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 1
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 2
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 3
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 5</span></code></pre></td></tr></table></div></figure>


<p>  2、格式化<br/>
实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# mkfs -t ext4 /dev/vda5
</span><span class='line'>mke2fs 1.41.12 (17-May-2010)
</span><span class='line'>Filesystem label=
</span><span class='line'>OS type: Linux
</span><span class='line'>Block size=1024 (log=0)
</span><span class='line'>Fragment size=1024 (log=0)
</span><span class='line'>Stride=0 blocks, Stripe width=0 blocks
</span><span class='line'>25688 inodes, 102664 blocks
</span><span class='line'>5133 blocks (5.00%) reserved for the super user
</span><span class='line'>First data block=1
</span><span class='line'>Maximum filesystem blocks=67371008
</span><span class='line'>13 block groups
</span><span class='line'>8192 blocks per group, 8192 fragments per group
</span><span class='line'>1976 inodes per group
</span><span class='line'>Superblock backups stored on blocks: 
</span><span class='line'>  8193, 24577, 40961, 57345, 73729
</span><span class='line'>Writing inode tables: done                            
</span><span class='line'>Creating journal (4096 blocks): done
</span><span class='line'>Writing superblocks and filesystem accounting information: done
</span><span class='line'>This filesystem will be automatically checked every 23 mounts or
</span><span class='line'>180 days, whichever comes first.  Use tune2fs -c or -i to override.</span></code></pre></td></tr></table></div></figure>


<p>  3、挂载<br/>
实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# mkdir /togogo
</span><span class='line'>[root@demo ~]# 
</span><span class='line'>[root@demo ~]# mount /dev/vda5 /togogo/
</span><span class='line'>[root@demo media]# mount | grep vda
</span><span class='line'>(ro,nosuid,nodev,uhelper=udisks,uid=0,gid=0,iocharset=utf8,mode=0400,dmode=0500)
</span><span class='line'>/dev/vda5 on /togogo type ext4 (rw)</span></code></pre></td></tr></table></div></figure>


<p>  4、修改配置文件<br/>
实例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# cat /etc/fstab
</span><span class='line'>#
</span><span class='line'># /etc/fstab
</span><span class='line'># Created by anaconda on Sun Sep  1 09:14:16 2013
</span><span class='line'>#
</span><span class='line'># Accessible filesystems, by reference, are maintained under '/dev/disk'
</span><span class='line'># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
</span><span class='line'>#
</span><span class='line'>/dev/mapper/vgsrv-root  /                       ext4    defaults        1 1
</span><span class='line'>UUID=af186298-194c-4d01-8c3e-a21b28c45740 /boot                   ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-common /common                 ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-home  /home                   ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-shrink /shrink                 ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-swap  swap                    swap    defaults        0 0
</span><span class='line'>tmpfs                   /dev/shm                tmpfs   defaults        0 0
</span><span class='line'>devpts                  /dev/pts                devpts  gid=5,mode=620  0 0
</span><span class='line'>sysfs                   /sys                    sysfs   defaults        0 0
</span><span class='line'>proc                    /proc                   proc    defaults        0 0
</span><span class='line'>UUID=c061f12f-efa2-4aa2-8091-de8e73549bae /data   ext4    defaults,_netdev    0 0
</span><span class='line'>/dev/vda5     /togogo         ext4    defaults    0 0</span></code></pre></td></tr></table></div></figure>


<p>mount -a 可自动挂载已写在配置文件下的分区。</p>

<h2>unit 7</h2>

<h3>创建逻辑卷</h3>

<p>逻辑卷相对于普通分区的好处是可以动态修改卷的大小，以使用卷内文件数量的变化。
&ndash; 基本流程：<br/>
fdisk 分区 &mdash;> pvcreate 创建物理卷 &mdash;> vgcreate 创建卷组 &mdash;> lvcreate 创建逻辑卷 &mdash;> mkfs 格式化 &mdash;> mount 挂载<br/>
实例：<br/>
  1、分区，修改分区ID号</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# fdisk /dev/vda
</span><span class='line'>WARNING: DOS-compatible mode is deprecated. It's strongly recommended to
</span><span class='line'>         switch off the mode (command 'c') and change display units to
</span><span class='line'>         sectors (command 'u').
</span><span class='line'>Command (m for help): n
</span><span class='line'>Command action
</span><span class='line'>   l   logical (5 or over)
</span><span class='line'>   p   primary partition (1-4)
</span><span class='line'>l
</span><span class='line'>First cylinder (21532-27046, default 21532): 
</span><span class='line'>Using default value 21532
</span><span class='line'>Last cylinder, +cylinders or +size{K,M,G} (21532-27046, default 27046): +200M
</span><span class='line'>Command (m for help): n
</span><span class='line'>Command action
</span><span class='line'>   l   logical (5 or over)
</span><span class='line'>   p   primary partition (1-4)
</span><span class='line'>l
</span><span class='line'>First cylinder (21939-27046, default 21939): 
</span><span class='line'>Using default value 21939
</span><span class='line'>Last cylinder, +cylinders or +size{K,M,G} (21939-27046, default 27046): +300M
</span><span class='line'>Command (m for help): p
</span><span class='line'>Disk /dev/vda: 14.0 GB, 13958643712 bytes
</span><span class='line'>16 heads, 63 sectors/track, 27046 cylinders
</span><span class='line'>Units = cylinders of 1008 * 512 = 516096 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00064009
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vda1   *           3         523      262144   83  Linux
</span><span class='line'>Partition 1 does not end on cylinder boundary.
</span><span class='line'>/dev/vda2             523       21328    10485760   8e  Linux LVM
</span><span class='line'>Partition 2 does not end on cylinder boundary.
</span><span class='line'>/dev/vda3           21328       27046     2882256    5  Extended
</span><span class='line'>/dev/vda5           21328       21531      102664+  83  Linux
</span><span class='line'>/dev/vda6           21532       21938      205096+  83  Linux
</span><span class='line'>/dev/vda7           21939       22549      307912+  83  Linux
</span><span class='line'>Command (m for help): m
</span><span class='line'>Command action
</span><span class='line'>   a   toggle a bootable flag
</span><span class='line'>   b   edit bsd disklabel
</span><span class='line'>   c   toggle the dos compatibility flag
</span><span class='line'>   d   delete a partition
</span><span class='line'>   l   list known partition types
</span><span class='line'>   m   print this menu
</span><span class='line'>   n   add a new partition
</span><span class='line'>   o   create a new empty DOS partition table
</span><span class='line'>   p   print the partition table
</span><span class='line'>   q   quit without saving changes
</span><span class='line'>   s   create a new empty Sun disklabel
</span><span class='line'>   t   change a partition's system id
</span><span class='line'>   u   change display/entry units
</span><span class='line'>   v   verify the partition table
</span><span class='line'>   w   write table to disk and exit
</span><span class='line'>   x   extra functionality (experts only)
</span><span class='line'>Command (m for help): t
</span><span class='line'>Partition number (1-7): 6
</span><span class='line'>Hex code (type L to list codes): 8e
</span><span class='line'>Changed system type of partition 6 to 8e (Linux LVM)
</span><span class='line'>Command (m for help): t
</span><span class='line'>Partition number (1-7): 7
</span><span class='line'>Hex code (type L to list codes): 8e
</span><span class='line'>Changed system type of partition 7 to 8e (Linux LVM)
</span><span class='line'>Command (m for help): p
</span><span class='line'>Disk /dev/vda: 14.0 GB, 13958643712 bytes
</span><span class='line'>16 heads, 63 sectors/track, 27046 cylinders
</span><span class='line'>Units = cylinders of 1008 * 512 = 516096 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00064009
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vda1   *           3         523      262144   83  Linux
</span><span class='line'>Partition 1 does not end on cylinder boundary.
</span><span class='line'>/dev/vda2             523       21328    10485760   8e  Linux LVM
</span><span class='line'>Partition 2 does not end on cylinder boundary.
</span><span class='line'>/dev/vda3           21328       27046     2882256    5  Extended
</span><span class='line'>/dev/vda5           21328       21531      102664+  83  Linux
</span><span class='line'>/dev/vda6           21532       21938      205096+  8e  Linux LVM
</span><span class='line'>/dev/vda7           21939       22549      307912+  8e  Linux LVM
</span><span class='line'>Command (m for help): w
</span><span class='line'>The partition table has been altered!
</span><span class='line'>Calling ioctl() to re-read partition table.
</span><span class='line'>[root@demo ~]# partx -a /dev/vda
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 1
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 2
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 3
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 5
</span><span class='line'>[root@demo ~]# 
</span><span class='line'>[root@demo ~]# partx -a /dev/vda
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 1
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 2
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 3
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 5
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 6
</span><span class='line'>BLKPG: Device or resource busy
</span><span class='line'>error adding partition 7</span></code></pre></td></tr></table></div></figure>


<p>  2、创建物理卷</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# pvcreate /dev/vda6
</span><span class='line'>  Writing physical volume data to disk "/dev/vda6"
</span><span class='line'>  Physical volume "/dev/vda6" successfully created
</span><span class='line'>[root@demo ~]# pvcreate /dev/vda7
</span><span class='line'>  Writing physical volume data to disk "/dev/vda7"
</span><span class='line'>  Physical volume "/dev/vda7" successfully created</span></code></pre></td></tr></table></div></figure>


<p>  3、创建卷组</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# vgcreate togogovg /dev/vda6 /dev/vda7
</span><span class='line'>  Volume group "togogovg" successfully created
</span><span class='line'>[root@demo ~]# vgdisplay togogovg
</span><span class='line'>  --- Volume group ---
</span><span class='line'>  VG Name               togogovg
</span><span class='line'>  System ID             
</span><span class='line'>  Format                lvm2
</span><span class='line'>  Metadata Areas        2
</span><span class='line'>  Metadata Sequence No  1
</span><span class='line'>  VG Access             read/write
</span><span class='line'>  VG Status             resizable
</span><span class='line'>  MAX LV                0
</span><span class='line'>  Cur LV                0
</span><span class='line'>  Open LV               0
</span><span class='line'>  Max PV                0
</span><span class='line'>  Cur PV                2
</span><span class='line'>  Act PV                2
</span><span class='line'>  VG Size               492.00 MiB
</span><span class='line'>  PE Size               4.00 MiB
</span><span class='line'>  Total PE              123
</span><span class='line'>  Alloc PE / Size       0 / 0   
</span><span class='line'>  Free  PE / Size       123 / 492.00 MiB
</span><span class='line'>  VG UUID               fd7wDW-R1Ov-8oQh-iyvN-tBur-RMoG-VcYQ5d</span></code></pre></td></tr></table></div></figure>


<p>4、创建逻辑卷</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# lvcreate -n lv01 -L 150M togogovg
</span><span class='line'>  Rounding up size to full physical extent 152.00 MiB
</span><span class='line'>  Logical volume "lv01" created</span></code></pre></td></tr></table></div></figure>


<p>5、格式化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# mkfs -t ext4 /dev/mapper/togogovg-lv01
</span><span class='line'>mke2fs 1.41.12 (17-May-2010)
</span><span class='line'>Filesystem label=
</span><span class='line'>OS type: Linux
</span><span class='line'>Block size=1024 (log=0)
</span><span class='line'>Fragment size=1024 (log=0)
</span><span class='line'>Stride=0 blocks, Stripe width=0 blocks
</span><span class='line'>38912 inodes, 155648 blocks
</span><span class='line'>7782 blocks (5.00%) reserved for the super user
</span><span class='line'>First data block=1
</span><span class='line'>Maximum filesystem blocks=67371008
</span><span class='line'>19 block groups
</span><span class='line'>8192 blocks per group, 8192 fragments per group
</span><span class='line'>2048 inodes per group
</span><span class='line'>Superblock backups stored on blocks: 
</span><span class='line'>  8193, 24577, 40961, 57345, 73729
</span><span class='line'>Writing inode tables: done                            
</span><span class='line'>Creating journal (4096 blocks): done
</span><span class='line'>Writing superblocks and filesystem accounting information: done
</span><span class='line'>This filesystem will be automatically checked every 20 mounts or
</span><span class='line'>180 days, whichever comes first.  Use tune2fs -c or -i to override.</span></code></pre></td></tr></table></div></figure>


<p>6、挂载</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# mkdir /lv01
</span><span class='line'>[root@demo ~]# blkid /dev/mapper/togogovg-lv01 
</span><span class='line'>/dev/mapper/togogovg-lv01: UUID="2460a9a1-f1ea-4aae-95ea-c39762380480" TYPE="ext4" 
</span><span class='line'>[root@demo ~]# cat /etc/fstab
</span><span class='line'>#
</span><span class='line'># /etc/fstab
</span><span class='line'># Created by anaconda on Sun Sep  1 09:14:16 2013
</span><span class='line'>#
</span><span class='line'># Accessible filesystems, by reference, are maintained under '/dev/disk'
</span><span class='line'># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
</span><span class='line'>#
</span><span class='line'>/dev/mapper/vgsrv-root  /                       ext4    defaults        1 1
</span><span class='line'>UUID=af186298-194c-4d01-8c3e-a21b28c45740 /boot                   ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-common /common                 ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-home  /home                   ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-shrink /shrink                 ext4    defaults        1 2
</span><span class='line'>/dev/mapper/vgsrv-swap  swap                    swap    defaults        0 0
</span><span class='line'>tmpfs                   /dev/shm                tmpfs   defaults        0 0
</span><span class='line'>devpts                  /dev/pts                devpts  gid=5,mode=620  0 0
</span><span class='line'>sysfs                   /sys                    sysfs   defaults        0 0
</span><span class='line'>proc                    /proc                   proc    defaults        0 0
</span><span class='line'>UUID=c061f12f-efa2-4aa2-8091-de8e73549bae /data   ext4    defaults,_netdev    0 0
</span><span class='line'>/dev/vda5     /togogo         ext4    defaults    0 0
</span><span class='line'>UUID=2460a9a1-f1ea-4aae-95ea-c39762380480 /lv01   ext4    defaults    0 0
</span><span class='line'>[root@demo ~]# mount
</span><span class='line'>/dev/mapper/vgsrv-root on / type ext4 (rw)
</span><span class='line'>proc on /proc type proc (rw)
</span><span class='line'>sysfs on /sys type sysfs (rw)
</span><span class='line'>devpts on /dev/pts type devpts (rw,gid=5,mode=620)
</span><span class='line'>tmpfs on /dev/shm type tmpfs (rw,rootcontext="system_u:object_r:tmpfs_t:s0")
</span><span class='line'>/dev/vda1 on /boot type ext4 (rw)
</span><span class='line'>/dev/mapper/vgsrv-common on /common type ext4 (rw)
</span><span class='line'>/dev/mapper/vgsrv-home on /home type ext4 (rw)
</span><span class='line'>/dev/mapper/vgsrv-shrink on /shrink type ext4 (rw)
</span><span class='line'>none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)
</span><span class='line'>sunrpc on /var/lib/nfs/rpc_pipefs type rpc_pipefs (rw)
</span><span class='line'>/dev/vda5 on /togogo type ext4 (rw)
</span><span class='line'>/dev/mapper/togogovg-lv01 on /lv01 type ext4 (rw)</span></code></pre></td></tr></table></div></figure>


<ul>
<li>扫描，查看物理卷，卷组，逻辑卷信息：<br/>
pvscan,pvdisplay<br/>
vgscan,vgdisplay<br/>
lvscan,lvdisplay<br/>
实例：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# vgscan
</span><span class='line'>  Reading all physical volumes.  This may take a while...
</span><span class='line'>  Found volume group "togogovg" using metadata type lvm2
</span><span class='line'>  Found volume group "vgsrv" using metadata type lvm2
</span><span class='line'>[root@demo ~]# 
</span><span class='line'>[root@demo ~]# pvscan
</span><span class='line'>  PV /dev/vda6   VG togogovg   lvm2 [196.00 MiB / 44.00 MiB free]
</span><span class='line'>  PV /dev/vda7   VG togogovg   lvm2 [296.00 MiB / 296.00 MiB free]
</span><span class='line'>  PV /dev/vda2   VG vgsrv      lvm2 [9.97 GiB / 4.75 GiB free]
</span><span class='line'>  Total: 3 [10.45 GiB] / in use: 3 [10.45 GiB] / in no VG: 0 [0   ]
</span><span class='line'>[root@demo ~]# pvdisplay /dev/vda6
</span><span class='line'>  --- Physical volume ---
</span><span class='line'>  PV Name               /dev/vda6
</span><span class='line'>  VG Name               togogovg
</span><span class='line'>  PV Size               200.29 MiB / not usable 4.29 MiB
</span><span class='line'>  Allocatable           yes 
</span><span class='line'>  PE Size               4.00 MiB
</span><span class='line'>  Total PE              49
</span><span class='line'>  Free PE               11
</span><span class='line'>  Allocated PE          38
</span><span class='line'>  PV UUID               pjxkza-zEAg-3JF6-G7Gg-1oju-xcuZ-bJdF5x
</span><span class='line'>[root@demo ~]# vgdisplay togogovg
</span><span class='line'>  --- Volume group ---
</span><span class='line'>  VG Name               togogovg
</span><span class='line'>  System ID             
</span><span class='line'>  Format                lvm2
</span><span class='line'>  Metadata Areas        2
</span><span class='line'>  Metadata Sequence No  2
</span><span class='line'>  VG Access             read/write
</span><span class='line'>  VG Status             resizable
</span><span class='line'>  MAX LV                0
</span><span class='line'>  Cur LV                1
</span><span class='line'>  Open LV               1
</span><span class='line'>  Max PV                0
</span><span class='line'>  Cur PV                2
</span><span class='line'>  Act PV                2
</span><span class='line'>  VG Size               492.00 MiB
</span><span class='line'>  PE Size               4.00 MiB
</span><span class='line'>  Total PE              123
</span><span class='line'>  Alloc PE / Size       38 / 152.00 MiB
</span><span class='line'>  Free  PE / Size       85 / 340.00 MiB
</span><span class='line'>  VG UUID               fd7wDW-R1Ov-8oQh-iyvN-tBur-RMoG-VcYQ5d
</span><span class='line'>[root@demo ~]# lvdisplay /dev/mapper/togogovg-lv01 
</span><span class='line'>  --- Logical volume ---
</span><span class='line'>  LV Path                /dev/togogovg/lv01
</span><span class='line'>  LV Name                lv01
</span><span class='line'>  VG Name                togogovg
</span><span class='line'>  LV UUID                BMsz8a-ye5Q-77oH-rm5y-O3I6-moKB-YeOXmP
</span><span class='line'>  LV Write Access        read/write
</span><span class='line'>  LV Creation host, time demo.example.com, 2013-09-15 14:56:43 -0400
</span><span class='line'>  LV Status              available
</span><span class='line'>  # open                 1
</span><span class='line'>  LV Size                152.00 MiB
</span><span class='line'>  Current LE             38
</span><span class='line'>  Segments               1
</span><span class='line'>  Allocation             inherit
</span><span class='line'>  Read ahead sectors     auto
</span><span class='line'>  - currently set to     256
</span><span class='line'>  Block device           253:5</span></code></pre></td></tr></table></div></figure>


<h3>扩展逻辑卷</h3>

<ul>
<li>一般流程：<br/>
新建一个物理卷&mdash;>将物理卷加入卷组&mdash;>扩展逻辑卷<br/>
实例：<br/>
1、创建物理卷（略）<br/>
2、扩展卷组</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# vgextend togogovg /dev/vda8
</span><span class='line'>  Volume group "togogovg" successfully extended
</span><span class='line'>[root@demo ~]# vgdisplay togogovg
</span><span class='line'>    
</span><span class='line'>  VG Name               togogovg
</span><span class='line'>  System ID             
</span><span class='line'>  Format                lvm2
</span><span class='line'>  Metadata Areas        3
</span><span class='line'>  Metadata Sequence No  3
</span><span class='line'>  VG Access             read/write
</span><span class='line'>  VG Status             resizable
</span><span class='line'>  MAX LV                0
</span><span class='line'>  Cur LV                1
</span><span class='line'>  Open LV               1
</span><span class='line'>  Max PV                0
</span><span class='line'>  Cur PV                3
</span><span class='line'>  Act PV                3
</span><span class='line'>  VG Size               788.00 MiB
</span><span class='line'>  PE Size               4.00 MiB
</span><span class='line'>  Total PE              197
</span><span class='line'>  Alloc PE / Size       38 / 152.00 MiB
</span><span class='line'>  Free  PE / Size       159 / 636.00 MiB
</span><span class='line'>  VG UUID               fd7wDW-R1Ov-8oQh-iyvN-tBur-RMoG-VcYQ5d</span></code></pre></td></tr></table></div></figure>


<p>3、扩展逻辑卷</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@demo ~]# lvextend -L +148M /dev/mapper/togogovg-lv01 
</span><span class='line'>  Extending logical volume lv01 to 300.00 MiB
</span><span class='line'>  Logical volume lv01 successfully resized
</span><span class='line'>[root@demo ~]# lvdisplay /dev/mapper/togogovg-lv01
</span><span class='line'>  --- Logical volume ---
</span><span class='line'>  LV Path                /dev/togogovg/lv01
</span><span class='line'>  LV Name                lv01
</span><span class='line'>  VG Name                togogovg
</span><span class='line'>  LV UUID                BMsz8a-ye5Q-77oH-rm5y-O3I6-moKB-YeOXmP
</span><span class='line'>  LV Write Access        read/write
</span><span class='line'>  LV Creation host, time demo.example.com, 2013-09-15 14:56:43 -0400
</span><span class='line'>  LV Status              available
</span><span class='line'>  # open                 1
</span><span class='line'>  LV Size                300.00 MiB
</span><span class='line'>  Current LE             75
</span><span class='line'>  Segments               2
</span><span class='line'>  Allocation             inherit
</span><span class='line'>  Read ahead sectors     auto
</span><span class='line'>  - currently set to     256
</span><span class='line'>  Block device           253:5
</span><span class='line'>[root@demo ~]# df -h
</span><span class='line'>Filesystem            Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/mapper/vgsrv-root 4.0G  2.6G  1.3G  68% /
</span><span class='line'>tmpfs                 499M   88K  499M   1% /dev/shm
</span><span class='line'>/dev/vda1             248M   33M  203M  14% /boot
</span><span class='line'>/dev/mapper/vgsrv-common 124M  5.6M  113M   5% /common
</span><span class='line'>/dev/mapper/vgsrv-home 248M   46M  191M  20% /home
</span><span class='line'>/dev/mapper/vgsrv-shrink 310M   11M  284M   4% /shrink
</span><span class='line'>/dev/vda5              98M  5.6M   87M   6% /togogo
</span><span class='line'>/dev/mapper/togogovg-lv01 148M  5.6M  135M   4% /lv01
</span><span class='line'>[root@demo ~]# resize2fs /dev/mapper/togogovg-lv01 
</span><span class='line'>resize2fs 1.41.12 (17-May-2010)
</span><span class='line'>Filesystem at /dev/mapper/togogovg-lv01 is mounted on /lv01; on-line resizing required
</span><span class='line'>old desc_blocks = 1, new_desc_blocks = 2
</span><span class='line'>Performing an on-line resize of /dev/mapper/togogovg-lv01 to 307200 (1k) blocks.
</span><span class='line'>The filesystem on /dev/mapper/togogovg-lv01 is now 307200 blocks long.
</span><span class='line'>[root@demo ~]# df -h
</span><span class='line'>Filesystem            Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/mapper/vgsrv-root 4.0G  2.6G  1.3G  68% /
</span><span class='line'>tmpfs                 499M   88K  499M   1% /dev/shm
</span><span class='line'>/dev/vda1             248M   33M  203M  14% /boot
</span><span class='line'>/dev/mapper/vgsrv-common 124M  5.6M  113M   5% /common
</span><span class='line'>/dev/mapper/vgsrv-home 248M   46M  191M  20% /home
</span><span class='line'>/dev/mapper/vgsrv-shrink 310M   11M  284M   4% /shrink
</span><span class='line'>/dev/vda5              98M  5.6M   87M   6% /togogo
</span><span class='line'>/dev/mapper/togogovg-lv01  291M  6.1M  270M   3% /lv01
</span><span class='line'>[root@demo ~]# pvscan
</span><span class='line'>  PV /dev/vda6   VG togogovg   lvm2 [196.00 MiB / 0    free]
</span><span class='line'>  PV /dev/vda7   VG togogovg   lvm2 [296.00 MiB / 192.00 MiB free]
</span><span class='line'>  PV /dev/vda8   VG togogovg   lvm2 [296.00 MiB / 296.00 MiB free]
</span><span class='line'>  PV /dev/vda2   VG vgsrv      lvm2 [9.97 GiB / 4.75 GiB free]
</span><span class='line'>  Total: 4 [10.74 GiB] / in use: 4 [10.74 GiB] / in no VG: 0 [0   ]</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于知道不知道的几点理解]]></title>
    <link href="http://grunmin.github.io/blog/2013/08/05/guan-yu-zhi-dao-bu-zhi-dao-de-ji-dian-li-jie/"/>
    <updated>2013-08-05T11:24:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/08/05/guan-yu-zhi-dao-bu-zhi-dao-de-ji-dian-li-jie</id>
    <content type="html"><![CDATA[<p>关于大学学习的四个层次:<br/>
<strong>不知道自己不知道</strong><br/>
<strong>知道自己不知道</strong><br/>
<strong>不知道自己知道</strong><br/>
<strong>知道自己知道</strong></p>

<!-- more -->


<p>通常我们的理解是这样：甫入大学，在没有对大学尤其是专业进行深入的了解之前，没能认识到自己知识的匮乏，此谓之不知道不知道。随着专业的学习，渐渐接触更多东西，开始感觉自己原有的知识不足以解决新的问题，有更多的求知欲望，此谓之知道不知道。在不断的专业学习和思维训练中，个人整体的知识架构有了新的改善和突破，知识量的积累导致质的突破，在这阶段陆续获得一些重要的奖项，已经与初入大学时大有区别，但是自身并未意识到这一点，此谓之不知道知道。在大学最后的日子，回顾总结自己大学的轨迹和面临着要把自己推销给社会的现实，促使自己对自我认知的一个飞跃，始悟到此时的自己羽翼已丰，可以乘风破浪矣，此谓之知道知道。</p>

<p>然而，这或许有另外的意思哩。</p>

<p>我们把这几句话写在一起：</p>

<p><strong>不知道    不知道</strong>  <br/>
<strong>知道      不知道</strong>  <br/>
<strong>不知道    知道</strong><br/>
<strong>知道      知道</strong></p>

<p>其实我们早已发现，这几句话里透露的信息是，大学是从不知道到知道的一个过程。虽然这些话从始至终似乎重点讲自我认知的改变，但是从上面排列来看，它所要表达的重点是后一列：从不知道到知道。而这所谓知道不知道，是对专业知识了解深浅的一种描述。自己的认知经历了一个反复不是重点，重点是随着学习深入专业知识的积累或者其他认知的不断提升，证据是，第三层次，即使不知道自己在提升但不妨碍自己的进步，所以它排在第三。因此这些话讲的是知识的故事。</p>

<p>然而我们是否注意到前面这一列呢？</p>

<p>人非生而知之者，然则知识的积累总是时刻在进行的，有些人的速度快些，有些人的速度慢些。在大学的学习也是如此。一部分人比另一部分人更早“知道”，有部分人知道毕业依然“不知道”。不管如何，每个人都会有不小的进步。在大学有限的时间里，是什么导致了这种区别呢？……这句话没有讲。它讲的是大学是个从不知道到到知道的过程，这听起来很美妙。它给新生描述的是一个美妙的前景，它也许是毕业生精辟的总结。但是它教给了我们什么？</p>

<p>事实上，我们更关心造成这些区别的原因是什么。</p>

<p>我们可以把上面的话再写下来：</p>

<p><strong>不知道    不知道</strong><br/>
<strong>不知道    知道</strong> <br/>
<strong>知道      不知道</strong><br/>
<strong>知道      知道</strong></p>

<p>我将它更改了顺序，来看看有何不同。</p>

<p>何谓不知道自己不知道，有个说法是，一个人的知识如果用一个圆来表示，那么知识越多，圆的面积就越大，它所接触到的外界的东西就越多，越能发现到自己不知道的东西。因此无知的人总是觉得自己无所不知，而博学的人却能保持谦逊，因为他知道自己有太多的不知道。举个不成熟的例子，一个新生想知道图书馆里有没有指导自己解决人际交往问题的书，这是一个问题，但是他已经意识到遇到问题可以上图书馆寻找答案。如果他确实遇到了交际问题而一直闷闷不乐，愁眉苦脸，没有寻找帮助的意识，他就不知道有前面那个问题的存在，也就不知道自己对那个问题的解答，不知道自己不知道。</p>

<p>而不知道自己知道也是如此。我甚至不能肯定这一层次就比上一层更高。因为它们的意识是停留在同一层次的，区别只在知识的多寡。然而知识是可以不断丰富的，而意识要做到这一点却很难。现实的例子是，我们往往可以在写文章的时候引经据典，可以围绕社会热点侃侃而谈，可以在别人遇到问题时提供指导，而往往自己遇到问题却钻进思维的死胡同。再搬出前面那个例子，想想看，当你遇到一样的问题，你会作出理性的判断吗？你知道解决有这条途径，问题是，你知道你知道这条途径吗？</p>

<p>意识的提升往往落后于知识的提升。更多的，我们是在考场上，在面试中，才会调动自己的头脑努力去寻找自己的答案。如果我们愿意把考试这个概念扩大化的话，兴许可以发现，对于生活这个无所不在的考试，许多人是不及格的。当脑袋里的知识不能及时有效地发挥作用，那么它的价值就没有想象中的那么大。</p>

<p>在这四个境界中，我认为，知道不知道或许是最为难得的。关于这一点，我的理解与文中第一种所描述的不同。既然不知道，又如何知道？我认为，上述所谓这个不知道，不是具体到某个问题，而是对知识量的抽象描述，是对自身的一个界定。那么，所谓的知道不知道，就是说自己知道了自己知识缺乏这个问题，并不是说知道了一个不知道的问题。</p>

<p>而我所认为的不知道，不是具体值这个问题。它可以是诸如不知道图书馆是否有关于解决人际关系问题的书，不知道有什么方法可以快速开发软件等等。没有人无所不知，但是知道自己无知和知道自己不知道，是截然不同的。前者顶多让人谦逊，甚至令人畏惧。而后者却能促使人去寻找解决的方法，从而去改变世界。再搬出第一个例子。即便不知道是否有这些书的存在，但既然已经意识到了这个问题，就会想方设法去解决。不知道如何快速开发，他会去寻找我们称之为框架的东西。因为脑海里存在了某个相关的概念和求索的理念。在别人没有意识到问题时候，或者说别人不认为是问题的时候，意识到了问题，找出了这个问题。和普通人相比，就像出卷老师和学生的区别，一个积极发现问题，一个被动解决问题。知道自己不知道，所以比别人更早知道。</p>

<p>基于上述的理由，我不能分辨知道自己知不知道与否哪个更高级——两者都有很强的改造世界的能力。知不知道解决一个具体问题的方法，说起来更像一个概率问题。生活中的问题有无数个，谁能说自己一定知道呢？如果说区别的话，或许可以这样区别：不知道的，意味着不是自己的，是外在的;知道的，就是自己的，是内在的。认识外在和认识自我孰轻孰重，不好一而概之。</p>

<p>关于知道不知道，有一个有趣的现象。很多人以为自己知道，其实并不知道。有个哥伦布竖鸡蛋的传说。</p>

<blockquote><p>哥伦布发现了新大陆。从海上回来，他成了西班牙人民心目中的英雄。国王和王后也把他当作上宾，封他做海军上将。可是有些贵族瞧不起他，他们用鼻子一哼，说：“哼，这有什么稀罕？只要坐船出海，谁都会到那块陆地的。”</p>

<p>在一次宴会上，哥伦布又听见有人在讥笑他了。“上帝创造世界的时候，不是就创造了海西边的那块陆地了吗？发现，哼，又算得了什么！”哥伦布听了，沉默了好一会儿，忽然从盘子里拿个鸡蛋，站了起来，提出一个古怪的问题：“女士们，先生们，谁能把这个鸡蛋竖起来？”</p>

<p>鸡蛋从这个人手上传到那个人手上，大家都把鸡蛋扶直了，可是一放手，鸡蛋立刻倒 了。最后，鸡蛋回到哥伦布手上，满屋子鸦雀无声，大家都要看他怎样把鸡蛋竖起来。</p>

<p>哥伦布不慌不忙，把鸡蛋的一头在桌上轻轻一敲，敲破了一点儿壳，鸡蛋就稳稳地直立在桌子上了。</p>

<p>“这有什么稀罕？”宾客们又讥笑起哥伦布来了。</p>

<p>“本来就没有什么可稀罕的，”哥伦布说，“可是你们为什么做不到呢？”</p>

<p>宾客们一个个强词夺理：“鸡蛋都破了，那算什么呢？”</p>

<p>哥伦布却继续保持不以为然的态度：“我在刚开始定条件时，曾有说过不允许把鸡蛋敲破？”</p>

<p>哥伦布离席而去时还留下了一句令人回味的话：“虽然是很简单的游戏，你们却没有一个人会做；知道怎么做之后，大家却都说太简单了！”</p>

<p>宾客们一时哑口无言。</p></blockquote>

<p>我想，身边应该可以找出很多这样的例子吧？^&ndash;^</p>

<p>同样的事情，有的人绞尽脑汁也解不出来，有的人轻易解出来了。解不出的人讥讽，这有什么稀罕的？只不过一时没有想到而已。 也许真是这样，但问题是，没有那个解出来了的人的存在，没想到常常是永远都想不到了。一旦问题解出来了，很多人就跳出来表示自己也会。砸个鸡蛋大家当然都是会的，问题是不知道要砸，或者，用另外一个办法，转它。</p>

<p>对于我而言，大学四层次的第二种描述能让我保持一种正确的姿态来对待生活中的各种问题，保持对智慧的不懈探索和追求。我愿意在以后的日子，尽我所能地做到这一点。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux安装 Zend Frame 笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/08/02/fedora-an-zhuang-zend-frame-bi-ji/"/>
    <updated>2013-08-02T00:15:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/08/02/fedora-an-zhuang-zend-frame-bi-ji</id>
    <content type="html"><![CDATA[<h3>新建项目</h3>

<p>下载Zend Frame安装包(现在下载ZF要注册！可以用这条命令直接下载)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://framework.zend.com/releases/ZendFramework-1.11.11/ZendFramework-1.11.11-minimal.tar.gz
</span><span class='line'>$ php -i | grep include_path </span></code></pre></td></tr></table></div></figure>


<p>(用源码包安装的php，若显示php命令不存在，就把php安装目录里bin文件下的php文件复制到可执行目录下，如/bin或/usr/bin)</p>

<!-- more -->


<p>在服务器文件根目录apache2/htdocs下执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ zf create project [projectname]</span></code></pre></td></tr></table></div></figure>


<p>(projectname即你要的项目名，不加方括号)，会生成一个projectname的目录。此时目录下有application,docs,library,public,tests目录。<br/>
把之前的Zend文件夹再复制到library目录下。</p>

<h3>配置php和apache，启动rewrite功能</h3>

<p>进入apache的源码目录(不是安装目录)输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ find -name mod_rewrite.c
</span><span class='line'>$ cd PATH/to/mod_rewrite.c  #进入mod_rewrite.c所在目录
</span><span class='line'>$ sudo /usr/local/apache2/bin/apxs -c mod_rewrite.c
</span><span class='line'>$ sudo /usr/local/apache2/bin/apxs -i -a -n mod_rewrite mod_rewrite.la</span></code></pre></td></tr></table></div></figure>


<p>成功的话应该在你的apache的modules目录中编译出一个<code>mod_rewrite.so</code>文件。<br/>
编辑httpd.conf文件，确认httpd.conf中已经包含<code>mod_rewrite.so</code>的加载语句，如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LoadModule rewrite_module modules/mod_rewrite.so  #(即把此语句前的#号去掉)  </span></code></pre></td></tr></table></div></figure>


<p>这时你的apache应该已经支持rewrite了。<br/>
修改<code>apache/conf/httpd.conf </code>
把</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>AllowOverride None </span></code></pre></td></tr></table></div></figure>


<p>的None改成 All<br/>
重启apache</p>

<p>若成功的话打开浏览器进入<code>localhost/projectname/public</code>可以看到Zend Frame的欢迎界面</p>

<p>注，我安装的版本是Zend Framework Version: 1.11.11，其他版本没有试过，查询版本信息可用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zf show version</span></code></pre></td></tr></table></div></figure>


<p>安装过程中遇到了许多问题，比如服务器加载失败，出现500错误等。按照一些教程去弄虚拟主机，并设置library为apache文件根目录。结果证明这些都是多余的。如果按照上面的步骤安装出现了问题，可以查看apache2/log/error_log文件。如出现下面的问题，可以参考参考资料里的<a href="http://ayiui4566.iteye.com/blog/662170">wamp+Zend框架配置问题</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> Request exceeded the limit of 10 internal     redirects due to probable configuration error. Use 'LimitInternalRecursion'     to increase the limit if necessary. Use 'LogLevel debug' to get a backtrace.</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  /usr/local/apache2/htdocs/zftest/.htaccess:            Invalid command 'RewriteRule!\\.(js|ico|gif|jpg|png|css)$', perhaps             misspelled or defined by a module not included in the server configuration</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   PHP Warning:  require_once(Zend/Application.php):      failed to open stream: No such file or directory in /usr/local/apache2/         htdocs/zftest/public/index.php on line 18</span></code></pre></td></tr></table></div></figure>


<h4>参考资料：</h4>

<p>   <a href="http://www.path8.net/tn/archives/961">Linux下Apache安装/增加mod_rewrite模块以启用rewrite功能</a><br/>
   <a href="http://ayiui4566.iteye.com/blog/662170">WAMP+Zend框架配置问题</a><br/>
   <a href="http://blog.csdn.net/daydreamingboy/article/details/6327527">Zend Framework学习日记(1)&mdash;环境搭建篇</a><br/>
   <a href="http://blog.csdn.net/mengxiangbaidu/article/details/7046568#">Zend Framework教程-用Zend命令行快速创建Zend应用</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux安装wecenter笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/07/25/fedoraan-zhuang-wecenterbi-ji/"/>
    <updated>2013-07-25T20:32:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/07/25/fedoraan-zhuang-wecenterbi-ji</id>
    <content type="html"><![CDATA[<p><em>此文是前文配置lamp的延伸</em><br/>
在前面的一片文章里，用源码包安装的方式搭建了lamp环境，wecenter需要服务器支持mysqli或者pdo模块,支持curl,GD图像处理库，原来安装lamp过程中并无相关方面的配置，鼓捣了半天之后其他条件都已满足，唯独GD图像处理库不能安装。</p>

<!-- more -->


<p>谷歌了许多结果，一一尝试，一一失败，最后看到<a href="http://tech.soft6.com/665/16/78687.html">这篇文章</a>，果断把之前编好的php删除了按照文中方法重装一遍，居然成功了！</p>

<p>现在从零开始记录一下安装过程。</p>

<p>按照上一篇笔记配置好lamp环境，php先不安装。
把下载下来的wecenter里的UPLOAD复制到/usr/local/apache2/htdocs/里（即文件根目录），打开浏览器，输入地址<code>http://localhost/UPLOAD/install</code>，进入安装界面。在我的机子上，一开始不能满足的条件是数据库模块，curl支持，图像处理库和目录权限。<br/>
从最简单的开始，因为后面还会要求UPLOAD下的文件开放权限，因此直接一个</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># chmod 777 /usr/local/apache2/htdocs/UPLOAD</span></code></pre></td></tr></table></div></figure>


<p>之后就是折腾了很久的GD，Linux下得GD库安装要比windows麻烦很多。先参照此文：<a href="http://tech.soft6.com/665/16/78687.html  ">http://tech.soft6.com/665/16/78687.html  </a>
此前的多次实验表明这个是唯一比较靠谱的安装方法（当然不才眼界有限）。装好之后就可以进行下一步了。<br/>
开启curl和mysqli或者pdo支持，可以用如下方法
以curl为例，首先</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /usr/local/php-***/ext/curl #进入源码包的curl目录
</span><span class='line'># /usr/local/php/bin/phpize #运行phpize命令
</span><span class='line'># ./configure --with-php-config=/usr/local/php/bin/php-config
</span><span class='line'># make && make install</span></code></pre></td></tr></table></div></figure>


<p>成功后可以看到创建的curl.so文件位于/usr/local/php/lib/php/extension/no-debug-non-zts-*******/,复制curl.so到/usr/local/php/ext下(没有目录则创建一个)，再敲入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vi /usr/local/php/lib/php.ini​</span></code></pre></td></tr></table></div></figure>


<p>在加载模块(一堆extension处 大概第980行)加上一行extension=curl.so 修改extension_dir=“/usr/local/php/ext” (第819行),重启apache即可。(前面的操作如需立刻看到效果也需重启apache)</p>

<p><a href="http://blog.csdn.net/grunmin/article/details/9468639">这里</a>是增加php模块的方法介绍，mysqli可用此法解决。</p>

<p><em>注：用rpm包搭建lamp时没有出现上述问题</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux搭建lamp环境笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/07/21/fedoraan-zhuang-lamphuan-jing-bi-ji/"/>
    <updated>2013-07-21T11:20:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/07/21/fedoraan-zhuang-lamphuan-jing-bi-ji</id>
    <content type="html"><![CDATA[<p>在学习php编程的过程中，了解了lamp环境的重要性，因此尝试自行搭建。在这个过程中经历了很多困难，为了便于查阅和再次搭建，在此将过程都记录下来。有错漏或可以改进的地方，欢迎指出拨正。</p>

<!-- more -->


<p>此前都是用源码包安装，其实用rpm包安装省时省力。</p>

<h2>从软件包安装</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum groupinstall 'web-server' -y
</span><span class='line'># yum install -y php-mysql php-gd libjpeg* php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-bcmath php-mhash libmcrypt pcre-devel libxml2-devel mysql-devel apr apr-devel apr-util apr-util-devel curl-devel libpng-devel mysql-server</span></code></pre></td></tr></table></div></figure>


<h2>源码包安装</h2>

<h3>前期工作</h3>

<p><strong>第1步</strong>： 在终端输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum update  # 更新系统</span></code></pre></td></tr></table></div></figure>


<p><strong>第2步</strong>：下载apache,mysql,apr,apr-util,phpMyAdmin,php,pcre(非必需）安装包</p>

<p><strong>第3步</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install gcc gcc-c++ libxml2 libxml2-devel pcre pcre-devel #安装依赖软件包</span></code></pre></td></tr></table></div></figure>


<p><strong>第4步</strong>：tar -zxvf 解压apache,mysql,php,pcre 等压缩包， sudo mv 移动到/usr/local目录下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cd /usr/local/pcre;./configure --prefix=/usr/local/pcre #安装pcre</span></code></pre></td></tr></table></div></figure>


<p>（非必需，如果安装apache时显示未安装pcre可按照此法安装）<br/>
<strong>第5步</strong>： cd httpd/srclib/ 解压apr,apr-util 到目录下，修改文件名（不带版本号，如apr-util）</p>

<h3>安装apache:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /usr/local/httpd  # 进入安装目录  
</span><span class='line'>$ sudo ./configure --prefix=/usr/local/apache2 --enable-so --with-mpm=worker --with-pcre=/usr/local/pcre --with-included-apr # 配置（注意./configure的/前有个小点，若没有按照上文安装pcre，可去掉--with-pcre后面的路径）
</span><span class='line'>$ sudo make
</span><span class='line'>$ sudo make install
</span><span class='line'> #(--prefix指定安装目录，配置文件在/usr/local/apache2/conf目录下，--enable-so启动加载共享模块的功能，--with-mpm=worker吿诉apache使用多线程化多处理模块worker.)</span></code></pre></td></tr></table></div></figure>


<p><strong>启动apache</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/apache2/bin/httpd -k start | stop</span></code></pre></td></tr></table></div></figure>


<p> 或</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/apache2/bin/apachectl start | stop</span></code></pre></td></tr></table></div></figure>


<p>(可用ps -e | grep httpd 查看apache是否已开启）</p>

<h3>安装mysql：</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /usr/local
</span><span class='line'>$ sudo ln -s /usr/local/mysql-××× mysql #链接源码到一个文件夹
</span><span class='line'>$ cd mysql
</span><span class='line'>$ scripts/mysql_install_db --user=[username]    #（username为自己的用户名，中括号不用打进去，下同）
</span><span class='line'>$ sudo chown -R root .     #（注意末尾有个小点）
</span><span class='line'>$ sudo chown -R [username] data
</span><span class='line'>$ sudo chgrp -R [username] .</span></code></pre></td></tr></table></div></figure>


<p><strong>启动mysql</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> sudo /usr/local/mysql/bin/mysqld_safe --user=[username] &</span></code></pre></td></tr></table></div></figure>


<p><strong>设置开机启动Mysql</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp support-files/mysql.server /etc/init.d/[username]
</span><span class='line'>$ sudo cp support-files/mysqld_multi.server /etc/init.d/[username]
</span><span class='line'>$ sudo chmod +x /etc/init.d/[username]
</span><span class='line'>$ sudo chkconfig --add [username]</span></code></pre></td></tr></table></div></figure>


<p><strong>测试</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/mysql/bin/mysqladmin -u root -p version
</span><span class='line'>$ sudo /usr/local/mysql/bin/mysqlshow</span></code></pre></td></tr></table></div></figure>


<p><strong>修改密码，删除匿名用户</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/mysql/bin/mysqladmin -u root -p password [password]
</span><span class='line'>$ sudo /usr/local/mysql/bin/mysql -u root -p</span></code></pre></td></tr></table></div></figure>


<p>[password]可以不输入，上面两个命令是修改密码用，此时进入mysql命令界面</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; delete from mysql.user where host='localhost' and user='';
</span><span class='line'>mysql&gt; flush privileges;</span></code></pre></td></tr></table></div></figure>


<h3>安装php</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /usr/local/php-5__
</span><span class='line'>$ sudo ./configure --prefix=/usr/local/php --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql
</span><span class='line'>$ make
</span><span class='line'>$ sudo make install
</span><span class='line'>$ sudo cp /usr/local/php___/php.ini-__ /usr/local/php/lib/php.ini  </span></code></pre></td></tr></table></div></figure>


<p>修改httpd.conf 添加AddType application/x-httpd-php .php<br/>
在DirectoryIndex index.html 后加入index.php<br/>
<strong>重启apache</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo /usr/local/apache2/bin/apachectl restart</span></code></pre></td></tr></table></div></figure>


<h3>安装phpMyAdmin:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar -zxvf phpMyAdmin___ -C /usr/local/apache2/htdocs</span></code></pre></td></tr></table></div></figure>


<p>到此全部完成</p>

<h3>Q1</h3>

<p>如果测试mysql时没有显示版本信息等界面，而是显示Can&rsquo;t connect to local MySQL server through socket &lsquo;/tmp/mysql.sock&rsquo;(2)则极有可能是mysql没有安装成功。解决办法是删除系统自带的mysql服务，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rpm -qa | grep mysql</span></code></pre></td></tr></table></div></figure>


<p>若有输出结果，则直接用rpm -e删除之，再输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chkconfig --list | grep -i mysql</span></code></pre></td></tr></table></div></figure>


<p>检查mysql服务，有的话再删除之</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo chkconfig --del mysql</span></code></pre></td></tr></table></div></figure>


<p>然后按照安装mysql的步骤再安装一次即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为知笔记使用笔记(1)-启动方式]]></title>
    <link href="http://grunmin.github.io/blog/2013/07/21/wei-zhi-bi-ji-shi-yong-bi-ji-1-qi-dong-fang-shi/"/>
    <updated>2013-07-21T10:40:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/07/21/wei-zhi-bi-ji-shi-yong-bi-ji-1-qi-dong-fang-shi</id>
    <content type="html"><![CDATA[<p>linux下软件的启动方式有多种，双击快捷方式对为知笔记这个软件并不管用，因此我们寻求其他更有linux风格的方式。<br/>
文中的方法对于所有应用程序都是通用的。</p>

<!-- more -->


<h3><strong>为知笔记下载：</strong></h3>

<p><a href="http://www.wiz.cn/download.html">为知笔记下载</a></p>

<p>解压包到自己名下的文件夹，启动图标在bin文件夹里。</p>

<h3>方式1 创建变量</h3>

<p>在加环境变量后可以直接在命令行启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vi /etc/profile  
</span><span class='line'># export PATH="$PATH:/home/username/path/wiznote/bin/"  
</span><span class='line'># source /etc/profile #重新加载环境变量  </span></code></pre></td></tr></table></div></figure>


<p>然后就可以在命令行下直接输入wiznote启动。</p>

<h3>方式2 使用alias</h3>

<p>其实我们可以在命令行直接输入/path/to/wiznote/bin/wiznote来启动，不过每次都需要输入很长的一段命令，因此可以用alias来使命令更简单</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vi .bashrc  #打开bash配置文件  </span></code></pre></td></tr></table></div></figure>


<p>在文档末尾添加一行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias note="/path/to/wiznote/bin/wiznote"</span></code></pre></td></tr></table></div></figure>


<p>保存，重新启动终端模拟器，输入note即可启动<br/>
（/path/to…… 需要根据自己的解压目录具体修改）</p>

<h3>方式3 创建桌面快捷方式</h3>

<p>直接复制bin/wiznote到桌面是不能正常使用wiznote的，需要为其创建一个链接，具体如下：
在终端输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ln -s /path/to/wiznote/bin/wiznote /path/want/to/locate</span></code></pre></td></tr></table></div></figure>


<p>第一个path是原来wiznote的目录，第二个path是要安放快捷方式的地方。<br/>
直接双击图标即可启动。</p>

<h3>方式4 添加到快捷启动栏</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vi /usr/share/applications/wiznote.desktop</span></code></pre></td></tr></table></div></figure>


<p>复制一下代码到文件中：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Desktop Entry]  
</span><span class='line'>Name=wiznote  
</span><span class='line'>GenericName=cloud note-taking application  
</span><span class='line'>Comment=taking note and manage information  
</span><span class='line'>Exec=/pate/to/wiznote/bin/wiznote  
</span><span class='line'>Terminal=false  
</span><span class='line'>Type=Application  
</span><span class='line'>StartupNotify=true  
</span><span class='line'>Icon=/path/toznote/share/wiznote/skins/wiznote64.png  
</span><span class='line'>Categories=KDE;QT;Utility;  </span></code></pre></td></tr></table></div></figure>


<p>其实以上代码可在/path/to/wiznote/share/applications/wiznote中找到。<br/>
Name是启动栏里显示的名称，Exec是打开路径，Icon是图标路径，Categories是归类，可以填Network.</p>
]]></content>
  </entry>
  
</feed>
