<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[郭润民的博客]]></title>
  <link href="http://grunmin.github.io/atom.xml" rel="self"/>
  <link href="http://grunmin.github.io/"/>
  <updated>2013-08-05T11:32:37+08:00</updated>
  <id>http://grunmin.github.io/</id>
  <author>
    <name><![CDATA[Grunmin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于知道不知道的几点理解]]></title>
    <link href="http://grunmin.github.io/blog/2013/08/05/guan-yu-zhi-dao-bu-zhi-dao-de-ji-dian-li-jie/"/>
    <updated>2013-08-05T11:24:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/08/05/guan-yu-zhi-dao-bu-zhi-dao-de-ji-dian-li-jie</id>
    <content type="html"><![CDATA[<p><strong>关于大学学习的四个层次：</strong></p>

<ul>
<li><p>不知道自己不知道</p></li>
<li><p>知道自己不知道</p></li>
<li><p>不知道自己知道</p></li>
<li><p>知道自己知道</p></li>
</ul>


<!-- more -->


<p>通常我们的理解是这样：甫入大学，在没有对大学尤其是专业进行深入的了解之前，没能认识到自己知识的匮乏，此谓之不知道不知道。随着专业的学习，渐渐接触更多东西，开始感觉自己原有的知识不足以解决新的问题，有更多的求知欲望，此谓之知道不知道。在不断的专业学习和思维训练中，个人整体的知识架构有了新的改善和突破，知识量的积累导致质的突破，在这阶段陆续获得一些重要的奖项，已经与初入大学时大有区别，但是自身并未意识到这一点，此谓之不知道知道。在大学最后的日子，回顾总结自己大学的轨迹和面临着要把自己推销给社会的现实，促使自己对自我认知的一个飞跃，始悟到此时的自己羽翼已丰，可以乘风破浪矣，此谓之知道知道。</p>

<p>然而，这或许有另外的意思哩。</p>

<p>我们把这几句话写在一起：</p>

<ul>
<li><p>不知道    <code>不知道</code></p></li>
<li><p>知道      <code>不知道</code></p></li>
<li><p>不知道    <code>知道</code></p></li>
<li><p>知道      <code>知道</code></p></li>
</ul>


<p>其实我们早已发现，这几句话里透露的信息是，大学是从不知道到知道的一个过程。虽然这些话从始至终似乎重点讲自我认知的改变，但是从上面排列来看，它所要表达的重点是后一列：从不知道到知道。而这所谓知道不知道，是对专业知识了解深浅的一种描述。自己的认知经历了一个反复不是重点，重点是随着学习深入专业知识的积累或者其他认知的不断提升，证据是，第三层次，即使不知道自己在提升但不妨碍自己的进步，所以它排在第三。因此这些话讲的是知识的故事。</p>

<p>然而我们是否注意到前面这一列呢？</p>

<p>人非生而知之者，然则知识的积累总是时刻在进行的，有些人的速度快些，有些人的速度慢些。在大学的学习也是如此。一部分人比另一部分人更早“知道”，有部分人知道毕业依然“不知道”。不管如何，每个人都会有不小的进步。在大学有限的时间里，是什么导致了这种区别呢？……这句话没有讲。它讲的是大学是个从不知道到到知道的过程，这听起来很美妙。它给新生描述的是一个美妙的前景，它也许是毕业生精辟的总结。但是它教给了我们什么？没什么。</p>

<p>事实上，我们更关心造成这些区别的原因是什么。</p>

<p>我们可以把上面的话再写下来：</p>

<ul>
<li><p><code>不知道</code>    不知道</p></li>
<li><p><code>不知道</code>    知道</p></li>
<li><p><code>知道</code>      不知道</p></li>
<li><p><code>知道</code>      知道</p></li>
</ul>


<p>只不过把这句话按照前一列来排序而已。不知道有何区别呢？</p>

<p>何谓不知道自己不知道，有个说法是，一个人的知识如果用一个圆来表示，那么知识越多，圆的面积就越大，它所接触到的外界的东西就越多，越能发现到自己不知道的东西。因此无知的人总是觉得自己无所不知，而博学的人却能保持谦逊，因为他知道自己有太多的不知道。举个不成熟的例子，一个新生想知道图书馆里有没有指导自己解决人际交往问题的书，这是一个问题，但是他已经意识到遇到问题可以上图书馆寻找答案。如果他确实遇到了交际问题而一直闷闷不乐，愁眉苦脸，没有寻找帮助的意识，他就不知道有前面那个问题的存在，也就不知道自己对那个问题的解答，不知道自己不知道。</p>

<p>而不知道自己知道也是如此。我甚至不能肯定这一层次就比上一层更高。因为它们的意识是停留在同一层次的，区别只在知识的多寡。然而知识是可以不断丰富的，而意识要做到这一点却很难。现实的例子是，我们往往可以在写文章的时候引经据典，可以围绕社会热点侃侃而谈，可以在别人遇到问题时提供指导，而往往自己遇到问题却钻进思维的死胡同。再搬出前面那个例子，想想看，当你遇到一样的问题，你会作出理性的判断吗？你知道解决有这条途径，问题是，你知道你知道这条途径吗？</p>

<p>意识的提升往往落后于知识的提升。更多的，我们是在考场上，在面试中，才会调动自己的头脑努力去寻找自己的答案。如果我们愿意把考试这个概念扩大化的话，兴许可以发现，对于生活这个无所不在的考试，许多人是不及格的。当脑袋里的知识不能及时有效地发挥作用，那么它的价值就没有想象中的那么大。</p>

<p>在这四个境界中，我认为，知道不知道或许是最为难得的。关于这一点，我的理解与文中第一种所描述的不同。既然不知道，又如何知道？我认为，上述所谓这个不知道，不是具体到某个问题，而是对知识量的抽象描述，是对自身的一个界定。那么，所谓的知道不知道，就是说自己知道了自己知识缺乏这个问题，并不是说知道了一个不知道的问题。</p>

<p>而我所认为的不知道，不是具体值这个问题。它可以是诸如不知道图书馆是否有关于解决人际关系问题的书，不知道有什么方法可以快速开发软件等等。没有人无所不知，但是知道自己无知和知道自己不知道，是截然不同的。前者顶多让人谦逊，甚至令人畏惧。而后者却能促使人去寻找解决的方法，从而去改变世界。再搬出第一个例子。即便不知道是否有这些书的存在，但既然已经意识到了这个问题，就会想方设法去解决。不知道如何快速开发，他会去寻找我们称之为框架的东西。因为脑海里存在了某个相关的概念和求索的理念。在别人没有意识到问题时候，或者说别人不认为是问题的时候，意识到了问题，找出了这个问题。和普通人相比，就像出卷老师和学生的区别，一个积极发现问题，一个被动解决问题。知道自己不知道，所以比别人更早知道。</p>

<p>基于上述的理由，我不能分辨知道自己知不知道与否哪个更高级——两者都有很强的改造世界的能力。知不知道解决一个具体问题的方法，说起来更像一个概率问题。生活中的问题有无数个，谁能说自己一定知道呢？如果说区别的话，或许可以这样区别：不知道的，意味着不是自己的，是外在的;知道的，就是自己的，是内在的。认识外在和认识自我孰轻孰重，不好一而概之。</p>

<p>关于知道不知道，有一个有趣的问题。很多人以为自己知道，其实并不知道。有个哥伦布竖鸡蛋的传说。</p>

<blockquote><p>哥伦布发现了新大陆。从海上回来，他成了西班牙人民心目中的英雄。国王和王后也把他当作上宾，封他做海军上将。可是有些贵族瞧不起他，他们用鼻子一哼，说：“哼，这有什么稀罕？只要坐船出海，谁都会到那块陆地的。”</p>

<p>在一次宴会上，哥伦布又听见有人在讥笑他了。“上帝创造世界的时候，不是就创造了海西边的那块陆地了吗？发现，哼，又算得了什么！”哥伦布听了，沉默了好一会儿，忽然从盘子里拿个鸡蛋，站了起来，提出一个古怪的问题：“女士们，先生们，谁能把这个鸡蛋竖起来？”</p>

<p>鸡蛋从这个人手上传到那个人手上，大家都把鸡蛋扶直了，可是一放手，鸡蛋立刻倒 了。最后，鸡蛋回到哥伦布手上，满屋子鸦雀无声，大家都要看他怎样把鸡蛋竖起来。</p>

<p>哥伦布不慌不忙，把鸡蛋的一头在桌上轻轻一敲，敲破了一点儿壳，鸡蛋就稳稳地直立在桌子上了。</p>

<p>“这有什么稀罕？”宾客们又讥笑起哥伦布来了。</p>

<p>“本来就没有什么可稀罕的，”哥伦布说，“可是你们为什么做不到呢？”</p>

<p>宾客们一个个强词夺理：“鸡蛋都破了，那算什么呢？”</p>

<p>哥伦布却继续保持不以为然的态度：“我在刚开始定条件时，曾有说过不允许把鸡蛋敲破？”</p>

<p>哥伦布离席而去时还留下了一句令人回味的话：“虽然是很简单的游戏，你们却没有一个人会做；知道怎么做之后，大家却都说太简单了！”</p>

<p>宾客们一时哑口无言。</p></blockquote>

<p>我想，身边应该可以找出很多这样的例子吧？^&ndash;^</p>

<p>同样的事情，有的人绞尽脑汁也解不出来，有的人轻易解出来了。解不出的人讥讽，这有什么稀罕的？只不过一时没有想到而已。 也许真是这样，但问题是，没有那个解出来了的人的存在，没想到常常是永远都想不到了。一旦问题解出来了，很多人就跳出来表示自己也会。砸个鸡蛋大家当然都是会的，问题是不知道要砸，或者，用另外一个办法，转它。</p>

<p>对于我而言，大学四层次的第一种描述，能让我体味到语言结构的优美和一气呵成的快感。而第二种描述更能让我保持一种正确的姿态来对待生活中的各种问题，保持对智慧的不懈探索和追求。我愿意在以后的日子，尽我所能地做到这一点。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora 安装 Zend Frame 笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/08/02/fedora-an-zhuang-zend-frame-bi-ji/"/>
    <updated>2013-08-02T00:15:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/08/02/fedora-an-zhuang-zend-frame-bi-ji</id>
    <content type="html"><![CDATA[<h2>新建项目</h2>

<p>下载Zend Frame安装包(现在下载ZF要注册！可以用这条命令直接下载)</p>

<!-- more -->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://framework.zend.com/releases/ZendFramework-1.11.11/ZendFramework-1.11.11-minimal.tar.gz</span></code></pre></td></tr></table></div></figure>


<p>命令行输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php -i | grep include_path </span></code></pre></td></tr></table></div></figure>


<p>(若显示php命令不存在，就把php安装目录里bin文件下的php文件复制到可执行目录下，如/bin或/usr/bin)<br/>
在服务器文件根目录apache2/htdocs下执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ zf create project [projectname]</span></code></pre></td></tr></table></div></figure>


<p>(projectname即你要的项目名，不加方括号)，会生成一个projectname的目录。此时目录下有application,docs,library,public,tests目录。<br/>
把之前的Zend文件夹再复制到library目录下。</p>

<h2>配置php，启动rewrite功能</h2>

<p>进入apache的源码目录(不是安装目录)输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ find -name mod_rewrite.c
</span><span class='line'>$ cd PATH/to/mod_rewrite.c  #进入mod_rewrite.c所在目录
</span><span class='line'>$ sudo /usr/local/apache2/bin/apxs -c mod_rewrite.c
</span><span class='line'>$ sudo /usr/local/apache2/bin/apxs -i -a -n mod_rewrite mod_rewrite.la</span></code></pre></td></tr></table></div></figure>


<p>成功的话应该在你的apache的modules目录中编译出一个mod_rewrite.so文件。<br/>
编辑httpd.conf文件，确认httpd.conf中已经包含mod_rewrite.so的加载语句，如下：
<code>LoadModule rewrite_module modules/mod_rewrite.so</code>(即把此语句前的#号去掉)<br/>
这时你的apache应该已经支持rewrite了。</p>

<h2>配置apache</h2>

<p>修改apache/conf/httpd.conf<br/>
把AllowOverride None 的None改成 All<br/>
重启apache</p>

<p>若成功的话打开浏览器进入<code>localhost/projectname/public</code>可以看到Zend Frame的欢迎界面</p>

<p>注，我安装的版本是Zend Framework Version: 1.11.11，其他版本没有试过，查询版本信息可用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zf show version</span></code></pre></td></tr></table></div></figure>


<p>安装过程中遇到了许多问题，比如服务器加载失败，出现500错误等。按照一些教程去弄虚拟主机，并设置library为apache文件根目录。结果证明这些都是多余的。如果按照上面的步骤安装出现了问题，可以查看apache2/log/error_log文件。如出现下面的问题，可以参考参考资料里的<a href="http://ayiui4566.iteye.com/blog/662170">wamp+Zend框架配置问题</a>。<br/>
 Request exceeded the limit of 10 internal     redirects due to probable configuration error. Use &lsquo;LimitInternalRecursion&rsquo;     to increase the limit if necessary. Use &lsquo;LogLevel debug&rsquo; to get a backtrace.</p>

<p>  /usr/local/apache2/htdocs/zftest/.htaccess:            Invalid command &lsquo;RewriteRule!&#46;(js|ico|gif|jpg|png|css)$&rsquo;, perhaps             misspelled or defined by a module not included in the server configuration</p>

<p>   PHP Warning:  require_once(Zend/Application.php):      failed to open stream: No such file or directory in /usr/local/apache2/         htdocs/zftest/public/index.php on line 18</p>

<p>   参考资料：
   <a href="http://www.path8.net/tn/archives/961">Linux下Apache安装/增加mod_rewrite模块以启用rewrite功能</a><br/>
   <a href="http://ayiui4566.iteye.com/blog/662170">WAMP+Zend框架配置问题</a><br/>
   <a href="http://blog.csdn.net/daydreamingboy/article/details/6327527">Zend Framework学习日记(1)&mdash;环境搭建篇</a><br/>
   <a href="http://blog.csdn.net/mengxiangbaidu/article/details/7046568#">Zend Framework教程-用Zend命令行快速创建Zend应用</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora安装wecenter笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/07/25/fedoraan-zhuang-wecenterbi-ji/"/>
    <updated>2013-07-25T20:32:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/07/25/fedoraan-zhuang-wecenterbi-ji</id>
    <content type="html"><![CDATA[<p><em>此文是前文配置lamp的延伸</em><br/>
wecenter需要服务器支持mysqli或者pdo模块,支持curl,GD图像处理库，原来安装lamp过程中并无相关方面的配置，鼓捣了半天之后其他条件都已满足，唯独GD图像处理库不能安装。</p>

<!-- more -->


<p>谷歌了许多结果，一一尝试，一一失败，最后看到<a href="http://tech.soft6.com/665/16/78687.html">这篇文章</a>，果断把之前编好的php删除了按照文中方法重装一遍，居然成功了！</p>

<p>现在从零开始记录一下安装过程。</p>

<p>按照上一篇笔记配置好lamp环境，php先不安装。
把下载下来的wecenter里的UPLOAD复制到/usr/local/apache2/htdocs/里（即文件根目录），打开浏览器，输入地址<code>http://localhost/UPLOAD/install</code>，进入安装界面。在我的机子上，一开始不能满足的条件是数据库模块，curl支持，图像处理库和目录权限。<br/>
从最简单的开始，因为后面还会要求UPLOAD下的文件开放权限，因此直接一个</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo chmod 777 /usr/local/apache2/htdocs/UPLOAD</span></code></pre></td></tr></table></div></figure>


<p>之后就是折腾了很久的GD，Linux下得GD库安装要比windows麻烦很多。先参照此文：<a href="http://tech.soft6.com/665/16/78687.html  ">http://tech.soft6.com/665/16/78687.html  </a>
此前的多次实验表明这个是唯一比较靠谱的安装方法（当然不才眼界有限）。装好之后就可以进行下一步了。<br/>
开启curl和mysqli或者pdo支持，可以用如下方法
以curl为例，首先</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /usr/local/php-***/ext/curl #进入源码包的curl目录
</span><span class='line'>$ /usr/local/php/bin/phpize #运行phpize命令
</span><span class='line'>$ ./configure --with-php-config=/usr/local/php/bin/php-config
</span><span class='line'>$ sudo make && make install</span></code></pre></td></tr></table></div></figure>


<p>成功后可以看到创建的curl.so文件位于/usr/local/php/lib/php/extension/no-debug-non-zts-*******/,复制curl.so到/usr/local/php/ext下(没有目录则创建一个)，再敲入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vi /usr/local/php/lib/php.ini​</span></code></pre></td></tr></table></div></figure>


<p>在加载模块(一堆extension处 大概第980行)加上一行extension=curl.so 修改extension_dir=“/usr/local/php/ext” (第819行),重启apache即可。(前面的操作如需立刻看到效果也需重启apache)</p>

<p><a href="http://blog.csdn.net/grunmin/article/details/9468639">这里</a>是增加php模块的方法介绍，mysqli可用此法解决。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fedora安装lamp环境笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/07/21/fedoraan-zhuang-lamphuan-jing-bi-ji/"/>
    <updated>2013-07-21T11:20:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/07/21/fedoraan-zhuang-lamphuan-jing-bi-ji</id>
    <content type="html"><![CDATA[<h2>前期工作</h2>

<p><strong>第1步</strong>： 在终端输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum update  # 更新系统</span></code></pre></td></tr></table></div></figure>


<p><strong>第2步</strong>：下载apache,mysql,apr,apr-util,phpMyAdmin,php,pcre(非必需）安装包</p>

<!-- more -->


<p><strong>第3步</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install gcc gcc-c++ libxml2 libxml2-devel pcre pcre-devel #安装依赖软件包</span></code></pre></td></tr></table></div></figure>


<p><strong>第4步</strong>：tar -zxvf 解压apache,mysql,php,pcre 等压缩包， sudo mv 移动到/usr/local目录下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cd /usr/local/pcre;./configure --prefix=/usr/local/pcre #安装pcre</span></code></pre></td></tr></table></div></figure>


<p>（非必需，如果安装apache时显示未安装pcre可按照此法安装）<br/>
<strong>第5步</strong>： cd httpd/srclib/ 解压apr,apr-util 到目录下，修改文件名（不带版本号，如apr-util）</p>

<h2>一、安装apache:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /usr/local/httpd  # 进入安装目录  
</span><span class='line'>$ sudo ./configure --prefix=/usr/local/apache2 --enable-so --with-mpm=worker --with-pcre=/usr/local/pcre --with-included-apr # 配置（注意./configure的/前有个小点，若没有按照上文安装pcre，可去掉--with-pcre后面的路径）
</span><span class='line'>$ sudo make
</span><span class='line'>$ sudo make install
</span><span class='line'> #(--prefix指定安装目录，配置文件在/usr/local/apache2/conf目录下，--enable-so启动加载共享模块的功能，--with-mpm=worker吿诉apache使用多线程化多处理模块worker.)</span></code></pre></td></tr></table></div></figure>


<p><strong>启动apache</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/apache2/bin/httpd -k start | stop</span></code></pre></td></tr></table></div></figure>


<p> 或</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/apache2/bin/apachectl start | stop</span></code></pre></td></tr></table></div></figure>


<p>(可用ps -e | grep httpd 查看apache是否已开启）</p>

<h2>二、 安装mysql：</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /usr/local
</span><span class='line'>$ sudo ln -s /usr/local/mysql-××× mysql #链接源码到一个文件夹
</span><span class='line'>$ cd mysql
</span><span class='line'>$ scripts/mysql_install_db --user=[username]    #（username为自己的用户名，中括号不用打进去，下同）
</span><span class='line'>$ sudo chown -R root .     #（注意末尾有个小点）
</span><span class='line'>$ sudo chown -R [username] data
</span><span class='line'>$ sudo chgrp -R [username] .</span></code></pre></td></tr></table></div></figure>


<p><strong>启动mysql</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> sudo /usr/local/mysql/bin/mysqld_safe --user=[username] &</span></code></pre></td></tr></table></div></figure>


<p><strong>设置开机启动Mysql</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp support-files/mysql.server /etc/init.d/[username]
</span><span class='line'>$ sudo cp support-files/mysqld_multi.server /etc/init.d/[username]
</span><span class='line'>$ sudo chmod +x /etc/init.d/[username]
</span><span class='line'>$ sudo chkconfig --add [username]</span></code></pre></td></tr></table></div></figure>


<p><strong>测试</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/mysql/bin/mysqladmin -u root -p version
</span><span class='line'>$ sudo /usr/local/mysql/bin/mysqlshow</span></code></pre></td></tr></table></div></figure>


<p><strong>修改密码，删除匿名用户</strong>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /usr/local/mysql/bin/mysqladmin -u root -p password [password]
</span><span class='line'>$ sudo /usr/local/mysql/bin/mysql -u root -p</span></code></pre></td></tr></table></div></figure>


<p>[password]可以不输入，上面两个命令是修改密码用，此时进入mysql命令界面</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; delete from mysql.user where host='localhost' and user='';
</span><span class='line'>mysql&gt; flush privileges;</span></code></pre></td></tr></table></div></figure>


<h2>三、安装php</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /usr/local/php-5__
</span><span class='line'>$ sudo ./configure --prefix=/usr/local/php --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql
</span><span class='line'>$ make
</span><span class='line'>$ sudo make install
</span><span class='line'>$ sudo cp /usr/local/php___/php.ini-__ /usr/local/php/lib/php.ini  </span></code></pre></td></tr></table></div></figure>


<p>修改httpd.conf 添加AddType application/x-httpd-php .php<br/>
在DirectoryIndex index.html 后加入index.php<br/>
<strong>重启apache</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo /usr/local/apache2/bin/apachectl restart</span></code></pre></td></tr></table></div></figure>


<h2>四、安装phpMyAdmin:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar -zxvf phpMyAdmin___ -C /usr/local/apache2/htdocs</span></code></pre></td></tr></table></div></figure>


<p>到此全部完成</p>

<h2>Q1</h2>

<p>如果测试mysql时没有显示版本信息等界面，而是显示Can&rsquo;t connect to local MySQL server through socket &lsquo;/tmp/mysql.sock&rsquo;(2)则极有可能是mysql没有安装成功。解决办法是删除系统自带的mysql服务，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rpm -qa | grep mysql</span></code></pre></td></tr></table></div></figure>


<p>若有输出结果，则直接用rpm -e删除之，再输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chkconfig --list | grep -i mysql</span></code></pre></td></tr></table></div></figure>


<p>检查mysql服务，有的话再删除之</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo chkconfig --del mysql</span></code></pre></td></tr></table></div></figure>


<p>然后按照安装mysql的步骤再安装一次即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为知笔记使用笔记(1)-启动方式]]></title>
    <link href="http://grunmin.github.io/blog/2013/07/21/wei-zhi-bi-ji-shi-yong-bi-ji-1-qi-dong-fang-shi/"/>
    <updated>2013-07-21T10:40:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/07/21/wei-zhi-bi-ji-shi-yong-bi-ji-1-qi-dong-fang-shi</id>
    <content type="html"><![CDATA[<h3><strong>为知笔记下载：</strong></h3>

<p><a href="http://www.wiz.cn/download.html">为知笔记下载</a></p>

<p>解压包到自己名下的文件夹，启动图标在bin文件夹里。</p>

<h3>方式1 创建变量</h3>

<p>在加环境变量后可以直接在命令行启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vi /etc/profile  
</span><span class='line'># export PATH="$PATH:/home/username/path/wiznote/bin/"  
</span><span class='line'># source /etc/profile #重新加载环境变量  </span></code></pre></td></tr></table></div></figure>


<p>然后就可以在命令行下直接输入wiznote启动。</p>

<!-- more -->


<h3>方式2 使用alias</h3>

<p>其实我们可以在命令行直接输入/path/to/wiznote/bin/wiznote来启动，不过每次都需要输入很长的一段命令，因此可以用alias来使命令更简单</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vi .bashrc  #打开bash配置文件  </span></code></pre></td></tr></table></div></figure>


<p>在文档末尾添加一行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias note="/path/to/wiznote/bin/wiznote"</span></code></pre></td></tr></table></div></figure>


<p>保存，重新启动终端模拟器，输入note即可启动<br/>
（/path/to…… 需要根据自己的解压目录具体修改）</p>

<h3>方式3 创建桌面快捷方式</h3>

<p>直接复制bin/wiznote到桌面是不能正常使用wiznote的，需要为其创建一个链接，具体如下：
在终端输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ln -s /path/to/wiznote/bin/wiznote /path/want/to/locate</span></code></pre></td></tr></table></div></figure>


<p>第一个path是原来wiznote的目录，第二个path是要安放快捷方式的地方。<br/>
直接双击图标即可启动。</p>

<h3>方式4 添加到快捷启动栏</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vi /usr/share/applications/wiznote.desktop</span></code></pre></td></tr></table></div></figure>


<p>复制一下代码到文件中：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Desktop Entry]  
</span><span class='line'>Name=wiznote  
</span><span class='line'>GenericName=cloud note-taking application  
</span><span class='line'>Comment=taking note and manage information  
</span><span class='line'>Exec=/pate/to/wiznote/bin/wiznote  
</span><span class='line'>Terminal=false  
</span><span class='line'>Type=Application  
</span><span class='line'>StartupNotify=true  
</span><span class='line'>Icon=/path/toznote/share/wiznote/skins/wiznote64.png  
</span><span class='line'>Categories=KDE;QT;Utility;  </span></code></pre></td></tr></table></div></figure>


<p>其实以上代码可在/path/to/wiznote/share/applications/wiznote中找到。<br/>
Name是启动栏里显示的名称，Exec是打开路径，Icon是图标路径，Categories是归类，可以填Network.</p>
]]></content>
  </entry>
  
</feed>
