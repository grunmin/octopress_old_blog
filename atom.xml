<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[郭润民的博客]]></title>
  <link href="http://grunmin.github.io/atom.xml" rel="self"/>
  <link href="http://grunmin.github.io/"/>
  <updated>2014-12-26T16:49:21+08:00</updated>
  <id>http://grunmin.github.io/</id>
  <author>
    <name><![CDATA[Grunmin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的fedora应用列表]]></title>
    <link href="http://grunmin.github.io/blog/2014/11/13/wo-de-fedoraying-yong-lie-biao/"/>
    <updated>2014-11-13T23:11:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/11/13/wo-de-fedoraying-yong-lie-biao</id>
    <content type="html"><![CDATA[<p>用fedora也有接近两年时间了，现在将自己所用的应用都列出来供参考。</p>

<!--more-->


<h3>文档处理</h3>

<p>wps(金山公司推出的文档处理软件，类似软件还有永中office，libreoffer等)</p>

<p>evolution（系统自带，处理邮件，联系人，日历，任务等）</p>

<p>wiznote（为知笔记，适合做个人知识库）</p>

<p>haroopad（markdown编辑器）</p>

<p>sublime text (代码编辑器)</p>

<h3>即时通讯</h3>

<p>pidgin（系统自带)</p>

<p>empathy(系统自带)</p>

<h3>互联网</h3>

<p>chrome</p>

<p>firefox</p>

<p>bcloud（百度云客户端）</p>

<h3>shell extention</h3>

<p>drop down terminal</p>

<p>hide top bar</p>

<p>systemmonitor</p>

<p>taskbar</p>

<p>todo.txt</p>

<p>toggle terminal</p>

<h3>其他</h3>

<p>smplayer（小而全的播放器，带youtube资源播放器）</p>

<p>guake（个性化的shell终端）</p>

<p>fcitx+搜狗输入法（完美解决linux下中文输入问题）</p>

<p>vbox（虚拟机软件）</p>

<p>scrot（命令行形式的截图软件）</p>

<p>axel（多线程下载器）</p>

<p>以及安卓，ruby，lamp，c开发环境。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[瞎扯，关于意识的连续]]></title>
    <link href="http://grunmin.github.io/blog/2014/11/13/xia-che-%2Cguan-yu-yi-shi-de-lian-xu/"/>
    <updated>2014-11-13T23:10:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/11/13/xia-che-,guan-yu-yi-shi-de-lian-xu</id>
    <content type="html"><![CDATA[<p>今晚做期末复习的时候打起瞌睡。看着PPT不自觉失去意识，不知多久以后突然惊醒，如此反复。</p>

<!--more-->


<p>目前我生活的状态，和今晚的状态十分相似————倒不是说走路的时候偶尔会失去意识————意识的不连续，不仅打瞌睡的时候存在，对某些人而言，生活时时刻刻都是如此。精神恍惚，思考和做事没有条理，做文章，东一段，西一段，不成体系。而当精神恍惚成为常态，同时也是行尸走肉的开始。</p>

<p>当我偶尔兴奋过度口不择言的时候，我时常能感觉到莫名的快感，这在平时生活中并不多见。与酒后胡言不同，这种快感没有酒为自己不光彩的举动掩护。我发现，当我的嘴巴没有跟着我的脑袋走，说话不受大脑限制的时候，往往有令人惊喜的效果。它领导了思维的走向，而不是受限于贫白的想法。</p>

<p>于是我开始考虑，思维为何成了交流的拌索。（思路和意识）</p>

<p>这其中有生理上的原因。虽然是重要的一环，但这里不想讨论，因为于事无益。</p>

<p>一个可能是思路局限。把思维抽空，只放维持生存的东西而没有扩充新的东西，会让大脑处于迟钝呆滞的状态。一个不极端的例子是理工人不会作文，因为他们的思维放不开，容不下任何不严谨的东西，让不下天马，不能行空。</p>

<p>当我们有表达的欲望的时候，所说所想的精彩常常超出我们的想象。我们的理性的思维，对感性的冲动并没有很好的理解。一种思维不能理解另一种思维里蕴含的能量。理工人将自己的思维压缩，将不严谨的，不精简的部分去掉。文人将自己的思维扩展，试图将其加入不同的元素发酵。我们的脑海里同时存在这两种倾向。专业的训练让我们逐渐去增强其中一种而忽略另一种。</p>

<p>思路的扩展对作文是有利的，某种程度上是不可或缺的。写文章不像搭电路，只有最优解，或者有明显的解题方向。作文，往往我们不知道下一段，甚至下一句应该写什么。（有些人或许知道，而我是不知道的。）这是文人的思维的特点吧（我也不敢说）。没有外在的框框束缚，任思路随太阳车驰骋。能够任意调动脑袋里的资源，无论如何总比被强制分配跑得快。</p>

<p>另一种可能是，没有以前那么专注了。</p>

<p>不停地在不同事情之间切换焦点，让意识没有延续和加强的时间。没有持续聚焦的惯性，注意力便逐渐滑走。随着精神力的流失到一定程度，脑海里建立的联系被迫中断。就像计算机掉电一样，没有机会保存尚未写入存储空间的信息。久而久之，造成信息积累不足，或者不连贯。相对于从未涉略一个领域，这种不连贯更容易造成麻痹，使之无知而不自知。大脑里断断续续的点投影成一副模糊不清的影像，而我们通常没有去检查这个影像的习惯。换句话说，当我们的思考没有深入到一定的程度，通常难于发现意识中的空白。而当我们把试图将它表现出来的时候，模糊的影像并不能提供给我们多少有用的信息。这是内置信息与表面信息不对称的结果。造成这个结果的原因便是意识的不连续。</p>

<p>这看起来像一个死循环。当意识不连续的时候，接收信息散乱，效率低下。当试图重塑这些信息的时候，若没有关联信息的辅助，思维难免限于内存不足的窘境。外在的体现便是处理能力不足，偶尔当机，就像打瞌睡一样。</p>

<p>这两者之间的区别是，一个是被动的，一个是主动的。主动意味着可以改变，这也是现在时间管理那么多人热捧的部分原因。它让完整意识的存留时间变得可控，让知识的存储有序便于提取。纵向考察，便是工作效率提高了。</p>

<p>和刘未鹏的思维体力的概念不同的是，意识的连续不只要求在工作时间集中精力，也要求在衔接时间里保持意识与现实的联络。番茄工作法中，十到十五分钟的休息时间里若不能保持意识连续，那么效率会打个折扣。</p>

<p>这并不意味着我们不能放松大脑。理想的休息时间通常的选择有两个：保存当前工作状态到存储空间，然后清空内存，停止无关信息的输入；保持大脑持续而少量强相关的信息获取以避免思维存在空白区。第一种自不必多论，第二种选择，其作用类似于计算机系统中的软链接。一个小文件可以链接到一个拥有完整信息的大文件，通过其中的联系快速找回工作状态。为什么程序员在编程时不能被打断？一个原因是突然的中断让他们无法及时保存信息，造成意识的中断。如果给他们足够的时间，比如，他们自行停止工作，或者花几分钟时间将状态编码保存下来。过段时间他们也能够较容易地通过回溯将之前的工作状态找回。思考的方向并非单一不可逆转，我们可以通过倒序回忆今天的所做所说体会到这一点。</p>

<p>有的人能够不经回忆而完整清晰地说出前一天的经历，而有的只能零碎的记起其中印象比较深刻的部分。前者不仅在普通事情上的记忆有突出表现，对一些印象深刻的事情的记忆，也比后者要清晰的多。也就是说，这两种记忆存在某种程度的正相关。如果能够保留两件重要事情之间的空档期的映象，那么对重要事情的回忆也会有序而高效。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《牧羊少年奇幻之旅》]]></title>
    <link href="http://grunmin.github.io/blog/2014/11/13/%3C%3Cmu-yang-shao-nian-qi-huan-zhi-lu-%3E%3E/"/>
    <updated>2014-11-13T23:09:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/11/13/<<mu-yang-shao-nian-qi-huan-zhi-lu->></id>
    <content type="html"><![CDATA[<p>《牧羊少年奇幻之旅》是一部朴素而不普通的童话。故事主人公，一位牧羊的少年，梦见在遥远的埃及藏有一批宝藏。他在耶路撒冷之王的指导下踏上了寻宝的道路。在经历了欺骗和对心上人思念的煎熬以及战争死亡的威胁后，在绿洲遇到炼金术士，通过他的教导，明晰了自己的天命，最终克服困难找到属于自己的宝藏。</p>

<!--more-->


<p>书中的语言朴素直白，没有花很多笔墨修饰来修饰情节，但是它描写的故事感动了世人。它朴素的语言下蕴含的朴素的道理让我收益匪浅。比如：</p>

<blockquote><p>他们会要求你改变自己来迁就他们，如果你不是他们所期望的样子，他们就会不高兴。绝大多数人似乎都很清楚别人该怎么过活，却对自己的一无所知。</p></blockquote>

<p>人们通常不知道自己是怎么个活法，而且似乎也没有兴趣去了解它。但是人们最喜欢做的事情，却是规定别人应该怎么活。当别人的言行或者计划与自己的设想不符，他们表现得像被冒犯的样子。</p>

<hr />

<p>《牧羊少年奇幻之旅》告诉读者，每个人都有自己的天命，但是大多数人都没有意识到这一点。</p>

<blockquote><p>那就是你一直想去做的事。每个人，在他们年轻的时候，都知道自己的天命。在那时候，每件事都清晰不昧，每件事都有可能。他们不会害怕作梦，也不畏惧去渴望生命中任何会发生的事物。然而，随着岁月流逝，一股神秘的力量将会说服人们，让他们相信，根本就不可能完成自己的天命。</p>

<p>这股力量看似负面，实则引导你去完成你的天命。它能淬练你的精神、砥砺你的愿力，因为这是这个星球上最伟大的真理；不管你是谁，也不论那是什么，只要你真心渴望一样东西，就放手去做，因为渴望是源自于天地之心；因为那就是你来到这世间的任务。</p></blockquote>

<p>当我们年轻的时候，我们常常对自然有敏锐的感知。仰望白云，瞭望星空，我们身心一体，能够清楚自己的需求和渴望，能够知道自己想要做什么。从少年到中年这一阶段，我们逐渐背离了自己，去寻找别人眼中所谓的目标和使命。人们花心思规划自己的职业生涯，而这生涯却是一个未知的目的，并常常与我们的天命背道而驰。</p>

<hr />

<blockquote><p>老人指着广场一角，那里有一位面包师傅正站在自家商店橱窗边，老人说，“在他年幼时，他也渴望去旅行，但他决定先买间面包店，攒些钱在身边。这样，等到他年老时，就有能力到埃及去生活一个月。他从来不明白，人类在生命的任何一个阶段其实都有能力去完成他们的梦想。</p></blockquote>

<p>我很喜欢这句：</p>

<blockquote><p>他从来不明白，人类在生命的任何一个阶段其实都有能力去完成他们的梦想。</p></blockquote>

<p>偶尔听到有人说，再不疯狂就老了，要来一次说走就走的旅行。更多人像文中的面包师傅。不缺乏梦想，一辈子为梦想而努力，正如在生活中到处可见的都市白领，辛勤的工人，以及千千万万面包师傅们。我们应该如何去选择我们的生活呢？为梦想而努力的日子即使苦也觉得甜，但是我们需要把实现梦想的日子无限的延后吗？</p>

<hr />

<p>《牧羊少年奇幻之旅》的语言也十分的优美。在看惯了理工人严谨的文字后，童话语言的醇美让我耳目一新。这优美并非肤浅地只是指景物描写。作者对主人公的心理的描写显得认真而直白。让我感觉这个清纯的牧羊少年在直接与我对话。</p>

<blockquote><p>男孩嫉妒起这风的自由自在，同时看见了自己也可以拥有相同的自由无羁。没有什么可以阻绊他，除了他自己。羊群、商人女儿、安达鲁西亚的草原，都不过是他迈向命运终点的一步罢了！</p>

<p>当我拥有我的羊时，我很快乐，我也让周遭的一切都很快乐。人们看见我来了，也很高兴，他想道。可是现在我却悲伤又孤独。我快要变得尖刻又猜疑，只因为有人背叛我。我也会嫉妒那些找到宝藏的人，只因为我找不到自己的。而且我会越来越鄙视我自己，因为我太渺小了，不足以征服这个世界。</p></blockquote>

<hr />

<p>下面是我做的一些书摘。当我阅读这本书的时候，我情不自禁要把其中的语句摘录下来，以备日后品读。下面是其中的一部分。日后会一一将我的想法写下来。正如同样阅读此书的其他读者一样，在书上得到的，不仅仅的感官的享受，也是精神的一次洗涤，更是一次思想的激烈冲撞。</p>

<blockquote><p>我只能提供你一个建议，’这个最有智慧的人说，‘幸福的秘密就是去欣赏世界上所有的奇妙景观，但不要忘了汤匙里的油。’”
牧羊人没有说话。他了解老人告诉他的故事。一个牧羊人可以热爱旅行，但绝不能忘了他的羊群。</p>

<p>现在他终于明白了，为什么那个酒吧老板会那么生气。那个老板一直试图要告诉他，不要信任那个年轻人。“我就像大多数人一样－－只肯相信自己要相信的，不肯去看清事情究竟真正是怎么一回事。”</p>

<p>可是那个老王不曾说他会被骗钱，也不曾提到沙漠的无边无际，或者，有些人虽然明白自己的梦想，却从不期望去实现它。那个老王也不曾教他，金字塔原来只是一堆石头罢了，或者任何人都可以在自己盖一座金字塔。他也忘了提，如果你有够多的钱，可以买比从前更多的羊时，你应该毫不犹豫去买下来。</p>

<p>我知道我为什么想回去牧羊，他想。我了解羊，它们不会带给我麻烦，甚至还可以是我的好朋友。可是从另一方面来说，我并不知道沙漠是否会成为我的朋友，而我却必须在沙漠中寻找我的宝藏。如果我没找到它，我总是可以回家。我终于有了够多的钱，也有足够的时间，为什么不去呢？
他突然感到快乐无比。他永远都可以回去做个牧羊人，也总是可以回去水晶店工作。也许这个世界上还藏着其他的宝藏，不过他有一个梦，还遇见过一个国王，那可不是每个人都会有的。</p>

<p>“我已经往来穿越这片沙漠好多次了，”有天晚上一位骆驼夫说，“可是这片沙漠是如此广阔，地平线如此遥远，它们让人觉得渺小，因之觉得沉默。”男孩当下了解了他的意思，虽然他之前未曾来过沙漠。每当他看见大海，或是火焰，他也会陷入沉默，震撼于它们的力量。</p>

<p>土地荒瘠了，我必须找另一种谋生的方法。所以我就来当骆驼夫。然而这一切的灾难让我更加明白阿拉的箴言：人们不需要恐惧未知，但看你有无能力去追求自己的需要与渴望。
我们总是害怕失去，不管是我们的生命、财富，或我们所拥有的一切，可是当我们明了我们的一生和人类历史都是同一只手注写时，恐惧就会消失。”</p>

<p>一旦你步入沙漠就不可能回头了，”那位骆驼夫说，“而一旦你无法回头，你必须只去操心如何前进最好。其余的就交给阿拉，包括危险。</p>

<p>“我现在正活着，”有一晚他对男孩说，那时既没有月光也没有营火，他们正在一起吃着一串椰枣时，“当我吃东西的时候，我只想着吃，如果我正在行进，我也只专注地前进。如果我必须打仗，那么哪一天死，对我都一样。</p>

<p>因为我并不需要依靠我的过去活财富而活着。我只关心现在。如果你能活在当下这一刻，你就会活得很快乐。你就能够看清沙漠里永远有生命，天上永远有星星，而那些部落之所以会战争只不过因为那就是生命当中的一部分。生命对你来说将会是一场飨宴，一个盛大的庆典，因为生命就在我们活着的每一个当下。”</p>

<p>那个骆驼夫理解男孩在说什么。他明白地球表面上发生的任何事，都可以揭露出天地万物的来龙去脉。我们可以翻开书本的任何一页，或者看任何人的手；我们可以翻过一张牌，或者观察老鹰的飞行……不管观察什么，我们都可以将自己的经验和当下看见的联结在一起。事实上，并不是所观察到的那些事物本身能泄露什么，而是当人在观察身边一切时，本来就有能力洞悉天地之心。</p>

<p>“沙漠把我们的男人带离开我们，他们也不一定能回来，”她说，“我们都明白，而且也早就习惯了。不能回来的人变成云的一部分，变成藏匿在峡谷的动物的一部分，变成水，从地底涌出来。他们变成万物的一部分……。他们变成了天地之心。
我是一个沙漠的女人，我也以此为荣。我希望我的男人四处漂荡，自由如吹着沙丘的风。而如果有一天我必须，我也会很高兴他变成沙漠中的云和动物和水的一部分。”</p>

<p>沙漠中很多人都有洞悉天地之心的能力，因为他们是用一种自在的态度过日子。有人称他们预言家、先知，妇女老人怕他们，部落战士也不敢去找他们商谈。设想，如果大家事先知道了自己会死在战场上，还有谁愿意上战场呢？大家宁可尝试战争的滋味，宁可在不知道结果如何时去冲锋陷阵；未来早就被阿拉一手注写好了，而不管他写的是什么，一定都是为了人类好；部落战士都只活在当下这一刻，因为当下就已经有够多意外的了，而且他们必须时时刻刻注意许多事；像是敌人的剑会从哪一个方向刺过来？他的马在哪里？下一招必须出什么才能存活下来？</p>

<p>当一个人真心渴望某样东西时，整个宇宙都会联合起来帮助他完成梦想。</p>

<p>『魔鬼不是喝进人们嘴巴里的东西，』练金术士说，『而是从人们嘴巴里说出来的东西。』</p>

<p>骆驼是不能信任的家伙。它们可以一直走，走了好几千步都好像不会累似的，可是突然间它们就垮下来，死了。而马每过一段路就会累，所以你永远知道该要求它们走多远，也会知道什么时候它们会死。』</p>

<p>『法谛玛是一个沙漠的女人，』练金术士说，『她知道男人必须出去，以便能回来。而且她已经有了属于她的宝藏：那就是你。如今她希望你能够去找到你一直在追寻的东西。』</p>

<p>到了第三年，预兆会继续对你诉说着你的宝藏和你的天命，你会在绿洲四处晃荡，夜复一夜，而法谛玛将会不快乐，因为她会觉得是她绊住了你的追寻。但是你爱她，而她也会回报你的爱。你会想起来，她并未要求你留下，因为一个沙漠女人知道她必须等待她的男人。所以你不会去责怪她。可是很多时候当你走在沙地上的时候，想着也许你那时候应该离开……也许你应该更信任你对法谛玛的爱。因为，真正阻碍你、让你留在绿洲的，是你的恐惧，你害怕一旦离开就不会再回来了。到那时候，预兆会告诉你，你的宝藏已经被永远埋起来了。</p>

<p>『我现在就要走了。』他说，『而我要你知道，我会回来，我爱你因为……』
『不必说什么，』法谛玛打断他，『被爱就是因为被爱，爱是不需要任何理由的。』
法谛玛转身进去她的帐篷里，而当天亮以后，她像平日一般做着礼拜，可是对她来说，一切都不一样了。男孩已经不在绿洲了，这个绿洲对她的意义，已经和昨天不一样了。它已经不再仅仅是一处有着五万株棕榈树和三百个泉水的地方，不再是那个长长旅程休息站的地方。从男孩离开的那一刻起，对她而言，绿洲已经变成一处空洞的地方了。
从那一刻起，沙漠对她更为重要，她将会每天望着它，想象着男孩正遵循着哪一颗星的方向前进，去找寻他的宝藏。她将会在风中献上她的吻，希望这风将会吹拂着男孩的脸颊，告诉男孩她仍活得好好的。希望风儿将会告诉男孩，她正在等他，等一位勇敢去追寻宝藏的男人。从那一天起，沙漠对她的意义将只有一个：希望他会回来。
『不要去想着遗留在你背后的一切。』当他们上马要骑越过沙漠时，练金术士对男孩说，『一切都已经被注写在天地之心里了，而且它将会永远在那里。』
『人们总是比较梦想回家，胜过于离开家。』男孩说，他已经再度习惯沙漠的静寂。
『如果你所找到的是最最根本重要的东西，那么这样东西是不会被浪费掉的，而且你永远都可以回来；如果你所发现的只是暂时的光芒，就像彗星一样，那么在你回来的时候，它就不会存在了。』</p>

<p>当他们再度上路以后，男孩继续倾听着心的话语。他开始了解它的懦弱和狡猾，并且接受它就是这样。他不再害怕，也忘记了他需要回去绿洲，因为有一天下午，心告诉他，它很快乐。『即使我有时会抱怨，』心对他说，『那也是因为我就是某个人的心嘛，而人的心就是这样。人总是害怕去追求自己最重要的梦想，因为他们觉得自己不配拥有，或是觉得自己没有能力完成。因此作为人类的心的我们，只要一想到要去爱一个永远离开的人，或者一想到那些不再美好的时刻，更或者是那些本来应该找到却永远被埋在沙地的宝藏，我们就会觉得害怕。因为只要一发生这些情况，我们就会深深受创。』</p>

<p>『告诉你的心，害怕比起伤害本身更糟。而且没有一颗心会因为追求梦想而受伤，因为追寻过程中的每一个片刻，都是和神与永恒的邂逅。』</p>

<p>『追寻过程中的每一个片刻，都是和神与永恒的邂逅。』男孩对他的心说。『当我真心在追寻着我的梦想时，每一天都是缤纷的，因为我知道每一个小时都是在实现梦想的一部分。当我真实地在追寻着梦想时，一路上我都会发现从未想象过的东西，如果当初我没有勇气去尝试看来几乎不可能的事，如今我就还只是个牧羊人而已。』</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora 下安装金山快盘同步盘]]></title>
    <link href="http://grunmin.github.io/blog/2014/11/13/fedora-xia-an-zhuang-jin-shan-kuai-pan-tong-bu-pan/"/>
    <updated>2014-11-13T23:07:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/11/13/fedora-xia-an-zhuang-jin-shan-kuai-pan-tong-bu-pan</id>
    <content type="html"><![CDATA[<p>金山快盘推出了linux系统下的同步盘客户端，但是很遗憾没有红帽系的rpm安装包。尽管如此，我们可以通过一些操作在fedora下安装（mate桌面）（其他红帽系的没有尝试）</p>

<!--more-->


<ul>
<li>进入<a href="http://www.ubuntukylin.com/applications/showimg.php?lang=cn&amp;id=21">官网</a> 下载ubuntu版本的客户端（注意系统位数）</li>
<li>解压deb包，可看到<code>DEBIAN</code>,<code>etc</code>,<code>usr</code>,<code>opt</code>这几个文件夹（如只看到data.tar压缩包，则解压这个压缩包，可看到这几个文件夹）</li>
<li>进入解压后文件夹根目录，将<code>usr</code>,<code>opt</code>文件夹复制到系统根目录下</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cp -r usr /
</span><span class='line'># cp -r opt /</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装库文件</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install libqxt
</span><span class='line'># yum install boost-iostreams</span></code></pre></td></tr></table></div></figure>


<p>需要什么库文件可以通过在终端启动快盘时显示的错误信息排查。如果不是这两个的话也是正常情况。</p>

<ul>
<li>创建链接</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ln /usr/bin/kuaipan4uk /home/yourhomedirectory/anywhereyoulike</span></code></pre></td></tr></table></div></figure>


<p>此时双击该链接即可启动快盘</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux服务器本地和百度云备份脚本小试]]></title>
    <link href="http://grunmin.github.io/blog/2014/11/13/linuxfu-wu-qi-ben-di-he-bai-du-yun-bei-fen-jiao-ben-xiao-shi/"/>
    <updated>2014-11-13T23:06:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/11/13/linuxfu-wu-qi-ben-di-he-bai-du-yun-bei-fen-jiao-ben-xiao-shi</id>
    <content type="html"><![CDATA[<h3>本地单文件上传脚本，命名uf</h3>

<p>这是在本机上做的测试，利用<code>bpcs_uploader</code>脚本实现，只是进行简单的封装，自动完善云端文件路径。</p>

<p>技术要点：使用<code>dirname</code>获取文件所在目录，使用<code>pwd</code>获取文件完整路径，并作为云端文件路径。</p>

<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>cur_dir=$(cd "$(dirname "$1")"; pwd)
</span><span class='line'>name=$(basename "$1")
</span><span class='line'>/home/grm/bin/bpcs_uploader/bpcs_uploader.php upload $1 AWIN$cur_dir/$name</span></code></pre></td></tr></table></div></figure>


<h3>本地文件夹上传脚本，命名ud</h3>

<p><code>bpcs_uploader</code>脚本只能实现单个文件上传，用此脚本可以实现目录批量上传。</p>

<p>技术要点：通过<code>find</code>命令输出目录下所有文件，用<code>xargs -t -n1</code>实现单个输出，从而可以遍历目录下所有文件，并作为参数逐次赋予脚本<code>uf</code>，通过不断调用脚本<code>uf</code>实现批量上传。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>find $1 -name '*.*' |xargs -t -n1 /home/grm/bin/uf</span></code></pre></td></tr></table></div></figure>


<h3>服务器数据库每日备份脚本，命名backupday.sh(改自鸟哥的linux私房菜)</h3>

<p>技术要点：基本都是常规操作，注意<code>find</code>命令<code>-mtime</code>参数的使用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'># =========================================================
</span><span class='line'># 请输入，你想让备份数据放置到那个独立的目录去
</span><span class='line'>basedir=/backup/daily/
</span><span class='line'>
</span><span class='line'># =========================================================
</span><span class='line'>PATH=/bin:/usr/bin:/sbin:/usr/sbin; export PATH
</span><span class='line'>export LANG=C
</span><span class='line'>basefile1=$basedir/mysql.$(date +%Y-%m-%d).tar.bz2
</span><span class='line'>basefile2=$basedir/cgi-bin.$(date +%Y-%m-%d).tar.bz2
</span><span class='line'>[ ! -d "$basedir" ] && mkdir $basedir
</span><span class='line'>
</span><span class='line'># 1. MysQL (数据库目录在 /var/lib/mysql)
</span><span class='line'>cd /var/lib
</span><span class='line'>  tar -jpc -f $basefile1 mysql 
</span><span class='line'>
</span><span class='line'># 2. 定期删除旧备份
</span><span class='line'>DAYS=30
</span><span class='line'>find $basedir -name "mysql*" -type f -mtime +$DAYS -exec rm {} \;</span></code></pre></td></tr></table></div></figure>


<h3>代码及其他配置每周备份脚本，命名为backupweek.sh</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'># ====================================================================
</span><span class='line'># 使用者参数输入位置：
</span><span class='line'># basedir=你用来储存此脚本所预计备份的数据之目录(请独立文件系统)
</span><span class='line'>basedir=/backup/weekly  
</span><span class='line'>
</span><span class='line'># ====================================================================
</span><span class='line'># 底下请不要修改了！用默认值即可！
</span><span class='line'>PATH=/bin:/usr/bin:/sbin:/usr/sbin; export PATH
</span><span class='line'>export LANG=C
</span><span class='line'>
</span><span class='line'>D=$(date +"%Y-%m-%d")
</span><span class='line'>
</span><span class='line'># 配置要备份的服务的配置档，以及备份的目录
</span><span class='line'>postfixd=$basedir/postfix
</span><span class='line'>vsftpd=$basedir/vsftp
</span><span class='line'>sshd=$basedir/ssh
</span><span class='line'>wwwd=$basedir/www
</span><span class='line'>others=$basedir/others
</span><span class='line'>userinfod=$basedir/userinfo
</span><span class='line'># 判断目录是否存在，若不存在则予以创建。
</span><span class='line'>for dirs in $postfixd $vsftpd $sshd $wwwd $others $userinfod
</span><span class='line'>do
</span><span class='line'>    [ ! -d "$dirs" ] && mkdir -p $dirs
</span><span class='line'>done
</span><span class='line'>
</span><span class='line'># 1. 将系统主要的服务之配置档分别备份下来，同时也备份 /etc 全部。
</span><span class='line'>
</span><span class='line'>cd /etc/
</span><span class='line'>    tar -jpc -f $vsftpd/vsftpd.$D.tar.bz2 vsftpd
</span><span class='line'>cd /etc/
</span><span class='line'>    tar -jpc -f $sshd/sshd.$D.tar.bz2 sshd ssh
</span><span class='line'>cd /etc/
</span><span class='line'>    tar -jpc -f $wwwd/httpd.$D.tar.bz2 httpd
</span><span class='line'>cd /var/www
</span><span class='line'>  tar -jpc -f $wwwd/html.$D.tar.bz2    html 
</span><span class='line'>cd /
</span><span class='line'>  tar -jpc -f $others/etc.$D.tar.bz2   etc
</span><span class='line'>
</span><span class='line'># 2. 关於使用者参数方面
</span><span class='line'>cp -a /etc/{passwd,shadow,group}    $userinfod
</span><span class='line'>cd /var/spool
</span><span class='line'>  tar -jpc -f $userinfod/mail.$D.tar.bz2   mail
</span><span class='line'>cd /
</span><span class='line'>  tar -jpc -f $userinfod/home.$D.tar.bz2   home
</span><span class='line'>cd /var/spool
</span><span class='line'>  tar -jpc -f $userinfod/cron.$D.tar.bz2   cron at
</span><span class='line'>
</span><span class='line'># 3. 定期删除旧备份
</span><span class='line'>DAYS=30
</span><span class='line'>find $vsftpd -name "vsftpd*" -type f -mtime +$DAYS -exec rm {} \;
</span><span class='line'>find $sshd -name "sshd*" -type f -mtime +$DAYS -exec rm {} \;
</span><span class='line'>find $wwwd -name "ht*" -type f -mtime +$DAYS -exec rm {} \;
</span><span class='line'>find $others -name "etc*" -type f -mtime +$DAYS -exec rm {} \;
</span><span class='line'>find $userinfod -name "cron*" -type f -mtime +$DAYS -exec rm {} \;
</span><span class='line'>find $userinfod -name "home*" -type f -mtime +$DAYS -exec rm {} \;
</span><span class='line'>find $userinfod -name "mail*" -type f -mtime +$DAYS -exec rm {} \;</span></code></pre></td></tr></table></div></figure>


<h3>自动上传脚本auto_upload_daily.sh</h3>

<p>其中upload.sh的代码与本地脚本<code>uf</code>相同。简言之，脚本<code>uf</code>是云备份的基础。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>LOCAL_DATA=/backup/daily
</span><span class='line'>MYSQL_BACKUP=mysql.$(date +"%Y-%m-%d").tar.bz2
</span><span class='line'>
</span><span class='line'>upload.sh $LOCAL_DATA/$MYSQL_BACKUP</span></code></pre></td></tr></table></div></figure>


<h3>自动上传脚本auto_upload_weekly.sh</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>LOCAL_DATA=/backup/weekly
</span><span class='line'>D=$(date +"%Y-%m-%d")
</span><span class='line'>
</span><span class='line'>HTTP=www/httpd.$D.tar.bz2
</span><span class='line'>HTML=www/html.$D.tar.bz2
</span><span class='line'>ETC=others/etc.$D.tar.bz2
</span><span class='line'>HOM=userinfo/home.$D.tar.bz2
</span><span class='line'>MAIL=userinfo/mail.$D.tar.bz2
</span><span class='line'>PASSWD=userinfo/passwd.$D.tar.bz2
</span><span class='line'>SHADOW=userinfo/shadow.$D.tar.bz2
</span><span class='line'>SSHD=ssh/sshd.$D.tar.bz2
</span><span class='line'>VSFTPD=vsftpd/vsftpd.$D.tar.bz2
</span><span class='line'>CRONA=userinfo/cron.$D.tar.bz2
</span><span class='line'>
</span><span class='line'>upload.sh $LOCAL_DATA/$HTTP
</span><span class='line'>upload.sh $LOCAL_DATA/$HTML
</span><span class='line'>upload.sh $LOCAL_DATA/$ETC
</span><span class='line'>upload.sh $LOCAL_DATA/$HOM
</span><span class='line'>upload.sh $LOCAL_DATA/$MAIL
</span><span class='line'>upload.sh $LOCAL_DATA/$PASSWD
</span><span class='line'>upload.sh $LOCAL_DATA/$SHADOW
</span><span class='line'>upload.sh $LOCAL_DATA/$CRONA
</span><span class='line'>upload.sh $LOCAL_DATA/$SSHD
</span><span class='line'>upload.sh $LOCAL_DATA/$VSFTPD</span></code></pre></td></tr></table></div></figure>


<h3>最后，再启动定时任务</h3>

<p>为防止网络出现问题导致上传失败，重复了3次上传操作</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># crontab -l
</span><span class='line'>01 1 * * * /bin/backupday.sh 2&gt;&gt;/backup/errors.log
</span><span class='line'>20 1 * * 0 /bin/backupwk.sh 2&gt;&gt;/backup/errors.log
</span><span class='line'>01 2 * * * /bin/auto_upload_daily.sh 2&gt;&gt;/backup/errors.log
</span><span class='line'>01 4 * * * /bin/auto_upload_daily.sh 2&gt;&gt;/backup/errors.log
</span><span class='line'>01 6 * * * /bin/auto_upload_daily.sh 2&gt;&gt;/backup/errors.log
</span><span class='line'>20 2 * * 0 /bin/auto_upload_weekly.sh 2&gt;&gt;/backup/errors.log
</span><span class='line'>20 4 * * 0 /bin/auto_upload_weekly.sh 2&gt;&gt;/backup/errors.log
</span><span class='line'>20 6 * * 0 /bin/auto_upload_weekly.sh 2&gt;&gt;/backup/errors.log</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我为什么想考研]]></title>
    <link href="http://grunmin.github.io/blog/2014/11/13/wo-wei-shi-yao-xiang-kao-yan/"/>
    <updated>2014-11-13T23:02:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/11/13/wo-wei-shi-yao-xiang-kao-yan</id>
    <content type="html"><![CDATA[<p>先列出想要考研的<strong>原因</strong></p>

<ul>
<li>本科觉得没有学到什么，希望有更多学习机会</li>
<li>完善自己，全面提高自己，文理双修</li>
<li>不喜欢现在的专业，想换个就业方向</li>
<li>不擅长编程和抽象思维，倾向形象思维</li>
<li>比较喜欢文科</li>
<li>想从事文科类的工作</li>
<li>希望路越走越宽，而不是越走越窄</li>
<li>名校情结,高学位情结</li>
</ul>


<!--more-->


<p>要考的<strong>专业方向</strong>，大概是这个？</p>

<ul>
<li><strong>情报学</strong></li>
</ul>


<p>那么，我考研的<strong>优势</strong>在哪里</p>

<ul>
<li>理转文，比文转理难度低</li>
<li>真正的想学东西，而不是为了文凭，正如我本科所做的</li>
<li>对文科类的理解能力较强</li>
</ul>


<p><strong>劣势</strong>呢</p>

<ul>
<li>时间紧迫，还未决定方向，还未开始复习</li>
<li>本科基础较差</li>
<li>跨专业考研，难度大</li>
<li>英语和数学不好</li>
</ul>


<p><strong>真的想好了吗</strong></p>

<p>噢，当然不。只是我为了权衡利弊而将要考虑的要点罗列下来。事实上，我自己都不知道自己喜欢什么。</p>

<p>我先说说我自己吧。我的兴趣广泛，想经历更多，做更多有趣的事情。比如当记者去采访，感受疾苦，认真跟进，伸张正义；当业余程序员，按照自己的需要设计一套系统或者应用，提高生活质量，学以致用；当教师，用实践测试自己的理念是否合理新颖，是否有效，是否可行；当管理者，带好一个团队，带一个好团队；当业余作家，每天读书写作，生活写意随性；搞音乐，欣赏学习各个音乐学派，提高音乐素养，如果可以，进行音乐创作；当咨询师，为有需要的人提供优质的解决方案以解决实际问题；当旅行家，踏足世界各个角落，把美和感动分享给所有人；当冒险家，挑战自我，为生命呐喊；在丛林中工作，每日与树和小动物们为伴，欣赏日落，热爱自然；当编剧或导演，拍真实有肉的电影或电视剧，让中方和西方的优势结合在一起；当大学校长，把大学打造成为真正做学问的地方，关爱学生，尊重教授，尊重学术，少一些官僚。</p>

<p>如你所见，我是个理想烂漫派，总是有将未来理想化的倾向。虽然我在生活中十分之理性，更倾向于将所学的东西快速用于实践，产生可感受可考量的影响或变化。</p>

<p>然而，生活是否如我所想？显然不是。事实上，我想弄清楚这其中的偏差有多远，现实有多少可以调和的余地，有多少可以改变的空间。如果我真的去<em>follow your heart</em>，我有多少的几率可以成功。如果我真的这么做了，是天真幼稚冥顽不化还是信念坚定十分难得。我不是很关心别人的想法，我只是想知道大家如何看待这个问题，<em>follow your heart</em>是否是一个伪命题。</p>

<p><strong>我是如何看待读研的？</strong></p>

<p>读研是把教育自己当作本职工作。对我来说，读大学把人读废了，费了4年时间，忘的丢的东西不少，学到的东西不多。与其这样半桶水步入社会，不如形成自己成熟的世界观价值观后去面对风风雨雨（心灵鸡汤我也会做，我想还是要从技术方面来看待这个问题）。然而正如我跟一位同学所说的，大学不搞科研，读研也不会主动搞科研。如果大学不好好学习，经营自己，读研又怎么能够奢望会有改变？
对这个问题，我的理解是这样的。读大学还不懂得时间和学习资源的宝贵，还不懂如何管理自己的时间，管理自己的思想。就像上大学之前我也立志刻苦学习，学多一门语言，看多几百本书，把专业技能练得杠杠的。上了大学之后依旧一直迷茫，不知所谓。而读研的时候这方面的问题会有所改善，这取决于这个人在大学是否真正学到了东西。读大学有两种目的，一是学习自我管理和持续学习的能力和意识，二是掌握一定的生存技能。用爱因斯坦的话来说，做一个和谐的人。如果一个大学生走入社会的时候是一个身心和谐的人，那么他的大学教育就算圆满完成了。</p>

<p>是的，真正和谐的人会认真思考自己的出路，去选择从社会中学习或者在学校中学习。而如果我是一个和谐的人的话，我会怎么选择呢？</p>

<p><strong>我应该权衡一下其中的利弊</strong></p>

<p>如果我<strong>不去考研</strong>，我能够得到的是</p>

<ul>
<li>从社会大学中学习实践，避免空谈耽误青春</li>
<li>对生活更早更丰富更深刻的理解有助于今后的成长</li>
<li>比读研更早开始职业生涯，积累更多经验</li>
<li>经济上的相对自由</li>
</ul>


<p>相对的，<strong>读研</strong>能够得到</p>

<ul>
<li>更全面深入的指导，更容易学习到专业内的理论知识</li>
<li>更多学习的时间，可以积累更多的知识，无论是深度上还是广度上</li>
<li>更多思考的空间</li>
<li>更多选择的余地</li>
</ul>


<p>然后考虑一下时间成本的问题
如果我准备考研，就会错过实习的机会，错过加深自己专业技能的最佳时机，错过找工作的最佳时机。</p>

<p>工作/读研的噩梦会发生在<strong>我上面列举的都不符合现实</strong>的时候。</p>

<p>我之前并没有想考研，我终究觉得我不是学究型的，而是应用型的。研是要读的，但是在工作了一定时间，对行业有了更好的认识之后才去读研提高自己。然而，工作之后的事难以预料，或许以两年后，我会每个月拿三四千块钱工资而不思进取。我不甘心。既然大学生考学术性研究生更有优势，为何不现在就行动？我是这么劝说自己的。</p>

<p>然而读研就是好选择吗？且不考虑文凭贬值的现实，读研期间能否学到有价值的东西，也是个令人愁肠百结的问题。我不想不知不觉中以学习更多的知识为借口麻痹自己而实际上只是害怕步入社会。<strong>真的勇士敢于直面惨淡的人生，敢于正视淋漓的鲜血。</strong>对我来说，就像<strong>每天早上叫醒我的不是闹钟，而是梦想</strong>一样，装逼味儿十足。</p>

<p>那么，我应该反思一下我自己</p>

<blockquote><p>你是否想过一定会找个机会去读研，而不管现在选择去工作还是其他？</p></blockquote>

<p>是的</p>

<blockquote><p>一直以来你是为了一个文凭还是为了学习知识而读书？</p></blockquote>

<p>为了学习知识</p>

<blockquote><p>你学习知识是为了满足自己的需要还是别人的需要？（比如父母的期望，同龄人的眼光）</p></blockquote>

<p>为了自己</p>

<p>我确实不知道我真正的想法如何，也不知道我的回答是否让我具有去考研的纯净的动力。</p>

<p>为什么，我是想通过写这篇文章弄清楚我是否真的想读研，却发现我的观点却都是鼓励考研的？！</p>

<p>唉，说实话，我真不知道为什么。</p>

<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;<strong>update</strong>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<p>我想考研，一个重要的原因是，我不擅长搞技术。</p>

<p>尽管身边有人误以为我比别人懂更多技术方面的东西，我内心真切认识到自己不是搞技术的料。诚然，我喜欢折腾，喜欢鼓捣东西，然而这一切仅仅出于兴趣，或者是装逼的心理使然。当有一天我发现我感兴趣的东西变成谋生的工具，我会瞬间失去对它的兴趣。就像我喜欢编程，心血来潮的时候会敲几行代码，从中感受到乐趣。但是在赶项目的时候却丝毫没有这种感觉，相反，只会让我感到痛苦。</p>

<p>姑且不说把兴趣当职业是否会损失兴趣，从操作上讲，我所掌握的东西也没有多少有价值的，而有价值的事情我做不来。举个例子，我编程一个晚上，头痛会持续两天。如果我无法了解整体，我就无法了解局部，这跟技术的学习循序渐进的特点格格不入。技术的学习，已原有的技术为基础，不能跳跃。在学习完大部分知识点之前，无法做到整体把握。这种线性的思维我从来都不擅长。</p>

<p>对事物的理解讲究系统和全面，力争从整体上来把握其中的关键。比如阅读，大脑在处理当前行的内容的同时也回顾前面几段的内容，完成牵线搭桥的工作，将知识点尽可能地与其他的联系起来，构成知识网络。因此阅读需要快速，在大脑还未失去前面知识的新鲜感时，将其以某种形式处理，保存。甚至不明了当前知识点而继续阅读也是可行的。往往在看后面章节的时候方才理解了前面章节的内容。这是我学习的方式。</p>

<p>就我的理解，文科的学习确实是这样的，而理科的则恰好相反。从某种角度来说，理科的学习是单线程的（当然对一门课程来说，一门学科的学习当然会同事涉及到许多方面的内容），文科的学习是多线程的。我的理解能力有限，而且理解知识的速度慢得令人发指。这体现在我常常卡在一个知识点而不解其义。学理工科，常常就是真的卡住无法逃脱了。文科则可以采用迂回战术。</p>

<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-update&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<p>之前的考虑过于理想化，现在考虑一下现实问题。</p>

<p>经济方面，家里5人，大哥已经就业，无需家里提供费用。小妹正在读大学，领取的奖助学金和参加勤工助学的工作也基本可以实现学费生活费自理。除了买电脑和考证需要家里支援外，可以说，读大学期间从家里获得的资助不比高中时代多多少。读研究生的费用，我了解到，不高于八千，完全可以通过奖助学金提供。研究生的生活费自理自然没有问题。应该说，家庭没有供养的压力。在这方面最大的遗憾是不能让父母早几年退休。</p>

<p>父母在，不远游。父母身体不好，做子女的应服侍在旁。而除非真的在一二线城市找不到工作，否则我不会选择会老家。凭211学校的名气，找到工作还是没有问题的。我对这方面要求也不多。如果读研，也是在这座城市，并不会因为此而远离父母。</p>

<p>当谈及是否有必要读研，读研后的出路是否会更好，自己真的对自己的专业失去兴趣，以至于非要跨考不可，以及自己是否真的更喜欢读书而不是工作，我还是没有太好的解释。不否认，考研的想法或许只是我一时脑热。若真如此，那去考研不就是脑残了吗？但，又及，年轻人何必考虑太多。
<strong>Start with what is right rather than what is acceptable</strong>
<strong>There is no substitute for living a life you love. Start now..it will only get harder to change.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[双系统下修复grub2引导]]></title>
    <link href="http://grunmin.github.io/blog/2014/11/13/shuang-xi-tong-xia-xiu-fu-grub2yin-dao/"/>
    <updated>2014-11-13T22:28:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/11/13/shuang-xi-tong-xia-xiu-fu-grub2yin-dao</id>
    <content type="html"><![CDATA[<p>我的电脑上装有fedora和windows两个系统。一般装系统的时候windows先装而linxu后装，因为linux能够查找windows系统并为其提供启动引导，而windows不能。因此当需要重装windows的时候需要修复grub2引导。</p>

<!-- more -->


<p><strong>工具</strong>
fedora的livecd，即安装fedora时使用的安装U盘</p>

<h2>步骤</h2>

<h3>调整bios启动顺序，进入livecd</h3>

<h3>挂载硬盘</h3>

<ul>
<li>使用<code>fdisk -l</code>查找/boot分区所在硬盘，比如我的是/dev/sda8。（在此之前需要运行<code>su</code>命令）</li>
<li>挂载根分区<code>mount /dev/mapper/fedora-root /mnt</code></li>
<li>挂载/boot分区<code>mount /dev/sda8 /mnt/boot</code></li>
<li>挂载/dev分区<code>mount --bind /dev /mnt/dev</code></li>
</ul>


<h3>修改根目录</h3>

<p><code>chroot /mnt</code></p>

<h3>修复grub2</h3>

<ul>
<li><code>grub2-install /dev/sda</code></li>
<li><code>grub2-install /dev/sda --recheck</code></li>
</ul>


<h3>更新引导项</h3>

<p><code>grub2-mkconfig -o /boot/grub2/grub.cfg</code></p>

<p>若不执行更新引导项，则启动的时候会显示过去存在的操作系统（此时并不会显示新的操作系统）</p>

<p>进入fedora后，再次执行<code>grub2-mkconfig -o /boot/grub2/grub.cfg</code>，则引导项修复正常。</p>

<h3>更改默认引导项</h3>

<p>可以通过在<code>/boot/grub2/grub.cfg</code>添加<code>set default=X</code>（X为数字）来更改默认引导项。X从0开始，例如windows在引导菜单的第4行，则可以设置<code>set default=3</code></p>

<p>但是，这样的修改方法是不推荐的。因为每次执行<code>grub2-mkconfig -o /boot/grub2/grub.cfg</code>都会更新<code>grub.cfg</code>这个文件。正确的方法是执行<code>grub2-set-default &lt;标题或名称&gt;</code>。其中，&lt;标题或名称>用命令<code>grep menuentry /boot/grub2/grub.cfg</code>找到，即menuentry后引号内的内容。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[矛盾体(1)]]></title>
    <link href="http://grunmin.github.io/blog/2014/04/08/mao-dun-ti-1/"/>
    <updated>2014-04-08T16:10:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/04/08/mao-dun-ti-1</id>
    <content type="html"><![CDATA[<p>当我跟人交往时，我会想不该想的事吗？</p>

<p>会的，每一次我都在跟自己打架。不过没关系，我已长于此道。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[失眠]]></title>
    <link href="http://grunmin.github.io/blog/2014/04/08/shi-mian/"/>
    <updated>2014-04-08T16:08:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/04/08/shi-mian</id>
    <content type="html"><![CDATA[<p>反正这一天就结束了</p>

<p>那我就最后再努力一下</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[技术改变生活(1)]]></title>
    <link href="http://grunmin.github.io/blog/2014/04/08/ji-zhu-gai-bian-sheng-huo-1/"/>
    <updated>2014-04-08T16:06:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/04/08/ji-zhu-gai-bian-sheng-huo-1</id>
    <content type="html"><![CDATA[<p>早晨躺在床上看书的时候，脑子忽的又想起那个问题：我垫钱帮人交四六级报名费，却找不出这位不缴费的同学是谁。心里突然老大不愿意——这可是我半个星期的伙食费呢！于是开始思考对策，务必要找出漏网之鱼。</p>

<!-- more -->


<p>我们报名四六级的流程是这样的。学生网上报名，教务员将报名学生的信息发给学委，学委按照名单收取报名费。汇总到我这里的时候，总是发现报名的人数和缴费的人数有偏差。因为名单里只有学生专业信息（信工和光信），而学委收取费用是按行政班（5个班）划分的。因此不知道是哪个班的同学没有交齐。</p>

<p>解决问题的关键就是找出缺漏的班级。毕竟让每班学委从几百个人名中挑出自己班的同学工作量太大，而且不能避免再次缺漏的情况。上一次我要求各班学委提供缴费名单给我，我一个一个核对。这一次没有人发给我，因此不能故技重施，得采用新的方法。</p>

<p>首先搜索excel有没有提供某些映射功能。这个功能具体是这样的：表A里学号和班级有对应关系，让表B里的学号根据表A的对应关系自动显示对应的班级。表A即学生信息表，表B即报名表。最后统计出现的各班级的次数，与各班缴费的人数对比得出结果。但是我没有找到可以实现的方法。</p>

<p>既然excel不能提供这样的功能，我只能通过数据库的方法。步骤是这样：将全级学生信息导入数据库，然后将报名表另存为csv文件，通过php的fgetcsv()函数获取报名表信息，递归查询输出各班出现的次数，最后汇总。
关键代码（用了CI框架）：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function count(){
</span><span class='line'>        $flag = array();   //班级标志，初始化
</span><span class='line'>        for($i = 0;$i &lt; 5;$i++){ 
</span><span class='line'>        $flag[$i] = 0;
</span><span class='line'>        }
</span><span class='line'>        $file = fopen(base_url('static/english.csv'),'r');
</span><span class='line'>        while ($data = fgetcsv($file)) {  //每次读取CSV里面的一行内容   
</span><span class='line'>            //print($data[0]);
</span><span class='line'>            $this-&gt;db-&gt;where("num",$data[0]);
</span><span class='line'>            $this-&gt;db-&gt;select("*");
</span><span class='line'>            $query=$this-&gt;db-&gt;get("xuewei");
</span><span class='line'>            $str = $query-&gt;result_array();
</span><span class='line'>            if (!empty($str)) {
</span><span class='line'>                
</span><span class='line'>                $toflag = $str[0]['class'] - 1;
</span><span class='line'>                $flag[$toflag]++；
</span><span class='line'>            }
</span><span class='line'>            else {
</span><span class='line'>                print("Can not find this gay: ".$data[0]."&lt;br /&gt;");
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>        print_r($flag);
</span><span class='line'>        fclose($file);
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>从输出就可以知道各班缴费的人数了。然后将这个班的报名同学信息通过类似的方法提取出来，与缴费名单比较，就可以知道是哪位同学没有缴费。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openshift 安装使用教程]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/16/openshift-an-zhuang-shi-yong-jiao-cheng/"/>
    <updated>2014-03-16T21:09:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/16/openshift-an-zhuang-shi-yong-jiao-cheng</id>
    <content type="html"><![CDATA[<p>声明：配置环境是fedora 20，这里是<a href="https://access.redhat.com/site/documentation/en-US/OpenShift_Online/2.0/html/User_Guide/index.html">官方文档</a>，找文档是解决问题最有效的方式。</p>

<!-- more -->


<h3>介绍</h3>

<blockquote><p>OpenShift是红帽公司推出的一个云计算服务平台，开发人员可以用它来构建和发布web应用。Openshift广泛支持多种编程语言和框架，如Java，Ruby和PHP等。另外它还提供了多种集成开发工具如Eclipse integration，JBoss Developer Studio和 Jenkins等。OpenShift 基于一个开源生态系统为移动应用，数据库服务等，提供支持。
——来自百度百科</p></blockquote>

<p>简言之，就是一个面向开源开发人员开放的平台即服务(PaaS)。</p>

<p>使用openshift首先需要一个账户，注册十分简单，不在此赘述。
配置自己的openshift可以通过几种方式，比如web端，命令行。web端适合刚刚接触的新手，建议新用户多点点链接，熟悉一下大体的使用方法和功能。当准备好创建应用时即往下看。本文是介绍命令行下的配置，毕竟修改代码什么的都需要在本地修改后再提交。而openshift的客户端就是基于命令行的。</p>

<h3>安装</h3>

<h5>安装命令行客户端</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install rubygem-rhc -y</span></code></pre></td></tr></table></div></figure>


<h5>初始化设置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc setup</span></code></pre></td></tr></table></div></figure>


<p>此时需要输入帐号和密码，即为自己在openshift注册时的帐号。</p>

<p>令人费解的是使用我的本地账户运行<code>rhc</code>显示找不到命令，切换为root运行也是如此。只能使用<code>sudo rhc</code>的方式，后面运行<code>git push</code>也是如此，必须是<code>sudo git push</code>。如果你知道原因，烦请不吝赐教。</p>

<h5>使用gem更新rhc</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gem update rhc</span></code></pre></td></tr></table></div></figure>


<p>然后看看自己的账户</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc account</span></code></pre></td></tr></table></div></figure>


<p>在安装rhc的时候本地用户已和云端绑定，ssh公钥也导入了，因此之后的操作一般不需要再作验证。</p>

<h5>查看自己的app</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc apps</span></code></pre></td></tr></table></div></figure>


<p>可以看到自己账户下有多少个app（免费账户最多3个），应用名，git仓库地址，主机地址，绑定的域名，以及模块，数据库版本，数据库用户和密码等等。比如我的wordpress（数据库账户和密码被我屏蔽）。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blog @ http://blog-grunmin.rhcloud.com/ (uuid: 5325520fe0b8cd3a830009ff)
</span><span class='line'>------------------------------------------------------------------------
</span><span class='line'>  Domain:          grunmin
</span><span class='line'>  Created:         3:26 PM
</span><span class='line'>  Gears:           1 (defaults to small)
</span><span class='line'>  Git URL:         ssh://5325520fe0b8cd3a830009ff@blog-grunmin.rhcloud.com/~/git/blog.git/
</span><span class='line'>  Initial Git URL: https://github.com/openshift/wordpress-example.git
</span><span class='line'>  SSH:             5325520fe0b8cd3a830009ff@blog-grunmin.rhcloud.com
</span><span class='line'>  Deployment:      auto (on git push)
</span><span class='line'>  Aliases:         wp.guorunmin.cn
</span><span class='line'>
</span><span class='line'>  mysql-5.1 (MySQL 5.1)
</span><span class='line'>  ---------------------
</span><span class='line'>    Gears:          Located with php-5.3
</span><span class='line'>    Connection URL: mysql://$OPENSHIFT_MYSQL_DB_HOST:$OPENSHIFT_MYSQL_DB_PORT/
</span><span class='line'>    Database Name:  blog
</span><span class='line'>    Password:       ********
</span><span class='line'>    Username:       ******
</span><span class='line'>
</span><span class='line'>  php-5.3 (PHP 5.3)
</span><span class='line'>  -----------------
</span><span class='line'>    Gears: Located with mysql-5.1</span></code></pre></td></tr></table></div></figure>


<h3>创建应用</h3>

<h5>创建</h5>

<p>看别人的东西干过瘾，不如自己创建一个，创建的方法也很简单，只需一个命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc app create AppName </span></code></pre></td></tr></table></div></figure>


<p>Openshift 支持Java，Ruby，Node.js，PHP，Perl和Python，在AppName 后面可以加其他参数，例如php应用是：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc app create AppName php-5.4</span></code></pre></td></tr></table></div></figure>


<p>有一种是diy模式，即自行搭建语言环境的，面对一台陌生的机器，我没有任何信心能完成这样的工作^_^。刚开始的时候，我找不到CI框架的环境（有ZF），所以选择新建空应用，以为我自己的代码可以在服务器上运行，想想还是比较天真哈哈哈
如果是安装环境了，改代码的之前需要将仓库克隆到本地。如果新建空应用，那么rhc会自动将仓库克隆下来。</p>

<p>更多参数可以参见<a href="https://access.redhat.com/site/documentation/en-US/OpenShift_Online/2.0/html/User_Guide/Creating_an_Application5.html">官方文档</a>，不用担心看不懂英文，我翻了一遍，文档大体都能看懂。</p>

<h5>添加mysql和phpmyadmin模块</h5>

<p>既然是php应用，mysql和phpmyadmin怎么能少呢！让我们添加一下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc cartridge add mysql-5.1 -a AppName
</span><span class='line'>sudo rhc cartridge add phpmyadmin -a AppName</span></code></pre></td></tr></table></div></figure>


<p>此时新建的应用信息大概就是你看到的上面那个。建议保存一下有用的信息，比如phpmyadmin的地址，用户名和密码，尤其是使用web端创建的同学*_*</p>

<p><em>安装wordpress后还需登陆网站添加安装配置信息</em></p>

<p>如果要删除应用，执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc app delete AppName</span></code></pre></td></tr></table></div></figure>


<h3>开始码字</h3>

<p>如果安装的是wordpress这些成熟的应用，因为它提供了管理界面，大概不用去修改代码。如果是自己开发的应用呢？Openshift支持git的方式修改云端上的代码。大体流程应该是这样：
克隆代码到本地->进入应用目录->进入代码目录->修改代码->git add,commit,push->服务器上的应用关闭->一系列编译布置->应用重启->完成</p>

<p>克隆操作</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc git-clone AppName</span></code></pre></td></tr></table></div></figure>


<p>或者知道仓库地址，像这样</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo git clone ssh://53257e56e0b8cd671500019b@app-grunmin.rhcloud.com/~/git/app.git/</span></code></pre></td></tr></table></div></figure>


<p>php应用根目录下默认有两个文件夹，.git和.openshift。（安装wordpress时候还有另外三个目录：libs,misc,php，但是我找不到wordpress的代码）.openshift目录的作用官网的说明挺详细，我只知道是存放git动作触发的脚本文件，没有深入研究。根目录下还有index.php文件，就是登陆AppName-AccountName.rhcloud.com时看到的页面。这样的设计应该很明朗了，我们直接将代码放在应用根目录下即可。或许你可以写个测试文件看看php的环境，比如&#8221;welcome.php&#8221;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>         phpinfo();
</span><span class='line'>?&gt;</span></code></pre></td></tr></table></div></figure>


<p>另外我们可以ssh进去主机看看里面的文件。如果想了解的话还是自己找找资料吧，比如<a href="http://www.dashashi.com/index.php/2013/01/1435">openshift用ssh登陆后的目录结构</a>。</p>

<h3>访问</h3>

<p>虽说是否被墙是判断一个服务好坏的标准，不过眼看着这么好的服务被墙还是挺让人窝火。因此我也希望我们能够好好利用openshift，不要见缝插针，浪费资源。</p>

<p>如果是博客，那么有一个自己的域名当然比较好。如果不是的话，为了避免被墙，建议也绑定一个，虽然不一定能起作用。绑定域名，也是一个命令搞定：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rhc alias add AppName YourDomain</span></code></pre></td></tr></table></div></figure>


<p>当然，你需要在域名提供商那里添加一个CNAME记录，指向你的openshift域名。
<em>因为缓存的原因，域名解析不会立刻生效。</em></p>

<p>或者使用https的方式访问。</p>

<p>其他跨栏的姿势很多，不赘述。</p>

<p>参考：
<a href="http://www.live-in.org/archives/1818.html">openshift使用方法介绍</a></p>

<p><a href="http://www.live-in.org/archives/1818.html">openshift用ssh登陆后的目录结构</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android 下用脚本备份文件到dropbox的实现]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/15/android-xia-yong-jiao-ben-bei-fen-wen-jian-dao-dropboxde-shi-xian/"/>
    <updated>2014-03-15T23:28:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/15/android-xia-yong-jiao-ben-bei-fen-wen-jian-dao-dropboxde-shi-xian</id>
    <content type="html"><![CDATA[<p>前些日子寻找linux下上传文件到云的脚本，以实现远程服务器上资料的云端备份。</p>

<!-- more -->


<p>国内的网盘虽说正逐渐在开放API，但是到实现方便个人云存储应该还需一定的时间，百度云的pcs接口也关闭了（现在重新开放）。这方面国外的Dropbox做得不错，已经有一些相对成熟的应用。比如脚本<a href="https://github.com/andreafabrizi/Dropbox-Uploader">Dropbox-Uploader</a>。</p>

<blockquote><p>Dropbox Uploader is a BASH script which can be used to upload, download, delete, list files (and more!) from Dropbox, an online file sharing, synchronization and backup service.</p>

<p>It&rsquo;s written in BASH scripting language and only needs cURL.</p></blockquote>

<p>Dropbox Uploader 是一个bash脚本，提供上传，下载，移动网盘上的文件等功能。通过学习已经实现了远程服务器上的云端备份（2G空间已塞满……准备转投百度云）。</p>

<p>既然是bash脚本，那么怀着linux心的android系统应该也可以使用。虽然现在各种云app充斥眼球，但是相对而言它们都太庞大了。比如百度云app，安装后大小有20+M。我只需要一个能提供上传下载的app，而不是一个集社交，防盗为一体，还总是要后台运行的臃肿app。因此开始着手如何将Dropbox Uploader用在手机上。</p>

<p>我们知道，android下的shell是不完整的，默认是ash。因此我主要做的工作是弄出一个bash的环境，没有什么技术含量，纯粹是一时兴起。</p>

<p>那就开始吧。</p>

<p>1、手机提权</p>

<p>就是root了，关于root的教程网上都有。没有取得root权限，后面的操作都无法执行。对我来说，自己的手机不root就不像是自己的手机。</p>

<p>2、安装busybox，终端模拟器</p>

<p>可以在谷歌市场下载<a href="https://play.google.com/store/apps/details?id=stericson.busybox&amp;hl=zh_CN">busybox</a>和<a href="https://play.google.com/store/apps/details?id=jackpal.androidterm&amp;hl=zh_CN">终端模拟器</a>。busybox提供了bash下的一系列常用的命令。比系统自带的强。安装需要root权限，正常安装即可。终端模拟器用来输入命令，也可用<a href="https://play.google.com/store/apps/details?id=os.tools.scriptmanager">脚本管理器</a>。</p>

<p>3、下载bash，curl，dropbox_uploader.sh</p>

<p>下载<a href="http://pan.baidu.com/s/1i3mhTyd">bash</a>，<a href="http://pan.baidu.com/s/1lGkZ8">curl</a>，到/system/bin/目录下。在终端模拟器下输入<code>bash</code>应该能进入bash。dropbox_uploader.sh即为Dropbox Uploader的文件名，也放在/system/bin/目录下。</p>

<p>4、其他准备</p>

<p>首先修改Dropbox Uploader文件的第一行，将其sh改为/system/bin/bash，然后新建一个文件夹/tmp,<code>mkdir /tmp</code>。</p>

<p>5、创建dropbox应用</p>

<p>使用Dropbox Uploader前需要在Dropbox上创建应用，让该应用具有文件修改权限。具体如何实现可参考<a href="http://teddysun.com/178.html">Dropbox Uploader的使用教程</a>
Dropbox Uploader的数据传输是加密的，前面的那些设置并没有包含这些。(当时没有找到方法，现在也没有去折腾。因此在使用Dropbox Uploader时需加 <code>-k</code>参数，不检查ssl证书。)</p>

<p>6、使用</p>

<p>按照上面的方法设置后，应该就可以用Dropbox Uploader上传文件了。因为在手机上敲打命令不易，因此我们可以另外写个脚本，比如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/system/bin/bash
</span><span class='line'>/system/bin/dropbox_uploader.sh -k -s upload $1</span></code></pre></td></tr></table></div></figure>


<p>将脚本命名为u，打开终端模拟器，键入u filename即可将文件上传到dropbox。下载也是一样。</p>

<p><strong>后记</strong></p>

<p>这是我寒假在家没有电脑的消遣之举，现在看来这东西实在非常鸡肋，但是当时弄了一个晚上。终于弄成功时那种喜悦难以言表，因此打算回校写篇教程。本文言尽于此，后续不再完善存在的问题。因为我已经找到了完美的替代品，<a href="https://play.google.com/store/apps/details?id=com.damiapp.softdatacable&amp;hl=zh_CN">软件数据线</a>。</p>

<p>参考引用：
<a href="http://teddysun.com/178.html">备份利器Dropbox Uploader</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fedora 下调节外放音量和屏幕亮度]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/13/fedora-xia-diao-jie-wai-fang-yin-liang-he-ping-mu-liang-du/"/>
    <updated>2014-03-13T00:43:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/13/fedora-xia-diao-jie-wai-fang-yin-liang-he-ping-mu-liang-du</id>
    <content type="html"><![CDATA[<h3>声音</h3>

<p>fedora系统下笔记本外放功能可能有受到一些限制。接耳机的时候声音是正常的，但是拔下耳机后电脑并不能外放声音。网上搜到的方法是：</p>

<!-- more -->


<p>终端运行alsamixer->按F6键，选中对应硬件，应该会出现这样的画面<img src="https://lh4.googleusercontent.com/-Pj4Qb92Mz3M/UyCOC4GBLFI/AAAAAAAAAJ0/IZSLgP3Xxqs/w614-h346-no/2014-03-13-002941_614x346_scrot.png" alt="" />，调高第三条的音量即可实现外放。</p>

<h3>显示</h3>

<p>1、可用命令行<code>xgamma -gamma X</code>暂时调节笔记本的屏幕亮度,X的值在1以下。</p>

<p>2、如果用英特尔集成显卡，则<code>/sys/class/backlight/intel_backlight/brightness</code>是调节屏幕亮度的，文件中的数字即代表亮度。
用vim编辑器改是不可以的，因此用重定向的方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># echo 100 &gt; /sys/class/backlight/intel_backlight/brightness</span></code></pre></td></tr></table></div></figure>


<p>数值大概在100到200之间（我的默认是187,后改为100）。</p>

<p>如果用NVIDIA显卡，则存在<code>/sys/class/backlight/acpi_video0/brightness</code>这个文件，更改方法如上。</p>

<p>这两个方法都不能永久性地更改亮度。不过我们可以通过脚本的方式，让计算机启动的时候执行这些命令，以达到开机即调整亮度的需求。</p>

<p>在/etc/rc.d/init.d/目录下，新建一脚本，比如命名为brightness，写入以下内容</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#add for chkconfig
</span><span class='line'>#chkconfig:2345 70 30
</span><span class='line'>#description:modify brightness
</span><span class='line'>#processname:brightness
</span><span class='line'>xgamma -gamma 0.7
</span><span class='line'>echo 50 &gt; /sys/class/backlight/intel_backlight/brightness
</span><span class='line'>echo 50 &gt; /sys/class/backlight/acpi_video0/brightness</span></code></pre></td></tr></table></div></figure>


<p>其中2345表示脚本在哪一运行级别生效，70和30表示开机/关机时启动/关闭的顺序，数字越大越靠后。processname即为服务的名称，作标识用。</p>

<p>给脚本可执行权限</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod +x brightness</span></code></pre></td></tr></table></div></figure>


<p>将脚本添加入服务控制列表</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chkconfig --add brightness</span></code></pre></td></tr></table></div></figure>


<p>此时用<code>chkconfig --list</code>可查看brightness服务在2345运行级别里是默认开启的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wamp apache无法启动的解决方法]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/12/wamp-apachewu-fa-qi-dong-de-jie-jue-fang-fa/"/>
    <updated>2014-03-12T22:48:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/12/wamp-apachewu-fa-qi-dong-de-jie-jue-fang-fa</id>
    <content type="html"><![CDATA[<p>如题，近日在安装wamp的时候出现了apache无法启动的情况。wamp图标一直显示橙色。网上搜索了许多资料都无效，最后还是我自己发现问题并予以解决了。</p>

<!-- more -->


<h3>VC的问题？</h3>

<p>我的电脑是新装的win8.1企业版。因此我怀疑是VC2008和2010没有安装的缘故，因此上官网下载了这两个安装包安装，结果如故。</p>

<h3>没有安装服务？</h3>

<p>直接<code>apache-&gt;service-&gt;remove service</code>，再install service ，重新打开wamp，结果如故。</p>

<h3>80端口被占用？</h3>

<p>用apache里service的test port 80，显示<code>Your port 80 is not actually used</code>。在cmd里用netstat -an 查找，没有一个软件占用80端口。为保险起见修改httpd.conf文件，修改其端口为8080，重启，结果如故。</p>

<h3>netbios解析失败？</h3>

<p>打开网络共享中心，点击<code>本地连接-&gt;属性-&gt;Internet协议版本-&gt;属性-&gt;高级-&gt;WINS</code>，勾掉<code>启用LMHOST</code>查找。重启服务，结果如故。</p>

<h3>httpd.conf修改后语法错误？</h3>

<p>新装的wamp，初始的配置文件怎么可能有语法错误……</p>

<p>于是把wamp卸了又装装了又卸，问题得不到解决。</p>

<p>换另一种方法，自己分开安装wamp。</p>

<h3>失败！</h3>

<p>在安装apache的时候显示找不到***文件，请检查路径之类的问题，安装程序出错，此举以失败告终。</p>

<p>因此我再装一次wamp，查看httpd.conf，在其中看到的路径中包含了中文名。是不是因为名称的问题导致的呢？我不敢确定，因为同样是中文路径，mysqld服务可以成功启动。</p>

<h3>成功！</h3>

<p>接下来的事就简单了，不过也比较刺激。因为为了解决这个问题我搜索了两天，真的只是该死的中文路径名的问题。</p>

<p>这次问题的解决再次提醒我注意之前多次遇到的问题，即windows下中文路径名的问题。即使转移到windows下，也不要忘了linux下良好的命名习惯呀。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sublime text 2 下的Markdown写作]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/12/sublime-text-2-xia-de-markdownxie-zuo/"/>
    <updated>2014-03-12T22:48:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/12/sublime-text-2-xia-de-markdownxie-zuo</id>
    <content type="html"><![CDATA[<p>作为Windows/Mac/Linux下强大的文本编辑器，st提供了对Markdown语言的支持。通过设置可实现markdown预览和转换功能。而本文介绍的<code>Markdown Preview</code>支持Mathjax语法和目录自动生成。(Windows下）</p>

<!-- more -->


<h2>安装Package Control</h2>

<p>安装包控制扩展可以方便地为st添加拓展。
打开st，按下组合键`Control + &#8220;，出现控制台，输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')</span></code></pre></td></tr></table></div></figure>


<p>当看到代码最后一行提示的时候说明安装成功，此时重启st，可在<code>Preferences -&gt; Package Settings</code>看到<code>Package Control</code>。</p>

<h2>安装markdown preview</h2>

<p>按下键<code>Ctrl+Shift+p</code>调出命令面板，找到<code>Package Control: install Pakage</code>这一项。搜索markdown preview，点击安装。</p>

<h2>使用</h2>

<p>Markdown Preview较常用的功能是<code>preview in browser</code>和<code>Export HTML in Sublime Text</code>，前者可以在浏览器看到预览效果，后者可将markdown保存为html文件。</p>

<p><code>preview in browser</code>据称是实时的，但是实践上还是需要在st保存，然后浏览器刷新才能看到新的效果，好在markdown写得多的话也不需要每敲一行看一次效果。</p>

<h2>快捷键</h2>

<p>st支持自定义快捷键，<code>markdown preview</code>默认没有快捷键，我们可以自己为<code>preview in browser</code>设置快捷键。方法是在<code>Preferences -&gt; Key Bindings User</code>打开的文件的中括号中添加以下代码(可在Key Bindings Default找到格式)：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> { "keys": ["alt+m"], "command": "markdown_preview", "args": { "target": "browser"} }</span></code></pre></td></tr></table></div></figure>


<p>&ldquo;alt+m&#8221;可设置为自己喜欢的按键。</p>

<h2>设置语法高亮和mathjax支持</h2>

<p>在<code>Preferences -&gt;Package Settings-&gt;Markdown Preview-&gt;Setting Default</code>中的第31行和36行找到</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/*
</span><span class='line'>       Enable or not mathjax support.
</span><span class='line'>    */
</span><span class='line'>    "enable_mathjax": false,
</span><span class='line'>
</span><span class='line'>    /*
</span><span class='line'>        Enable or not highlight.js support for syntax highlighting.
</span><span class='line'>    */
</span><span class='line'>    "enable_highlight": false,</span></code></pre></td></tr></table></div></figure>


<p>将 两个false改为true即可。
语法高亮跟编辑器的主题有关，可以在<code>Preferences -&gt;Color Scheme</code>找自己喜欢的主题。
关于目录生成，只要文章是按照markdown语法写作的。在需要生成目录的地方写</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[TOC]</span></code></pre></td></tr></table></div></figure>


<p>即可。</p>

<blockquote><p>如果你这里没有看到目录而只是看到代码，说明简书不支持目录自动生成哈哈</p></blockquote>

<h2>打印成pdf</h2>

<p>将markdown转换为pdf应该有很多种方法的。我没有再折腾，直接用谷歌浏览器虚拟打印功能生成。
利用<code>Markdown Preview</code>的<code>Preview in Browser</code>功能可以在浏览器上看到htm效果。在页面<code>右键-&gt;打印-&gt;另存为pdf-&gt;调节页边距</code>即可将pdf文件下载下来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apache服务器个人主页的设置]]></title>
    <link href="http://grunmin.github.io/blog/2014/01/02/apachefu-wu-qi-ge-ren-zhu-ye-de-she-zhi/"/>
    <updated>2014-01-02T16:16:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/01/02/apachefu-wu-qi-ge-ren-zhu-ye-de-she-zhi</id>
    <content type="html"><![CDATA[<h3>准备工作</h3>

<ul>
<li>查看apache版本</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>httpd -v</span></code></pre></td></tr></table></div></figure>


<p>我的版本是2.4.6，个人主页相关的配置文件在<br/>
<code>/etc/httpd/conf.modules.d/00-base.conf</code><br/>
和
<code>etc/httpd/conf.d/userdir.conf</code></p>

<!--more-->


<ul>
<li>查看<code>/etc/httpd/conf.modules.d/00-base.conf</code>，必须有<code>userdir_module</code>模块，如：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /etc/httpd/conf.modules.d/00-base.conf | grep userdir
</span><span class='line'>LoadModule userdir_module modules/mod_userdir.so</span></code></pre></td></tr></table></div></figure>


<h3>修改apache 配置文件</h3>

<ul>
<li><p>进入<code>/etc/httpd/conf.d/userdir.conf</code>设置，将第17行的<code>UserDir disabled</code>加上注释并取消24行<code>UserDir public</code>的注释(可以更改UserDir后面文件夹的名字，比如<code>UserDir www</code>)</p></li>
<li><p>添加下面的代码到<code>/etc/httpd/conf/httpd.conf</code>文件中</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> #将name和username按情况替换掉
</span><span class='line'>&lt;Directory "/home/username/www"&gt;
</span><span class='line'>    AllowOverride None
</span><span class='line'>    Options Indexes FollowSymLinks
</span><span class='line'>    Require all granted
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<p>这里要注意的是，apache2.4版本已经取消了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Order Deny,Allow
</span><span class='line'>Allow from All</span></code></pre></td></tr></table></div></figure>


<p>的使用，而采用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Require all granted</span></code></pre></td></tr></table></div></figure>


<p>来设置对目录的访问。</p>

<ul>
<li>设置别名</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Alias /name/ "/home/usename/www/" </span></code></pre></td></tr></table></div></figure>


<h3>创建文件根目录</h3>

<ul>
<li>进入个人家目录，创建一个文件夹www和测试页面</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir ~/www
</span><span class='line'>cd ~/www
</span><span class='line'>echo "Test home dir" &gt;&gt; index.html</span></code></pre></td></tr></table></div></figure>


<p>将selinux关闭，查看是否可以访问。</p>

<h3>修改权限和selinux设置</h3>

<p>开启selinux服务
个人家目录要允许apache软件访问，必须设置家目录和www目录可读可执行权限，比如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chmod 755 /home/username
</span><span class='line'>$ chmod 755 ~/www -R</span></code></pre></td></tr></table></div></figure>


<p>另外，需要修改selinux设置，否则会显示<code>Permission denied</code>。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ll -Z ~/  #查看家目录下各目录上下文</span></code></pre></td></tr></table></div></figure>


<p>其中www目录必须有<code>user_home_t</code>内容，若没有，则执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># chcon -t user_home_t /home/username/www -R</span></code></pre></td></tr></table></div></figure>


<p>然后，开启服务器个人主页权限</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># setsebool -P httpd_enable_homedirs on #-P选项使该值永久生效</span></code></pre></td></tr></table></div></figure>


<p>到此个人目录可以使用，将代码放到~/www目录下吧^_^。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我应该如何去学习]]></title>
    <link href="http://grunmin.github.io/blog/2014/01/01/wo-ying-gai-ru-he-qu-xue-xi/"/>
    <updated>2014-01-01T17:15:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/01/01/wo-ying-gai-ru-he-qu-xue-xi</id>
    <content type="html"><![CDATA[<p>面试或考试过后，没有人记得我考的怎样。多年后不会有人问我，大学排名多少。我也无法从成绩中再取得什么收获。就像现在不会有人问我，中考考多少分，高考多少分。</p>

<!--more-->


<p>因此我只注重我学习了什么，我学习的东西是否有迁移性，我是学习思维还是学习操作。我学习的东西十年后还能用吗？专业的学习对自己的影响是终生的，因为有良师教导。但是，付出了同等甚至更多精力的自学也是影响终生的。我学习我感兴趣的东西，并愿意一直学下去。能否为我创造价值，我并不关心。</p>

<p>我们只是终日专注自己，偶尔探出触角小心而好奇地观察外界，并终有一天将其中的一部分纳入自己的世界内。这就是学习的过程。</p>

<p>我做事的效率低，接受新事物的速度慢。但是我愿意花时间，足够努力，最终都能比较好的理解它们。我对事情的理解可能一开始是落后于人的，但是我对它的理解的加深却从来没有停止过。我发现刚来大学的时候很多人在交际，技能，工作经验上都胜过我，但是两年之后我发现我在这方面已经能够平分秋色了。如果有人现在比我出色，那绝大多数可能是他之前的学习环境比我好，给我同样的资源和环境，我能做得比绝大多数人好。</p>

<p>我在小学是年级第一，中考时年级第二，高考时年级理科第四。提高排名和成绩对我来说不是件有建设性的事情。相反，来到大学后，我发现很多大学同学在之前学习了很多课外的东西，他们有更好的师资，更好的实验室，更高层次的交际圈，他们有更好的条件，更多的时间来培养他们的交际礼仪，人文，科学素养等综合素质。我们花了很多时间来学习，最终结果是我们的学霸比不上他们的学渣。</p>

<p>努力和收获是不对等的，如果我继续以前的学习方式，把成绩看成大学学习的参考标准，那么我一辈子都没有超越他们的可能。</p>

<p>于是我决定补上缺失的，但是必需的东西。我做自己觉得重要的事，而不是别人觉得重要的事。虽然最后可能会发觉事实并非如此。但是，改变一个人要从改变世界观开始，基于自己的认识不停地去探索是一个人成为一个独立的个体的开始。追随自己的心，根据现实不停调整，最终在大多数方面趋于圆满，我认为这是值得我们一生去完成的事情。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小短文]]></title>
    <link href="http://grunmin.github.io/blog/2014/01/01/xiao-duan-wen/"/>
    <updated>2014-01-01T17:11:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/01/01/xiao-duan-wen</id>
    <content type="html"><![CDATA[<!--more-->


<p>生活是带时延的正反馈回路</p>

<p>预置数已由别人设好</p>

<p>而反馈系数由自己决定</p>

<p>成功的秘诀就是</p>

<p>保持稳定的输出</p>

<p>直到下一个激励的到来</p>

<p>周而复始</p>

<p>爱情是个双稳态电路</p>

<p>初始状态是0</p>

<p>恋爱是其中的介稳态</p>

<p>不论停留在0状态多久</p>

<p>也不要怀疑自己的是个单稳</p>

<p>所缺的只是</p>

<p>一个信号</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一年来使用工具的感想]]></title>
    <link href="http://grunmin.github.io/blog/2013/12/25/yi-nian-lai-shi-yong-gong-ju-de-gan-xiang/"/>
    <updated>2013-12-25T12:56:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/12/25/yi-nian-lai-shi-yong-gong-ju-de-gan-xiang</id>
    <content type="html"><![CDATA[<p> 只有当收集的资料转化为内在的知识和技能，成为成长进步的阶梯后，它才称得上是有益有用的。</p>

<!--more-->


<p>我自诩尝试过许多工具，以此来提高工作效率。但是今天，我在简书上看到的文章<a href="http://jianshu.io/p/d4b2XY">哪儿有那么多逼可装</a>。犹如当头一棒。我想我正是作者笔下的，为工具所束缚的装逼者。</p>

<p> 我对工具有很高的追求，直到现在都在执着地去寻找易用，高效的工具，并且最大程度的将其用于日常生活中。比如我尝试用过安卓手机上大多数的词典。从彩虹，深蓝，mdict到形形色色叫不出名字的app，我一个一个下载试用不厌其烦。在谷歌阅读器即将下架的时候，我搜索了许多替代品，从网页版到移动端，不停地导入和导出rss。我也花了很多时间寻找笔记软件，比如印象，有道，为知，了解它们的用法和特性，慎重地选择一到两个。我用谷歌表单做调查问卷，而不是大多数人用的问卷星。我用vim写php代码，而不是IDE。我用linux（事实上我只是个学生，不需要用到linux来工作），用markdown，用octopress，用irc。我听说这东西很好所以去用，我认为学会了以后一定会有大用。</p>

<p>事实上，我隔上几天才会用到词典，阅读器已经有几个月时间没有打开过，谷歌表单其实没有问卷星好用，用vim的效率提不上来，octopress几乎没有人上去过，irc频道里一直冷冷清清。只有为知笔记是一直在用着的。（linux版也即将支持markdown了）</p>

<p>我考虑过收支比，内心清楚这是亏本的买卖。但是我不以为然，或者说，不愿意去相信，又或者是装逼的内在需求使然。我一如既往地花费大量时间，乐此不疲。</p>

<p>过度追求工具的优化会让人忘记使用工具的初衷。在接触linux之后，我深刻认同效率，内容至上的观点。初学的盲目，让我陷入这一深沼之中。反思一下过去，希望今后有所改进，回到踏实勤勉的主线上来。</p>

<p>以此为记。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用stackedit保存笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/11/23/yong-stackeditbao-cun-bi-ji/"/>
    <updated>2013-11-23T16:49:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/11/23/yong-stackeditbao-cun-bi-ji</id>
    <content type="html"><![CDATA[<p>在<a href="http://grunmin.github.io/blog/2013/11/23/yong-ma-ke-fei-xiang-xie-bo-ke/">上一篇文章</a>里写到用马克飞象写博客，不知对用印象笔记的读者有没有帮助。我对工具有近乎狂热的追求，花了很多时间来尝试不同工具，试图找出其中最高效率的，最简约的，最人性化的。比如云盘，云相册，linux发行版，以及各种编辑器等。在写上一篇博客的时候其实也用到了其他的工具，我在此将其写下来。</p>

<!-- more -->


<p>马克飞象编辑器显然对markdown的支持没有专业工具那么好（还有上文提到的硬伤)，在发表一片博文之前，我都要将其拷贝到stackedit上查看格式是否有误，在stackedit上修改之后又拷贝到笔记里。过程繁琐，于是我寻思，是否有更加简单的方式来完成同样的工作。</p>

<p>其实stackedit提供了我需要的功能。它支持编辑器与谷歌云端硬盘和dropbox之间文件的同步。也就是说，在stackedit上编辑的文件可以保存到谷歌和dropbox的服务器中，这其实就是用markdown来写笔记。</p>

<p>点击stackedit页面左上角的图标<img src="https://lh3.googleusercontent.com/DeduTfgiszvG6lZ-SjC0XvCWAJELtr6026s9wQWR9g=s0" alt="enter image description here" />，在SYNCHRONIZE下有谷歌云端硬盘和dropbox的图标，点击<code>Export to Google Drive</code>就可以将文章保存到云端硬盘中，dropbox也是如此。</p>

<p>如此，我发表博文的过程相对简单了。直接在stackedit上编辑（支持离线编辑）好，保存到云端，然后把代码交给octopress处理即可。</p>

<p>用stackedit有另一个好处是可以直接插入谷歌相册里的图片，或者直接上传本地图片到相册上直接用。</p>

<p>到目前为止，我发现的唯一缺点是谷歌文档不能预览或编辑stackedit写好的笔记，需要通过stackedit来打开和编辑。</p>
]]></content>
  </entry>
  
</feed>
