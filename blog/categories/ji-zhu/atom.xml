<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 技术 | 郭润民的博客]]></title>
  <link href="http://grunmin.github.io/blog/categories/ji-zhu/atom.xml" rel="self"/>
  <link href="http://grunmin.github.io/"/>
  <updated>2014-04-08T16:25:07+08:00</updated>
  <id>http://grunmin.github.io/</id>
  <author>
    <name><![CDATA[Grunmin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[技术改变生活(1)]]></title>
    <link href="http://grunmin.github.io/blog/2014/04/08/ji-zhu-gai-bian-sheng-huo-1/"/>
    <updated>2014-04-08T16:06:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/04/08/ji-zhu-gai-bian-sheng-huo-1</id>
    <content type="html"><![CDATA[<p>早晨躺在床上看书的时候，脑子忽的又想起那个问题：我垫钱帮人交四六级报名费，却找不出这位不缴费的同学是谁。心里突然老大不愿意——这可是我半个星期的伙食费呢！于是开始思考对策，务必要找出漏网之鱼。</p>

<!-- more -->


<p>我们报名四六级的流程是这样的。学生网上报名，教务员将报名学生的信息发给学委，学委按照名单收取报名费。汇总到我这里的时候，总是发现报名的人数和缴费的人数有偏差。因为名单里只有学生专业信息（信工和光信），而学委收取费用是按行政班（5个班）划分的。因此不知道是哪个班的同学没有交齐。</p>

<p>解决问题的关键就是找出缺漏的班级。毕竟让每班学委从几百个人名中挑出自己班的同学工作量太大，而且不能避免再次缺漏的情况。上一次我要求各班学委提供缴费名单给我，我一个一个核对。这一次没有人发给我，因此不能故技重施，得采用新的方法。</p>

<p>首先搜索excel有没有提供某些映射功能。这个功能具体是这样的：表A里学号和班级有对应关系，让表B里的学号根据表A的对应关系自动显示对应的班级。表A即学生信息表，表B即报名表。最后统计出现的各班级的次数，与各班缴费的人数对比得出结果。但是我没有找到可以实现的方法。</p>

<p>既然excel不能提供这样的功能，我只能通过数据库的方法。步骤是这样：将全级学生信息导入数据库，然后将报名表另存为csv文件，通过php的fgetcsv()函数获取报名表信息，递归查询输出各班出现的次数，最后汇总。
关键代码（用了CI框架）：
```
function count(){</p>

<pre><code>    $flag = array();   //班级标志，初始化
    for($i = 0;$i &lt; 5;$i++){ 
    $flag[$i] = 0;
    }
    $file = fopen(base_url('static/english.csv'),'r');
    while ($data = fgetcsv($file)) {  //每次读取CSV里面的一行内容   
        //print($data[0]);
        $this-&gt;db-&gt;where("num",$data[0]);
        $this-&gt;db-&gt;select("*");
        $query=$this-&gt;db-&gt;get("xuewei");
        $str = $query-&gt;result_array();
        if (!empty($str)) {

            $toflag = $str[0]['class'] - 1;
            $flag[$toflag]++；
        }
        else {
            print("Can not find this gay: ".$data[0]."&lt;br /&gt;");
        }
    }
    print_r($flag);
    fclose($file);
}
</code></pre>

<p>```
从输出就可以知道各班缴费的人数了。然后将这个班的报名同学信息通过类似的方法提取出来，与缴费名单比较，就可以知道是哪位同学没有缴费。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openshift 安装使用教程]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/16/openshift-an-zhuang-shi-yong-jiao-cheng/"/>
    <updated>2014-03-16T21:09:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/16/openshift-an-zhuang-shi-yong-jiao-cheng</id>
    <content type="html"><![CDATA[<p>声明：配置环境是fedora 20，这里是<a href="https://access.redhat.com/site/documentation/en-US/OpenShift_Online/2.0/html/User_Guide/index.html">官方文档</a>，找文档是解决问题最有效的方式。</p>

<!-- more -->


<h3>介绍</h3>

<blockquote><p>OpenShift是红帽公司推出的一个云计算服务平台，开发人员可以用它来构建和发布web应用。Openshift广泛支持多种编程语言和框架，如Java，Ruby和PHP等。另外它还提供了多种集成开发工具如Eclipse integration，JBoss Developer Studio和 Jenkins等。OpenShift 基于一个开源生态系统为移动应用，数据库服务等，提供支持。
——来自百度百科</p></blockquote>

<p>简言之，就是一个面向开源开发人员开放的平台即服务(PaaS)。</p>

<p>使用openshift首先需要一个账户，注册十分简单，不在此赘述。
配置自己的openshift可以通过几种方式，比如web端，命令行。web端适合刚刚接触的新手，建议新用户多点点链接，熟悉一下大体的使用方法和功能。当准备好创建应用时即往下看。本文是介绍命令行下的配置，毕竟修改代码什么的都需要在本地修改后再提交。而openshift的客户端就是基于命令行的。</p>

<h3>安装</h3>

<h5>安装命令行客户端</h5>

<p><code>
sudo yum install rubygem-rhc -y
</code></p>

<h5>初始化设置</h5>

<p><code>
sudo rhc setup
</code>
此时需要输入帐号和密码，即为自己在openshift注册时的帐号。</p>

<p>令人费解的是使用我的本地账户运行<code>rhc</code>显示找不到命令，切换为root运行也是如此。只能使用<code>sudo rhc</code>的方式，后面运行<code>git push</code>也是如此，必须是<code>sudo git push</code>。如果你知道原因，烦请不吝赐教。</p>

<h5>使用gem更新rhc</h5>

<p><code>
sudo gem update rhc
</code>
然后看看自己的账户
<code>
sudo rhc account
</code>
在安装rhc的时候本地用户已和云端绑定，ssh公钥也导入了，因此之后的操作一般不需要再作验证。</p>

<h5>查看自己的app</h5>

<p><code>
sudo rhc apps
</code>
可以看到自己账户下有多少个app（免费账户最多3个），应用名，git仓库地址，主机地址，绑定的域名，以及模块，数据库版本，数据库用户和密码等等。比如我的wordpress（数据库账户和密码被我屏蔽）。
```</p>

<h2>blog @ <a href="http://blog-grunmin.rhcloud.com/">http://blog-grunmin.rhcloud.com/</a> (uuid: 5325520fe0b8cd3a830009ff)</h2>

<p>  Domain:          grunmin
  Created:         3:26 PM
  Gears:           1 (defaults to small)
  Git URL:         ssh://5325520fe0b8cd3a830009ff@blog-grunmin.rhcloud.com/~/git/blog.git/
  Initial Git URL: <a href="https://github.com/openshift/wordpress-example.git">https://github.com/openshift/wordpress-example.git</a>
  SSH:             5325520<a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#102;&#101;&#x30;&#x62;&#x38;&#99;&#x64;&#x33;&#x61;&#x38;&#51;&#x30;&#x30;&#x30;&#57;&#102;&#x66;&#x40;&#98;&#108;&#111;&#x67;&#45;&#x67;&#x72;&#117;&#x6e;&#x6d;&#105;&#110;&#46;&#114;&#104;&#99;&#x6c;&#111;&#117;&#100;&#x2e;&#99;&#111;&#x6d;">&#x66;&#x65;&#48;&#98;&#x38;&#x63;&#x64;&#x33;&#x61;&#x38;&#51;&#x30;&#48;&#x30;&#x39;&#x66;&#102;&#x40;&#x62;&#x6c;&#x6f;&#103;&#x2d;&#x67;&#114;&#x75;&#x6e;&#x6d;&#x69;&#x6e;&#46;&#x72;&#x68;&#99;&#x6c;&#111;&#x75;&#100;&#46;&#99;&#111;&#109;</a>
  Deployment:      auto (on git push)
  Aliases:         wp.guorunmin.cn</p>

<p>  mysql-5.1 (MySQL 5.1)</p>

<hr />

<pre><code>Gears:          Located with php-5.3
Connection URL: mysql://$OPENSHIFT_MYSQL_DB_HOST:$OPENSHIFT_MYSQL_DB_PORT/
Database Name:  blog
Password:       ********
Username:       ******
</code></pre>

<p>  php-5.3 (PHP 5.3)</p>

<hr />

<pre><code>Gears: Located with mysql-5.1
</code></pre>

<p>```</p>

<h3>创建应用</h3>

<h5>创建</h5>

<p>看别人的东西干过瘾，不如自己创建一个，创建的方法也很简单，只需一个命令
<code>
sudo rhc app create AppName
</code>
Openshift 支持Java，Ruby，Node.js，PHP，Perl和Python，在AppName 后面可以加其他参数，例如php应用是：
<code>
sudo rhc app create AppName php-5.4
</code>
有一种是diy模式，即自行搭建语言环境的，面对一台陌生的机器，我没有任何信心能完成这样的工作^_^。刚开始的时候，我找不到CI框架的环境（有ZF），所以选择新建空应用，以为我自己的代码可以在服务器上运行，想想还是比较天真哈哈哈
如果是安装环境了，改代码的之前需要将仓库克隆到本地。如果新建空应用，那么rhc会自动将仓库克隆下来。</p>

<p>更多参数可以参见<a href="https://access.redhat.com/site/documentation/en-US/OpenShift_Online/2.0/html/User_Guide/Creating_an_Application5.html">官方文档</a>，不用担心看不懂英文，我翻了一遍，文档大体都能看懂。</p>

<h5>添加mysql和phpmyadmin模块</h5>

<p>既然是php应用，mysql和phpmyadmin怎么能少呢！让我们添加一下
<code>
sudo rhc cartridge add mysql-5.1 -a AppName
sudo rhc cartridge add phpmyadmin -a AppName
</code>
此时新建的应用信息大概就是你看到的上面那个。建议保存一下有用的信息，比如phpmyadmin的地址，用户名和密码，尤其是使用web端创建的同学*_*</p>

<p><em>安装wordpress后还需登陆网站添加安装配置信息</em></p>

<p>如果要删除应用，执行
<code>
sudo rhc app delete AppName
</code></p>

<h3>开始码字</h3>

<p>如果安装的是wordpress这些成熟的应用，因为它提供了管理界面，大概不用去修改代码。如果是自己开发的应用呢？Openshift支持git的方式修改云端上的代码。大体流程应该是这样：
克隆代码到本地->进入应用目录->进入代码目录->修改代码->git add,commit,push->服务器上的应用关闭->一系列编译布置->应用重启->完成</p>

<p>克隆操作
<code>
sudo rhc git-clone AppName
</code>
或者知道仓库地址，像这样
<code>
sudo git clone ssh://53257e56e0b8cd671500019b@app-grunmin.rhcloud.com/~/git/app.git/
</code>
php应用根目录下默认有两个文件夹，.git和.openshift。（安装wordpress时候还有另外三个目录：libs,misc,php，但是我找不到wordpress的代码）.openshift目录的作用官网的说明挺详细，我只知道是存放git动作触发的脚本文件，没有深入研究。根目录下还有index.php文件，就是登陆AppName-AccountName.rhcloud.com时看到的页面。这样的设计应该很明朗了，我们直接将代码放在应用根目录下即可。或许你可以写个测试文件看看php的环境，比如"welcome.php"
```
&lt;?php</p>

<pre><code>     phpinfo();
</code></pre>

<p>?>
```</p>

<p>另外我们可以ssh进去主机看看里面的文件。如果想了解的话还是自己找找资料吧，比如<a href="http://www.dashashi.com/index.php/2013/01/1435">openshift用ssh登陆后的目录结构</a>。</p>

<h3>访问</h3>

<p>虽说是否被墙是判断一个服务好坏的标准，不过眼看着这么好的服务被墙还是挺让人窝火。因此我也希望我们能够好好利用openshift，不要见缝插针，浪费资源。</p>

<p>如果是博客，那么有一个自己的域名当然比较好。如果不是的话，为了避免被墙，建议也绑定一个，虽然不一定能起作用。绑定域名，也是一个命令搞定：
<code>
sudo rhc alias add AppName YourDomain
</code>
当然，你需要在域名提供商那里添加一个CNAME记录，指向你的openshift域名。
<em>因为缓存的原因，域名解析不会立刻生效。</em></p>

<p>或者使用https的方式访问。</p>

<p>其他跨栏的姿势很多，不赘述。</p>

<p>参考：
<a href="http://www.live-in.org/archives/1818.html">openshift使用方法介绍</a></p>

<p><a href="http://www.live-in.org/archives/1818.html">openshift用ssh登陆后的目录结构</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android 下用脚本备份文件到dropbox的实现]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/15/android-xia-yong-jiao-ben-bei-fen-wen-jian-dao-dropboxde-shi-xian/"/>
    <updated>2014-03-15T23:28:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/15/android-xia-yong-jiao-ben-bei-fen-wen-jian-dao-dropboxde-shi-xian</id>
    <content type="html"><![CDATA[<p>前些日子寻找linux下上传文件到云的脚本，以实现远程服务器上资料的云端备份。</p>

<!-- more -->


<p>国内的网盘虽说正逐渐在开放API，但是到实现方便个人云存储应该还需一定的时间，百度云的pcs接口也关闭了（现在重新开放）。这方面国外的Dropbox做得不错，已经有一些相对成熟的应用。比如脚本<a href="https://github.com/andreafabrizi/Dropbox-Uploader">Dropbox-Uploader</a>。</p>

<blockquote><p>Dropbox Uploader is a BASH script which can be used to upload, download, delete, list files (and more!) from Dropbox, an online file sharing, synchronization and backup service.</p>

<p>It&rsquo;s written in BASH scripting language and only needs cURL.</p></blockquote>

<p>Dropbox Uploader 是一个bash脚本，提供上传，下载，移动网盘上的文件等功能。通过学习已经实现了远程服务器上的云端备份（2G空间已塞满……准备转投百度云）。</p>

<p>既然是bash脚本，那么怀着linux心的android系统应该也可以使用。虽然现在各种云app充斥眼球，但是相对而言它们都太庞大了。比如百度云app，安装后大小有20+M。我只需要一个能提供上传下载的app，而不是一个集社交，防盗为一体，还总是要后台运行的臃肿app。因此开始着手如何将Dropbox Uploader用在手机上。</p>

<p>我们知道，android下的shell是不完整的，默认是ash。因此我主要做的工作是弄出一个bash的环境，没有什么技术含量，纯粹是一时兴起。</p>

<p>那就开始吧。</p>

<p>1、手机提权</p>

<p>就是root了，关于root的教程网上都有。没有取得root权限，后面的操作都无法执行。对我来说，自己的手机不root就不像是自己的手机。</p>

<p>2、安装busybox，终端模拟器</p>

<p>可以在谷歌市场下载<a href="https://play.google.com/store/apps/details?id=stericson.busybox&amp;hl=zh_CN">busybox</a>和<a href="https://play.google.com/store/apps/details?id=jackpal.androidterm&amp;hl=zh_CN">终端模拟器</a>。busybox提供了bash下的一系列常用的命令。比系统自带的强。安装需要root权限，正常安装即可。终端模拟器用来输入命令，也可用<a href="https://play.google.com/store/apps/details?id=os.tools.scriptmanager">脚本管理器</a>。</p>

<p>3、下载bash，curl，dropbox_uploader.sh</p>

<p>下载<a href="http://pan.baidu.com/s/1i3mhTyd">bash</a>，<a href="http://pan.baidu.com/s/1lGkZ8">curl</a>，到/system/bin/目录下。在终端模拟器下输入<code>bash</code>应该能进入bash。dropbox_uploader.sh即为Dropbox Uploader的文件名，也放在/system/bin/目录下。</p>

<p>4、其他准备</p>

<p>首先修改Dropbox Uploader文件的第一行，将其sh改为/system/bin/bash，然后新建一个文件夹/tmp,<code>mkdir /tmp</code>。</p>

<p>5、创建dropbox应用</p>

<p>使用Dropbox Uploader前需要在Dropbox上创建应用，让该应用具有文件修改权限。具体如何实现可参考<a href="http://teddysun.com/178.html">Dropbox Uploader的使用教程</a>
Dropbox Uploader的数据传输是加密的，前面的那些设置并没有包含这些。(当时没有找到方法，现在也没有去折腾。因此在使用Dropbox Uploader时需加 <code>-k</code>参数，不检查ssl证书。)</p>

<p>6、使用</p>

<p>按照上面的方法设置后，应该就可以用Dropbox Uploader上传文件了。因为在手机上敲打命令不易，因此我们可以另外写个脚本，比如：
```</p>

<h1>!/system/bin/bash</h1>

<p>/system/bin/dropbox_uploader.sh -k -s upload $1
```
将脚本命名为u，打开终端模拟器，键入u filename即可将文件上传到dropbox。下载也是一样。</p>

<p><strong>后记</strong></p>

<p>这是我寒假在家没有电脑的消遣之举，现在看来这东西实在非常鸡肋，但是当时弄了一个晚上。终于弄成功时那种喜悦难以言表，因此打算回校写篇教程。本文言尽于此，后续不再完善存在的问题。因为我已经找到了完美的替代品，<a href="https://play.google.com/store/apps/details?id=com.damiapp.softdatacable&amp;hl=zh_CN">软件数据线</a>。</p>

<p>参考引用：
<a href="http://teddysun.com/178.html">备份利器Dropbox Uploader</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fedora 下调节外放音量和屏幕亮度]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/13/fedora-xia-diao-jie-wai-fang-yin-liang-he-ping-mu-liang-du/"/>
    <updated>2014-03-13T00:43:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/13/fedora-xia-diao-jie-wai-fang-yin-liang-he-ping-mu-liang-du</id>
    <content type="html"><![CDATA[<h3>声音</h3>

<p>fedora系统下笔记本外放功能可能有受到一些限制。接耳机的时候声音是正常的，但是拔下耳机后电脑并不能外放声音。网上搜到的方法是：</p>

<!-- more -->


<p>终端运行alsamixer->按F6键，选中对应硬件，应该会出现这样的画面<img src="https://lh4.googleusercontent.com/-Pj4Qb92Mz3M/UyCOC4GBLFI/AAAAAAAAAJ0/IZSLgP3Xxqs/w614-h346-no/2014-03-13-002941_614x346_scrot.png" alt="" />，调高第三条的音量即可实现外放。</p>

<h3>显示</h3>

<p>1、可用命令行<code>xgamma -gamma X</code>暂时调节笔记本的屏幕亮度,X的值在1以下。</p>

<p>2、<code>/sys/class/backlight/intel_backlight/brightness</code>是调节屏幕亮度的，文件中的数字即代表亮度。
用vim编辑器改是不可以的，因此用重定向的方法：
```</p>

<h1>echo 100 > /sys/class/backlight/intel_backlight/brightness</h1>

<p>```
数值大概在100到200之间（我的默认是187,后改为100）。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wamp apache无法启动的解决方法]]></title>
    <link href="http://grunmin.github.io/blog/2014/03/12/wamp-apachewu-fa-qi-dong-de-jie-jue-fang-fa/"/>
    <updated>2014-03-12T22:48:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/03/12/wamp-apachewu-fa-qi-dong-de-jie-jue-fang-fa</id>
    <content type="html"><![CDATA[<p>如题，近日在安装wamp的时候出现了apache无法启动的情况。wamp图标一直显示橙色。网上搜索了许多资料都无效，最后还是我自己发现问题并予以解决了。</p>

<!-- more -->


<h3>VC的问题？</h3>

<p>我的电脑是新装的win8.1企业版。因此我怀疑是VC2008和2010没有安装的缘故，因此上官网下载了这两个安装包安装，结果如故。</p>

<h3>没有安装服务？</h3>

<p>直接<code>apache-&gt;service-&gt;remove service</code>，再install service ，重新打开wamp，结果如故。</p>

<h3>80端口被占用？</h3>

<p>用apache里service的test port 80，显示<code>Your port 80 is not actually used</code>。在cmd里用netstat -an 查找，没有一个软件占用80端口。为保险起见修改httpd.conf文件，修改其端口为8080，重启，结果如故。</p>

<h3>netbios解析失败？</h3>

<p>打开网络共享中心，点击<code>本地连接-&gt;属性-&gt;Internet协议版本-&gt;属性-&gt;高级-&gt;WINS</code>，勾掉<code>启用LMHOST</code>查找。重启服务，结果如故。</p>

<h3>httpd.conf修改后语法错误？</h3>

<p>新装的wamp，初始的配置文件怎么可能有语法错误……</p>

<p>于是把wamp卸了又装装了又卸，问题得不到解决。</p>

<p>换另一种方法，自己分开安装wamp。</p>

<h3>失败！</h3>

<p>在安装apache的时候显示找不到***文件，请检查路径之类的问题，安装程序出错，此举以失败告终。</p>

<p>因此我再装一次wamp，查看httpd.conf，在其中看到的路径中包含了中文名。是不是因为名称的问题导致的呢？我不敢确定，因为同样是中文路径，mysqld服务可以成功启动。</p>

<h3>成功！</h3>

<p>接下来的事就简单了，不过也比较刺激。因为为了解决这个问题我搜索了两天，真的只是该死的中文路径名的问题。</p>

<p>这次问题的解决再次提醒我注意之前多次遇到的问题，即windows下中文路径名的问题。即使转移到windows下，也不要忘了linux下良好的命名习惯呀。</p>
]]></content>
  </entry>
  
</feed>
