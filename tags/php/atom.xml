<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: php | 郭润民的博客]]></title>
  <link href="http://grunmin.github.io/tags/php/atom.xml" rel="self"/>
  <link href="http://grunmin.github.io/"/>
  <updated>2014-11-14T09:40:38+08:00</updated>
  <id>http://grunmin.github.io/</id>
  <author>
    <name><![CDATA[Grunmin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[技术改变生活(1)]]></title>
    <link href="http://grunmin.github.io/blog/2014/04/08/ji-zhu-gai-bian-sheng-huo-1/"/>
    <updated>2014-04-08T16:06:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2014/04/08/ji-zhu-gai-bian-sheng-huo-1</id>
    <content type="html"><![CDATA[<p>早晨躺在床上看书的时候，脑子忽的又想起那个问题：我垫钱帮人交四六级报名费，却找不出这位不缴费的同学是谁。心里突然老大不愿意——这可是我半个星期的伙食费呢！于是开始思考对策，务必要找出漏网之鱼。</p>

<!-- more -->


<p>我们报名四六级的流程是这样的。学生网上报名，教务员将报名学生的信息发给学委，学委按照名单收取报名费。汇总到我这里的时候，总是发现报名的人数和缴费的人数有偏差。因为名单里只有学生专业信息（信工和光信），而学委收取费用是按行政班（5个班）划分的。因此不知道是哪个班的同学没有交齐。</p>

<p>解决问题的关键就是找出缺漏的班级。毕竟让每班学委从几百个人名中挑出自己班的同学工作量太大，而且不能避免再次缺漏的情况。上一次我要求各班学委提供缴费名单给我，我一个一个核对。这一次没有人发给我，因此不能故技重施，得采用新的方法。</p>

<p>首先搜索excel有没有提供某些映射功能。这个功能具体是这样的：表A里学号和班级有对应关系，让表B里的学号根据表A的对应关系自动显示对应的班级。表A即学生信息表，表B即报名表。最后统计出现的各班级的次数，与各班缴费的人数对比得出结果。但是我没有找到可以实现的方法。</p>

<p>既然excel不能提供这样的功能，我只能通过数据库的方法。步骤是这样：将全级学生信息导入数据库，然后将报名表另存为csv文件，通过php的fgetcsv()函数获取报名表信息，递归查询输出各班出现的次数，最后汇总。
关键代码（用了CI框架）：
```
function count(){</p>

<pre><code>    $flag = array();   //班级标志，初始化
    for($i = 0;$i &lt; 5;$i++){ 
    $flag[$i] = 0;
    }
    $file = fopen(base_url('static/english.csv'),'r');
    while ($data = fgetcsv($file)) {  //每次读取CSV里面的一行内容   
        //print($data[0]);
        $this-&gt;db-&gt;where("num",$data[0]);
        $this-&gt;db-&gt;select("*");
        $query=$this-&gt;db-&gt;get("xuewei");
        $str = $query-&gt;result_array();
        if (!empty($str)) {

            $toflag = $str[0]['class'] - 1;
            $flag[$toflag]++；
        }
        else {
            print("Can not find this gay: ".$data[0]."&lt;br /&gt;");
        }
    }
    print_r($flag);
    fclose($file);
}
</code></pre>

<p>```
从输出就可以知道各班缴费的人数了。然后将这个班的报名同学信息通过类似的方法提取出来，与缴费名单比较，就可以知道是哪位同学没有缴费。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux安装 Zend Frame 笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/08/02/fedora-an-zhuang-zend-frame-bi-ji/"/>
    <updated>2013-08-02T00:15:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/08/02/fedora-an-zhuang-zend-frame-bi-ji</id>
    <content type="html"><![CDATA[<h3>新建项目</h3>

<p>下载Zend Frame安装包(现在下载ZF要注册！可以用这条命令直接下载)
<code>
$ wget http://framework.zend.com/releases/ZendFramework-1.11.11/ZendFramework-1.11.11-minimal.tar.gz
$ php -i | grep include_path
</code>
(用源码包安装的php，若显示php命令不存在，就把php安装目录里bin文件下的php文件复制到可执行目录下，如/bin或/usr/bin)</p>

<!-- more -->


<p>在服务器文件根目录apache2/htdocs下执行
<code>
$ zf create project [projectname]
</code>
(projectname即你要的项目名，不加方括号)，会生成一个projectname的目录。此时目录下有application,docs,library,public,tests目录。<br/>
把之前的Zend文件夹再复制到library目录下。</p>

<h3>配置php和apache，启动rewrite功能</h3>

<p>进入apache的源码目录(不是安装目录)输入
<code>
$ find -name mod_rewrite.c
$ cd PATH/to/mod_rewrite.c  #进入mod_rewrite.c所在目录
$ sudo /usr/local/apache2/bin/apxs -c mod_rewrite.c
$ sudo /usr/local/apache2/bin/apxs -i -a -n mod_rewrite mod_rewrite.la
</code>
成功的话应该在你的apache的modules目录中编译出一个<code>mod_rewrite.so</code>文件。<br/>
编辑httpd.conf文件，确认httpd.conf中已经包含<code>mod_rewrite.so</code>的加载语句，如下：
<code>
LoadModule rewrite_module modules/mod_rewrite.so  #(即把此语句前的#号去掉)  
</code>
这时你的apache应该已经支持rewrite了。<br/>
修改<code>apache/conf/httpd.conf </code>
把
<code>
AllowOverride None
</code>
的None改成 All<br/>
重启apache</p>

<p>若成功的话打开浏览器进入<code>localhost/projectname/public</code>可以看到Zend Frame的欢迎界面</p>

<p>注，我安装的版本是Zend Framework Version: 1.11.11，其他版本没有试过，查询版本信息可用
<code>
zf show version
</code>
安装过程中遇到了许多问题，比如服务器加载失败，出现500错误等。按照一些教程去弄虚拟主机，并设置library为apache文件根目录。结果证明这些都是多余的。如果按照上面的步骤安装出现了问题，可以查看apache2/log/error_log文件。如出现下面的问题，可以参考参考资料里的<a href="http://ayiui4566.iteye.com/blog/662170">wamp+Zend框架配置问题</a>
<code>
 Request exceeded the limit of 10 internal     redirects due to probable configuration error. Use 'LimitInternalRecursion'     to increase the limit if necessary. Use 'LogLevel debug' to get a backtrace.
</code>
<code>
  /usr/local/apache2/htdocs/zftest/.htaccess:            Invalid command 'RewriteRule!\\.(js|ico|gif|jpg|png|css)$', perhaps             misspelled or defined by a module not included in the server configuration
</code>
<code>
   PHP Warning:  require_once(Zend/Application.php):      failed to open stream: No such file or directory in /usr/local/apache2/         htdocs/zftest/public/index.php on line 18
</code></p>

<h4>参考资料：</h4>

<p>   <a href="http://www.path8.net/tn/archives/961">Linux下Apache安装/增加mod_rewrite模块以启用rewrite功能</a><br/>
   <a href="http://ayiui4566.iteye.com/blog/662170">WAMP+Zend框架配置问题</a><br/>
   <a href="http://blog.csdn.net/daydreamingboy/article/details/6327527">Zend Framework学习日记(1)&mdash;环境搭建篇</a><br/>
   <a href="http://blog.csdn.net/mengxiangbaidu/article/details/7046568#">Zend Framework教程-用Zend命令行快速创建Zend应用</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux安装wecenter笔记]]></title>
    <link href="http://grunmin.github.io/blog/2013/07/25/fedoraan-zhuang-wecenterbi-ji/"/>
    <updated>2013-07-25T20:32:00+08:00</updated>
    <id>http://grunmin.github.io/blog/2013/07/25/fedoraan-zhuang-wecenterbi-ji</id>
    <content type="html"><![CDATA[<p><em>此文是前文配置lamp的延伸</em><br/>
在前面的一片文章里，用源码包安装的方式搭建了lamp环境，wecenter需要服务器支持mysqli或者pdo模块,支持curl,GD图像处理库，原来安装lamp过程中并无相关方面的配置，鼓捣了半天之后其他条件都已满足，唯独GD图像处理库不能安装。</p>

<!-- more -->


<p>谷歌了许多结果，一一尝试，一一失败，最后看到<a href="http://tech.soft6.com/665/16/78687.html">这篇文章</a>，果断把之前编好的php删除了按照文中方法重装一遍，居然成功了！</p>

<p>现在从零开始记录一下安装过程。</p>

<p>按照上一篇笔记配置好lamp环境，php先不安装。
把下载下来的wecenter里的UPLOAD复制到/usr/local/apache2/htdocs/里（即文件根目录），打开浏览器，输入地址<code>http://localhost/UPLOAD/install</code>，进入安装界面。在我的机子上，一开始不能满足的条件是数据库模块，curl支持，图像处理库和目录权限。<br/>
从最简单的开始，因为后面还会要求UPLOAD下的文件开放权限，因此直接一个<br/>
```</p>

<h1>chmod 777 /usr/local/apache2/htdocs/UPLOAD</h1>

<p><code>
之后就是折腾了很久的GD，Linux下得GD库安装要比windows麻烦很多。先参照此文：http://tech.soft6.com/665/16/78687.html  
此前的多次实验表明这个是唯一比较靠谱的安装方法（当然不才眼界有限）。装好之后就可以进行下一步了。  
开启curl和mysqli或者pdo支持，可以用如下方法
以curl为例，首先  
</code></p>

<h1>cd /usr/local/php-***/ext/curl #进入源码包的curl目录</h1>

<h1>/usr/local/php/bin/phpize #运行phpize命令</h1>

<h1>./configure &mdash;with-php-config=/usr/local/php/bin/php-config</h1>

<h1>make &amp;&amp; make install</h1>

<p><code>
成功后可以看到创建的curl.so文件位于/usr/local/php/lib/php/extension/no-debug-non-zts-*******/,复制curl.so到/usr/local/php/ext下(没有目录则创建一个)，再敲入  
</code></p>

<h1>vi /usr/local/php/lib/php.ini​</h1>

<p>```
在加载模块(一堆extension处 大概第980行)加上一行extension=curl.so 修改extension_dir=“/usr/local/php/ext” (第819行),重启apache即可。(前面的操作如需立刻看到效果也需重启apache)</p>

<p><a href="http://blog.csdn.net/grunmin/article/details/9468639">这里</a>是增加php模块的方法介绍，mysqli可用此法解决。</p>

<p><em>注：用rpm包搭建lamp时没有出现上述问题</em></p>
]]></content>
  </entry>
  
</feed>
